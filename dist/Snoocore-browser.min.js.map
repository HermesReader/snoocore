{"version":3,"sources":["Snoocore-browser.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Snoocore","userConfiguration","self","this","_events2","EventEmitter","_userConfig","_UserConfig2","_throttle","_Throttle2","throttle","_request","_Request2","oauth","_OAuth2","oauthAppOnly","getExplicitAuthUrl","getImplicitAuthUrl","auth","refresh","deauth","_redditRequest","_RedditRequest2","on","responseError","emit","key","path","_interopRequireWildcard","obj","__esModule","default","_events","_util","_util2","_Request","_RedditRequest","_Throttle","_UserConfig","_OAuth","file","version","inherits","./OAuth","./RedditRequest","./Request","./Throttle","./UserConfig","./https/file","events","util",2,"post/api/new_captcha","post/api/clearflairtemplates","post/r/$/api/clearflairtemplates","post/api/deleteflair","post/r/$/api/deleteflair","post/api/deleteflairtemplate","post/r/$/api/deleteflairtemplate","post/api/flair","post/r/$/api/flair","post/api/flairconfig","post/r/$/api/flairconfig","post/api/flairtemplate","post/r/$/api/flairtemplate","post/api/selectflair","post/r/$/api/selectflair","post/api/setflairenabled","post/r/$/api/setflairenabled","post/api/comment","post/api/editusertext","get/api/morechildren","post/api/report","post/api/set_contest_mode","post/api/set_subreddit_sticky","post/api/submit","post/api/live/create","post/api/live/$/accept_contributor_invite","post/api/live/$/close_thread","post/api/live/$/delete_update","post/api/live/$/edit","post/api/live/$/invite_contributor","post/api/live/$/leave_contributor","post/api/live/$/report","post/api/live/$/rm_contributor","post/api/live/$/rm_contributor_invite","post/api/live/$/set_contributor_permissions","post/api/live/$/strike_update","post/api/live/$/update","post/api/compose","post/api/accept_moderator_invite","post/r/$/api/accept_moderator_invite","post/api/distinguish","post/api/delete_sr_banner","post/r/$/api/delete_sr_banner","post/api/delete_sr_header","post/r/$/api/delete_sr_header","post/api/delete_sr_icon","post/r/$/api/delete_sr_icon","post/api/delete_sr_img","post/r/$/api/delete_sr_img","post/api/site_admin","post/api/$","post/r/$/api/subreddit_stylesheet","post/api/friend","post/r/$/api/friend","post/api/setpermissions","post/r/$/api/setpermissions",3,"Buffer","subject","encoding","noZero","type","base64clean","byteLength","TypeError","isArray","data","Math","floor","kMaxLength","RangeError","toString","buf","TYPED_ARRAY_SUPPORT","_augment","Uint8Array","_isBuffer","_set","isArrayish","isBuffer","readUInt8","write","hexWrite","string","offset","Number","remaining","strLen","byte","parseInt","substr","isNaN","utf8Write","charsWritten","blitBuffer","utf8ToBytes","asciiWrite","asciiToBytes","binaryWrite","base64Write","base64ToBytes","utf16leWrite","utf16leToBytes","base64Slice","start","end","base64","fromByteArray","slice","utf8Slice","res","tmp","min","decodeUtf8Char","String","fromCharCode","asciiSlice","ret","binarySlice","hexSlice","len","out","toHex","utf16leSlice","bytes","checkOffset","ext","checkInt","value","max","objectWriteUInt16","littleEndian","j","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","str","stringtrim","replace","INVALID_BASE64_RE","trim","byteArray","b","charCodeAt","push","h","encodeURIComponent","split","c","hi","lo","toByteArray","src","dst","unitSize","decodeURIComponent","err","SlowBuffer","INSPECT_MAX_BYTES","poolSize","ArrayBuffer","arr","foo","subarray","compare","x","y","isEncoding","toLowerCase","concat","list","totalLength","undefined","pos","item","copy","prototype","parent","loweredCase","Infinity","equals","inspect","match","join","get","console","log","set","v","writeUInt8","isFinite","swap","toJSON","Array","_arr","sliceLen","newBuf","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt8","readInt16LE","val","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","target","target_start","source","fill","toArrayBuffer","buffer","BP","constructor","_get","toLocaleString","base64-js","is-array",4,"lookup","decode","elt","PLUS","SLASH","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","placeHolders","charAt","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","base64js",5,"isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","pow","rt","abs","LN2",6,"Object",7,"_maxListeners","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","er","handler","args","listeners","error","arguments","apply","addListener","listener","newListener","warned","trace","once","g","removeListener","fired","position","splice","removeAllListeners","listenerCount","emitter",8,"create","ctor","superCtor","super_","enumerable","writable","configurable","TempCtor",9,"process","normalizeArray","parts","allowAboveRoot","up","last","unshift","filter","xs","splitPathRe","splitPath","filename","exec","resolve","resolvedPath","resolvedAbsolute","cwd","p","normalize","isAbsolute","trailingSlash","paths","relative","from","to","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","result","root","dir","basename","extname","_process",10,"noop","nextTick","canSetImmediate","window","setImmediate","canMutationObserver","MutationObserver","canPost","postMessage","addEventListener","queue","hiddenDiv","document","createElement","observer","queueList","forEach","fn","observe","attributes","setAttribute","ev","stopPropagation","shift","setTimeout","title","browser","env","argv","off","binding","chdir",11,"global","errors","map","array","mapDomain","regexSeparators","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","codePoint","base","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","damp","baseMinusTMin","tMax","skew","input","basic","index","oldi","w","baseMinusT","inputLength","initialN","bias","initialBias","lastIndexOf","maxInt","tMin","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","domain","regexPunycode","test","toASCII","regexNonASCII","freeExports","freeModule","freeGlobal","punycode","overflow","not-basic","invalid-input","ucs2","define","amd","nodeType","hasOwnProperty",12,"prop","qs","eq","options","regexp","maxKeys","kstr","vstr","idx","indexOf",13,"stringifyPrimitive","name","objectKeys","ks","keys",14,"parse","stringify","./decode","./encode",15,"Url","protocol","slashes","host","port","hostname","hash","search","query","pathname","href","urlParse","url","parseQueryString","slashesDenoteHost","urlFormat","isString","format","urlResolve","urlResolveObject","resolveObject","isNull","isNullOrUndefined","protocolPattern","portPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","http","https","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","rest","proto","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","domainArray","newOut","ae","esc","escape","qm","rel","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","pop","authInHost","hasTrailingSlash",16,17,"opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","JSON","desc","getOwnPropertyDescriptor","line","numLinesEst","reduce","prev","cur","ar","isSymbol","re","objectToString","isPrimitive","pad","timestamp","time","getHours","getMinutes","getSeconds","getDate","months","getMonth","formatRegExp","objects","_","deprecate","msg","deprecated","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","debuglog","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","origin","add","./support/isBuffer",18,"regexAstralSymbols","regexAsciiWhitelist","regexBmpWhitelist","regexEncodeNonAscii","encodeMap","Á","á","Ă","ă","∾","∿","∾̳","Â","â","´","А","а","Æ","æ","⁡","𝔄","𝔞","À","à","ℵ","Α","α","Ā","ā","⨿","&","⩕","⩓","∧","⩜","⩘","⩚","∠","⦤","⦨","⦩","⦪","⦫","⦬","⦭","⦮","⦯","∡","∟","⊾","⦝","∢","Å","⍼","Ą","ą","𝔸","𝕒","⩯","≈","⩰","≊","≋","'","å","𝒜","𝒶","≔","*","≍","Ã","ã","Ä","ä","∳","⨑","≌","϶","‵","∽","⋍","∖","⫧","⊽","⌅","⌆","⎵","⎶","Б","б","„","∵","⦰","ℬ","Β","β","ℶ","≬","𝔅","𝔟","⋂","◯","⋃","⨀","⨁","⨂","⨆","★","▽","△","⨄","⋁","⋀","⤍","⧫","▪","▴","▾","◂","▸","␣","▒","░","▓","█","=⃥","≡⃥","⫭","⌐","𝔹","𝕓","⊥","⋈","⧉","┐","╕","╖","╗","┌","╒","╓","╔","─","═","┬","╤","╥","╦","┴","╧","╨","╩","⊟","⊞","⊠","┘","╛","╜","╝","└","╘","╙","╚","│","║","┼","╪","╫","╬","┤","╡","╢","╣","├","╞","╟","╠","˘","¦","𝒷","⁏","⧅","\\","⟈","•","≎","⪮","≏","Ć","ć","⩄","⩉","⩋","∩","⋒","⩇","⩀","ⅅ","∩︀","⁁","ˇ","ℭ","⩍","Č","č","Ç","ç","Ĉ","ĉ","∰","⩌","⩐","Ċ","ċ","¸","⦲","¢","·","𝔠","Ч","ч","✓","Χ","χ","ˆ","≗","↺","↻","⊛","⊚","⊝","⊙","®","Ⓢ","⊖","⊕","⊗","○","⧃","⨐","⫯","⧂","∲","”","’","♣",":","∷","⩴",",","@","∁","∘","ℂ","≅","⩭","≡","∮","∯","𝕔","∐","©","℗","↵","✗","⨯","𝒞","𝒸","⫏","⫑","⫐","⫒","⋯","⤸","⤵","⋞","⋟","↶","⤽","⩈","⩆","∪","⋓","⩊","⊍","⩅","∪︀","↷","⤼","⋎","⋏","¤","∱","⌭","†","‡","ℸ","↓","↡","⇓","‐","⫤","⊣","⤏","˝","Ď","ď","Д","д","⇊","ⅆ","⤑","⩷","°","∇","Δ","δ","⦱","⥿","𝔇","𝔡","⥥","⇃","⇂","˙","`","˜","⋄","♦","¨","ϝ","⋲","÷","⋇","Ђ","ђ","⌞","⌍","$","𝔻","𝕕","⃜","≐","≑","∸","∔","⊡","⇐","⇔","⟸","⟺","⟹","⇒","⊨","⇑","⇕","∥","⤓","⇵","̑","⥐","⥞","⥖","↽","⥟","⥗","⇁","↧","⊤","⤐","⌟","⌌","𝒟","𝒹","Ѕ","ѕ","⧶","Đ","đ","⋱","▿","⥯","⦦","Џ","џ","⟿","É","é","⩮","Ě","ě","Ê","ê","≖","≕","Э","э","Ė","ė","ⅇ","≒","𝔈","𝔢","⪚","È","è","⪖","⪘","⪙","∈","⏧","ℓ","⪕","⪗","Ē","ē","∅","◻","▫"," "," "," ","Ŋ","ŋ"," ","Ę","ę","𝔼","𝕖","⋕","⧣","⩱","ε","Ε","ϵ","≂","⩵","=","≟","⇌","⩸","⧥","⥱","≓","ℯ","ℰ","⩳","Η","η","Ð","ð","Ë","ë","€","!","∃","Ф","ф","♀","ﬃ","ﬀ","ﬄ","𝔉","𝔣","ﬁ","◼","fj","♭","ﬂ","▱","ƒ","𝔽","𝕗","∀","⋔","⫙","ℱ","⨍","½","⅓","¼","⅕","⅙","⅛","⅔","⅖","¾","⅗","⅜","⅘","⅚","⅝","⅞","⁄","⌢","𝒻","ǵ","Γ","γ","Ϝ","⪆","Ğ","ğ","Ģ","Ĝ","ĝ","Г","г","Ġ","ġ","≥","≧","⪌","⋛","⩾","⪩","⪀","⪂","⪄","⋛︀","⪔","𝔊","𝔤","≫","⋙","ℷ","Ѓ","ѓ","⪥","≷","⪒","⪤","⪊","⪈","≩","⋧","𝔾","𝕘","⪢","≳","𝒢","ℊ","⪎","⪐","⪧","⩺",">","⋗","⦕","⩼","⥸","≩︀"," ","ℋ","Ъ","ъ","⥈","↔","↭","^","ℏ","Ĥ","ĥ","♥","…","⊹","𝔥","ℌ","⤥","⤦","⇿","∻","↩","↪","𝕙","ℍ","―","𝒽","Ħ","ħ","⁃","Í","í","⁣","Î","î","И","и","İ","Е","е","¡","𝔦","ℑ","Ì","ì","ⅈ","⨌","∭","⧜","℩","Ĳ","ĳ","Ī","ī","ℐ","ı","⊷","Ƶ","℅","∞","⧝","⊺","∫","∬","ℤ","⨗","⨼","⁢","Ё","ё","Į","į","𝕀","𝕚","Ι","ι","¿","𝒾","⋵","⋹","⋴","⋳","Ĩ","ĩ","І","і","Ï","ï","Ĵ","ĵ","Й","й","𝔍","𝔧","ȷ","𝕁","𝕛","𝒥","𝒿","Ј","ј","Є","є","Κ","κ","ϰ","Ķ","ķ","К","к","𝔎","𝔨","ĸ","Х","х","Ќ","ќ","𝕂","𝕜","𝒦","𝓀","⇚","Ĺ","ĺ","⦴","ℒ","Λ","λ","⟨","⟪","⦑","⪅","«","⇤","⤟","←","↞","⤝","↫","⤹","⥳","↢","⤙","⤛","⪫","⪭","⪭︀","⤌","⤎","❲","{","[","⦋","⦏","⦍","Ľ","ľ","Ļ","ļ","⌈","Л","л","⤶","“","⥧","⥋","↲","≤","≦","⇆","⟦","⥡","⥙","⌊","↼","⇇","⇋","⥎","↤","⥚","⋋","⧏","⊲","⊴","⥑","⥠","⥘","↿","⥒","⪋","⋚","⩽","⪨","⩿","⪁","⪃","⋚︀","⪓","⋖","≶","⪡","≲","⥼","𝔏","𝔩","⪑","⥢","⥪","▄","Љ","љ","≪","⋘","⥫","◺","Ŀ","ŀ","⎰","⪉","⪇","≨","⋦","⟬","⇽","⟵","⟷","⟼","⟶","↬","⦅","𝕃","𝕝","⨭","⨴","∗","↙","↘","◊","(","⦓","⥭","‎","⊿","‹","𝓁","↰","⪍","⪏","‘","‚","Ł","ł","⪦","⩹","<","⋉","⥶","⩻","◃","⦖","⥊","⥦","≨︀","¯","♂","✠","⤅","↦","↥","▮","⨩","М","м","—","∺"," ","ℳ","𝔐","𝔪","℧","µ","⫰","∣","−","⨪","∓","⫛","⊧","𝕄","𝕞","𝓂","Μ","μ","⊸","Ń","ń","∠⃒","≉","⩰̸","≋̸","ŉ","♮","ℕ"," ","≎̸","≏̸","⩃","Ň","ň","Ņ","ņ","≇","⩭̸","⩂","Н","н","–","⤤","↗","⇗","≠","≐̸","​","≢","⤨","≂̸","\n","∄","𝔑","𝔫","≧̸","≱","⩾̸","⋙̸","≵","≫⃒","≯","≫̸","↮","⇎","⫲","∋","⋼","⋺","Њ","њ","↚","⇍","‥","≦̸","≰","⩽̸","≮","⋘̸","≴","≪⃒","⋪","⋬","≪̸","∤","⁠","𝕟","⫬","¬","≭","∦","∉","≹","⋵̸","⋹̸","⋷","⋶","⧏̸","≸","⪢̸","⪡̸","∌","⋾","⋽","⊀","⪯̸","⋠","⧐̸","⋫","⋭","⊏̸","⋢","⊐̸","⋣","⊂⃒","⊈","⊁","⪰̸","⋡","≿̸","⊃⃒","⊉","≁","≄","⫽⃥","∂̸","⨔","⤳̸","↛","⇏","↝̸","𝒩","𝓃","⊄","⫅̸","⊅","⫆̸","Ñ","ñ","Ν","ν","#","№"," ","≍⃒","⊬","⊭","⊮","⊯","≥⃒",">⃒","⤄","⧞","⤂","≤⃒","<⃒","⊴⃒","⤃","⊵⃒","∼⃒","⤣","↖","⇖","⤧","Ó","ó","Ô","ô","О","о","Ő","ő","⨸","⦼","Œ","œ","⦿","𝔒","𝔬","˛","Ò","ò","⧁","⦵","Ω","⦾","⦻","‾","⧀","Ō","ō","ω","Ο","ο","⦶","𝕆","𝕠","⦷","⦹","⩔","∨","⩝","ℴ","ª","º","⊶","⩖","⩗","⩛","𝒪","Ø","ø","⊘","Õ","õ","⨶","⨷","Ö","ö","⌽","⏞","⎴","⏜","¶","⫳","⫽","∂","П","п","%",".","‰","‱","𝔓","𝔭","Φ","φ","ϕ","☎","Π","π","ϖ","ℎ","⨣","⨢","+","⨥","⩲","±","⨦","⨧","⨕","𝕡","ℙ","£","⪷","⪻","≺","≼","⪯","≾","⪹","⪵","⋨","⪳","′","″","∏","⌮","⌒","⌓","∝","⊰","𝒫","𝓅","Ψ","ψ"," ","𝔔","𝔮","𝕢","ℚ","⁗","𝒬","𝓆","⨖","?","\"","⇛","∽̱","Ŕ","ŕ","√","⦳","⟩","⟫","⦒","⦥","»","⥵","⇥","⤠","⤳","→","↠","⤞","⥅","⥴","⤖","↣","↝","⤚","⤜","∶","❳","}","]","⦌","⦎","⦐","Ř","ř","Ŗ","ŗ","⌉","Р","р","⤷","⥩","↳","ℜ","ℛ","ℝ","▭","⥽","⌋","𝔯","⥤","⇀","⥬","Ρ","ρ","ϱ","⇄","⟧","⥝","⥕","⇉","⊢","⥛","⋌","⧐","⊳","⊵","⥏","⥜","⥔","↾","⥓","˚","‏","⎱","⫮","⟭","⇾","⦆","𝕣","⨮","⨵","⥰",")","⦔","⨒","›","𝓇","↱","⋊","▹","⧎","⧴","⥨","℞","Ś","ś","⪸","Š","š","⪼","≻","≽","⪰","⪴","Ş","ş","Ŝ","ŝ","⪺","⪶","⋩","⨓","≿","С","с","⋅","⩦","⇘","§",";","⤩","✶","𝔖","𝔰","♯","Щ","щ","Ш","ш","↑","­","Σ","σ","ς","∼","⩪","≃","⪞","⪠","⪝","⪟","≆","⨤","⥲","⨳","⧤","⌣","⪪","⪬","⪬︀","Ь","ь","⌿","⧄","/","𝕊","𝕤","♠","⊓","⊓︀","⊔","⊔︀","⊏","⊑","⊐","⊒","□","𝒮","𝓈","⋆","☆","⊂","⋐","⪽","⫅","⊆","⫃","⫁","⫋","⊊","⪿","⥹","⫇","⫕","⫓","∑","♪","¹","²","³","⊃","⋑","⪾","⫘","⫆","⊇","⫄","⟉","⫗","⥻","⫂","⫌","⊋","⫀","⫈","⫔","⫖","⇙","⤪","ß","\t","⌖","Τ","τ","Ť","ť","Ţ","ţ","Т","т","⃛","⌕","𝔗","𝔱","∴","Θ","θ","ϑ","  "," ","Þ","þ","⨱","×","⨰","⌶","⫱","𝕋","𝕥","⫚","‴","™","▵","≜","◬","⨺","⨹","⧍","⨻","⏢","𝒯","𝓉","Ц","ц","Ћ","ћ","Ŧ","ŧ","Ú","ú","↟","⥉","Ў","ў","Ŭ","ŭ","Û","û","У","у","⇅","Ű","ű","⥮","⥾","𝔘","𝔲","Ù","ù","⥣","▀","⌜","⌏","◸","Ū","ū","⏟","⏝","⊎","Ų","ų","𝕌","𝕦","⤒","↕","υ","ϒ","Υ","⇈","⌝","⌎","Ů","ů","◹","𝒰","𝓊","⋰","Ũ","ũ","Ü","ü","⦧","⦜","⊊︀","⫋︀","⊋︀","⫌︀","⫨","⫫","⫩","В","в","⊩","⊫","⫦","⊻","≚","⋮","|","‖","❘","≀","𝔙","𝔳","𝕍","𝕧","𝒱","𝓋","⊪","⦚","Ŵ","ŵ","⩟","≙","℘","𝔚","𝔴","𝕎","𝕨","𝒲","𝓌","𝔛","𝔵","Ξ","ξ","⋻","𝕏","𝕩","𝒳","𝓍","Ý","ý","Я","я","Ŷ","ŷ","Ы","ы","¥","𝔜","𝔶","Ї","ї","𝕐","𝕪","𝒴","𝓎","Ю","ю","ÿ","Ÿ","Ź","ź","Ž","ž","З","з","Ż","ż","ℨ","Ζ","ζ","𝔷","Ж","ж","⇝","𝕫","𝒵","𝓏","‍","‌","regexEscape","escapeMap","regexInvalidEntity","regexInvalidRawCodePoint","regexDecode","decodeMap","Aacute","aacute","Abreve","abreve","ac","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","amp","AMP","andand","And","and","andd","andslope","andv","ang","ange","angle","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angmsd","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","apacir","ap","apE","ape","apid","apos","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","barwed","Barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","because","Because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxdl","boxdL","boxDl","boxDL","boxdr","boxdR","boxDr","boxDR","boxh","boxH","boxhd","boxHd","boxhD","boxHD","boxhu","boxHu","boxhU","boxHU","boxminus","boxplus","boxtimes","boxul","boxuL","boxUl","boxUL","boxur","boxuR","boxUr","boxUR","boxv","boxV","boxvh","boxvH","boxVh","boxVH","boxvl","boxvL","boxVl","boxVL","boxvr","boxvR","boxVr","boxVR","bprime","breve","Breve","brvbar","bscr","Bscr","bsemi","bsim","bsime","bsolb","bsol","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","capand","capbrcup","capcap","cap","Cap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","centerdot","CenterDot","cfr","Cfr","CHcy","chcy","check","checkmark","Chi","chi","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cir","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","colon","Colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","conint","Conint","ContourIntegral","copf","Copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","cross","Cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cupbrcap","cupcap","CupCap","cup","Cup","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dagger","Dagger","daleth","darr","Darr","dArr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","ddagger","ddarr","DD","dd","DDotrahd","ddotseq","deg","Del","Delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","diamond","Diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrowBar","downarrow","DownArrow","Downarrow","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVectorBar","DownLeftVector","DownRightTeeVector","DownRightVectorBar","DownRightVector","DownTeeArrow","DownTee","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","Ecirc","ecirc","ecir","ecolon","Ecy","ecy","eDDot","Edot","edot","eDot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","el","Element","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp13","emsp14","emsp","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","escr","Escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","exponentiale","ExponentialE","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","forall","ForAll","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","Fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","ge","gE","gEl","gel","geq","geqq","geqslant","gescc","ges","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","gg","Gg","ggg","gimel","GJcy","gjcy","gla","gl","glE","glj","gnap","gnapprox","gne","gnE","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","gtcc","gtcir","gt","GT","Gt","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","harrcir","harr","hArr","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","hfr","Hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","Hopf","horbar","HorizontalLine","hscr","Hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","ifr","Ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","Im","imof","imped","Implies","incare","in","infin","infintie","inodot","intcal","int","Int","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","iscr","Iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","lang","Lang","langd","langle","lap","Laplacetrf","laquo","larrb","larrbfs","larr","Larr","lArr","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","latail","lAtail","lat","late","lates","lbarr","lBarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","lE","LeftAngleBracket","LeftArrowBar","leftarrow","LeftArrow","Leftarrow","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVectorBar","LeftDownVector","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","LeftRightArrow","Leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTeeArrow","LeftTee","LeftTeeVector","leftthreetimes","LeftTriangleBar","LeftTriangle","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVectorBar","LeftUpVector","LeftVectorBar","LeftVector","lEg","leg","leq","leqq","leqslant","lescc","les","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","llarr","ll","Ll","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoustache","lmoust","lnap","lnapprox","lne","lnE","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","LongLeftArrow","Longleftarrow","longleftrightarrow","LongLeftRightArrow","Longleftrightarrow","longmapsto","longrightarrow","LongRightArrow","Longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","Lscr","lsh","Lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","ltcc","ltcir","lt","LT","Lt","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","midast","midcir","mid","middot","minusb","minus","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","mscr","Mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natural","naturals","natur","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","nearhk","nearr","neArr","nearrow","ne","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nharr","nhArr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlarr","nlArr","nldr","nlE","nle","nleftarrow","nLeftarrow","nleftrightarrow","nLeftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","nopf","Nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangleBar","NotLeftTriangle","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangleBar","NotRightTriangle","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","nparallel","npar","nparsl","npart","npolint","npr","nprcue","nprec","npreceq","npre","nrarrc","nrarr","nrArr","nrarrw","nrightarrow","nRightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","numero","numsp","nvap","nvdash","nvDash","nVdash","nVDash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwarr","nwArr","nwarrow","nwnear","Oacute","oacute","oast","Ocirc","ocirc","ocir","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","orarr","Or","or","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","otimesas","Otimes","otimes","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","para","parallel","par","parsim","parsl","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plusacir","plusb","pluscir","plus","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","popf","Popf","pound","prap","Pr","pr","prcue","precapprox","prec","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","pre","prE","precsim","prime","Prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","Proportional","Proportion","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","qopf","Qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","quot","QUOT","rAarr","race","Racute","racute","radic","raemptyv","rang","Rang","rangd","range","rangle","raquo","rarrap","rarrb","rarrbfs","rarrc","rarr","Rarr","rArr","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","ratail","rAtail","ratio","rationals","rbarr","rBarr","RBarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","Re","rect","reg","REG","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","rfr","Rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrowBar","rightarrow","RightArrow","Rightarrow","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVectorBar","RightDownVector","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTeeArrow","RightTee","RightTeeVector","rightthreetimes","RightTriangleBar","RightTriangle","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVectorBar","RightUpVector","RightVectorBar","RightVector","ring","risingdotseq","rlarr","rlhar","rlm","rmoustache","rmoust","rnmid","roang","roarr","robrk","ropar","ropf","Ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","rscr","Rscr","rsh","Rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","scap","Scaron","scaron","Sc","sc","sccue","sce","scE","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdotb","sdot","sdote","searhk","searr","seArr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","solbar","solb","sol","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","square","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squ","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","sub","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","Subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succapprox","succ","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","sum","Sum","sung","sup1","sup2","sup3","sup","Sup","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","Supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swarr","swArr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","therefore","Therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","ThinSpace","thinsp","thkap","thksim","THORN","thorn","tilde","Tilde","TildeEqual","TildeFullEqual","TildeTilde","timesbar","timesb","times","timesd","tint","toea","topbot","topcir","top","Topf","topf","topfork","tosa","tprime","trade","TRADE","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","uarr","Uarr","uArr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrowBar","uparrow","UpArrow","Uparrow","UpArrowDownArrow","updownarrow","UpDownArrow","Updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","upsi","Upsi","upsih","Upsilon","upsilon","UpTeeArrow","UpTee","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","vArr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vBar","Vbar","vBarv","Vcy","vcy","vdash","vDash","Vdash","VDash","Vdashl","veebar","vee","Vee","veeeq","vellip","verbar","Verbar","vert","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","wedge","Wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xharr","xhArr","Xi","xi","xlarr","xlArr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrarr","xrArr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","yuml","Yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","zfr","Zfr","ZHcy","zhcy","zigrarr","zopf","Zopf","Zscr","zscr","zwj","zwnj","decodeMapLegacy","decodeMapNumeric","0","128","130","131","132","133","134","135","136","137","138","139","140","142","145","146","147","148","149","150","151","152","153","154","155","156","158","159","invalidReferenceCodePoints","object","has","propertyName","contains","merge","defaults","codePointToSymbol","strict","parseError","hexEscape","symbol","message","encodeEverything","useNamedReferences","allowUnsafeSymbols","$0","high","low","html","$1","$2","$3","$4","$5","$6","$7","semicolon","hexDigits","reference","next","isAttributeValue","he","unescape",19,"when","msec","delay","factory","./when",20,"makePromise","Scheduler","async","asap","scheduler","./Scheduler","./env","./makePromise",21,"_async","_running","_queue","_queueLen","_afterQueue","_afterQueueLen","drain","_drain","enqueue","task","run","afterQueue",22,"TimeoutError","captureStackTrace",23,"makeApply","Promise","thisArg","_defer","params","callAndResolve","_handler","fold","callAndResolveNext","tryCatchResolve","resolver","reject",24,"state","applier","any","promises","handleFulfill","handleReject","resolved","pending","become","_visitRemaining","visit","some","fulfill","results","nFulfill","nReject","notify","_traverse","predicate","then","keep","filterSync","filtered","settle","all","settleOne","toPromise","fulfilled","rejected","_unreport","liftCombine","reduceRight","z","applyFold","spread","onFulfilled","../apply","../state",25,"rejectInvalidPredicate","evaluatePredicate","maybeThenable","identity","createCatchFilter","runSideEffect","propagate","propagateValue","origCatch","done","onResult","onError","receiver","otherwise","onRejected","ensure","orElse","defaultValue","tap","onFulfilledSideEffect",26,"promise","_beget",27,28,"iterate","condition","unfold","unspool","newSeed","seed",29,"progress","onProgress",30,"ms","setTimer","handleDelay","resolveDelay","onTimeout","reason","timeout","clearTimer","../TimeoutError","../env",31,"throwit","report","handled","reported","logError","id","unreport","logInfo","formatObject","tasks","running","flush","localConsole","info","onPotentiallyUnhandledRejection","rejection","onPotentiallyUnhandledRejectionHandled","onFatalRejection","../format",32,"withThis","child","chain",33,"isNode","hasMutationObserver","WebKitMutationObserver","initMutationObserver","scheduled","node","createTextNode","characterData","MutationObs","capturedSetTimeout","clearTimeout","vertxRequire","vertx","cancelTimer","runOnLoop","runOnContext",34,"stack","tryStringify",35,"environment","Handler","init","promiseResolve","promiseReject","promiseNotify","Pending","isPromise","Async","getHandler","Rejected","never","foreverPendingPromise","defer","begetFrom","context","traverseWith","snd","traverse","tryCatch2","tryMap","mapAt","traverseAt","settleAt","Fulfilled","getHandlerMaybeThenable","visitRemaining","markAsHandled","runRace","getHandlerUntrusted","untrustedThen","Thenable","FailIfRejected","inheritedContext","createContext","consumers","thenable","AssimilateTask","errorId","_report","ReportTask","UnreportTask","cycle","ContinuationTask","continuation","ProgressTask","_then","tryAssimilate","Fold","failIfRejected","runContinuation1","enterContext","tryCatchReject","exitContext","runContinuation3","tryCatchReject3","runNotify","tryCatchReturn","inherit","Parent","Child","objectCreate","initEmitRejection","CustomEvent","hasCustomEvent","detail","bubbles","cancelable","dispatchEvent","emitRejection","fail","_state","cont","foreverPendingHandler","_resolve","_reject","_notify",36,"toPendingState","toRejectedState","toFulfilledState",37,"lift","attempt","Deferred","isPromiseLike","mapFunc","timed","flow","generate","unhandledRejection","feature","./lib/Promise","./lib/TimeoutError","./lib/apply","./lib/decorators/array","./lib/decorators/flow","./lib/decorators/fold","./lib/decorators/inspect","./lib/decorators/iterate","./lib/decorators/progress","./lib/decorators/timed","./lib/decorators/unhandledRejection","./lib/decorators/with",38,"Endpoint","userConfig","method","endpointPath","givenArgs","contextOptions","getProperties","section","sections","leaf","PROPERTY_TREE","_endpoints","normalizeContextOptions","cOptions","bypassAuth","_utils2","thisOrThat","decodeHtmlEntities","retryAttemptsLeft","retryAttempts","retryDelay","reauthAttemptsLeft","buildArgs","substring","apiType","api_type","needsApiTypeJson","buildUrl","serverOAuth","_path2","replaceUrlParams","properties","buildPropertyTree","endpointProperties","propertyTree","pathSections","endpointUrl","param","_path","_utils","_endpointProperties","_endpointProperties2","../build/endpointProperties","./utils",39,"OAuth","request","normalizeScope","scope","accessToken","INVALID_TOKEN","refreshToken","tokenType","hasRefreshToken","isAuthenticated","getAuthorizationHeader","client_id","ceil","random","redirect_uri","redirectUri","duration","response_type","baseUrl","serverWWW","mobile","_querystring2","getAuthUrl","TOKEN","EXPLICIT","IMPLICIT","oauthType","getAppOnlyTokenData","SCRIPT","grant_type","device_id","deviceId","getAuthenticatedTokenData","authorizationCode","username","password","_when2","getRefreshTokenData","refresh_token","getToken","tokenEnum","REFRESH","APP_ONLY","headers","buff","secret","Authorization","response","_body","authCodeOrAccessToken","isApplicationOnly","tokenData","token","access_token","token_type","expires_in","applicationOnlyAuth","isRefreshToken","tokenTypeHint","token_type_hint","_status","_querystring","_urlLib","_when",40,"RedditRequest","_oauth","getListing","endpoint","getSlice","callRedditApi","listing","listingIndex","count","before","after","allChildren","children","stickied","limit","newArgs","_Endpoint2","previous","requery","_oauthAppOnly","buildHeaders","userAgent","parsedUrl","_urlLib2","reqOptions","handleRedditResponse","getResponseError","status","body","handleServerErrorResponse","_delay2","handleClientErrorResponse","wwwAuth","_headers","canRenewAccessToken","isOAuthType","reauth","errmsg","handleSuccessResponse","_he2","urlOrPath","parsed","calls","verb","userGivenArgs","userContextOptions","_delay","_he","_Endpoint","./Endpoint","when/delay",41,"Request","formData","wait","_https2","_https","./https/httpsNode",42,"Throttle","throttleMs","_throttleMs","_throttleDelay","delayPromise",43,"UserConfig","missingMsg","thisOrThrow",44,"mimeType",45,"getSectionBoundary","boundary","getEndBoundary","encodeFieldPart","encodeFilePart","getMultipartFormData","fields","files","dataBuffer","getData","contentType","contentLength","singleFile",46,"defineProperty","_form","_form2","XMLHttpRequest","open","headerKey","setRequestHeader","onreadystatechange","readyState","getAllResponseHeaders","responseText","send","./form",47,"tryThis","that","orThrowMessage"],"mappings":"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","file":"Snoocore-browser.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function _interopRequireWildcard(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n};\n\n// Node.js libraries\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireWildcard(_events);\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireWildcard(_util);\n\n// Our modules\n\nvar _Request = require('./Request');\n\nvar _Request2 = _interopRequireWildcard(_Request);\n\nvar _RedditRequest = require('./RedditRequest');\n\nvar _RedditRequest2 = _interopRequireWildcard(_RedditRequest);\n\nvar _Throttle = require('./Throttle');\n\nvar _Throttle2 = _interopRequireWildcard(_Throttle);\n\nvar _UserConfig = require('./UserConfig');\n\nvar _UserConfig2 = _interopRequireWildcard(_UserConfig);\n\nvar _OAuth = require('./OAuth');\n\nvar _OAuth2 = _interopRequireWildcard(_OAuth);\n\nSnoocore.file = require('./https/file');\nSnoocore.version = '3.0.0';\n\nmodule.exports = Snoocore;\n_util2['default'].inherits(Snoocore, _events2['default'].EventEmitter);\nfunction Snoocore(userConfiguration) {\n\n  var self = this;\n\n  _events2['default'].EventEmitter.call(self);\n\n  // @TODO - this is a \"god object\" of sorts.\n  self._userConfig = new _UserConfig2['default'](userConfiguration);\n\n  self._throttle = new _Throttle2['default'](self._userConfig.throttle);\n\n  self._request = new _Request2['default'](self._throttle);\n\n  // Two OAuth instances. One for authenticated users, and another for\n  // Application only OAuth. Two are needed in the instance where\n  // a user wants to bypass authentication for a call - we don't want\n  // to waste time by creating a new app only instance, authenticating,\n  // etc.\n  self.oauth = new _OAuth2['default'](self._userConfig, self._request);\n  self.oauthAppOnly = new _OAuth2['default'](self._userConfig, self._request);\n\n  // Expose OAuth functions in here\n  self.getExplicitAuthUrl = self.oauth.getExplicitAuthUrl;\n  self.getImplicitAuthUrl = self.oauth.getImplicitAuthUrl;\n  self.auth = self.oauth.auth;\n  self.refresh = self.oauth.refresh;\n  self.deauth = self.oauth.deauth;\n\n  self._redditRequest = new _RedditRequest2['default'](self._userConfig, self._request, self.oauth, self.oauthAppOnly);\n\n  // bubble up the events\n  self._redditRequest.on('server_error', function (responseError) {\n    self.emit('server_error', responseError);\n  });\n\n  self._redditRequest.on('access_token_expired', function (responseError) {\n    self.emit('access_token_expired', responseError);\n  });\n\n  /*\n     Make self._redditRequest.path the primary function that we return, but\n     still allow access to the objects defined on self\n   */\n  var key;\n  for (key in self) {\n    self._redditRequest.path[key] = self[key];\n  }\n\n  self = self._redditRequest.path;\n  return self;\n}\n\n},{\"./OAuth\":39,\"./RedditRequest\":40,\"./Request\":41,\"./Throttle\":42,\"./UserConfig\":43,\"./https/file\":44,\"events\":7,\"util\":17}],2:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n  \"post/api/new_captcha\": \"a\",\n  \"post/api/clearflairtemplates\": \"a\",\n  \"post/r/$/api/clearflairtemplates\": \"a\",\n  \"post/api/deleteflair\": \"a\",\n  \"post/r/$/api/deleteflair\": \"a\",\n  \"post/api/deleteflairtemplate\": \"a\",\n  \"post/r/$/api/deleteflairtemplate\": \"a\",\n  \"post/api/flair\": \"a\",\n  \"post/r/$/api/flair\": \"a\",\n  \"post/api/flairconfig\": \"a\",\n  \"post/r/$/api/flairconfig\": \"a\",\n  \"post/api/flairtemplate\": \"a\",\n  \"post/r/$/api/flairtemplate\": \"a\",\n  \"post/api/selectflair\": \"a\",\n  \"post/r/$/api/selectflair\": \"a\",\n  \"post/api/setflairenabled\": \"a\",\n  \"post/r/$/api/setflairenabled\": \"a\",\n  \"post/api/comment\": \"a\",\n  \"post/api/editusertext\": \"a\",\n  \"get/api/morechildren\": \"a\",\n  \"post/api/report\": \"a\",\n  \"post/api/set_contest_mode\": \"a\",\n  \"post/api/set_subreddit_sticky\": \"a\",\n  \"post/api/submit\": \"a\",\n  \"post/api/live/create\": \"a\",\n  \"post/api/live/$/accept_contributor_invite\": \"a\",\n  \"post/api/live/$/close_thread\": \"a\",\n  \"post/api/live/$/delete_update\": \"a\",\n  \"post/api/live/$/edit\": \"a\",\n  \"post/api/live/$/invite_contributor\": \"a\",\n  \"post/api/live/$/leave_contributor\": \"a\",\n  \"post/api/live/$/report\": \"a\",\n  \"post/api/live/$/rm_contributor\": \"a\",\n  \"post/api/live/$/rm_contributor_invite\": \"a\",\n  \"post/api/live/$/set_contributor_permissions\": \"a\",\n  \"post/api/live/$/strike_update\": \"a\",\n  \"post/api/live/$/update\": \"a\",\n  \"post/api/compose\": \"a\",\n  \"post/api/accept_moderator_invite\": \"a\",\n  \"post/r/$/api/accept_moderator_invite\": \"a\",\n  \"post/api/distinguish\": \"a\",\n  \"post/api/delete_sr_banner\": \"a\",\n  \"post/r/$/api/delete_sr_banner\": \"a\",\n  \"post/api/delete_sr_header\": \"a\",\n  \"post/r/$/api/delete_sr_header\": \"a\",\n  \"post/api/delete_sr_icon\": \"a\",\n  \"post/r/$/api/delete_sr_icon\": \"a\",\n  \"post/api/delete_sr_img\": \"a\",\n  \"post/r/$/api/delete_sr_img\": \"a\",\n  \"post/api/site_admin\": \"a\",\n  \"post/api/$\": \"a\",\n  \"post/r/$/api/subreddit_stylesheet\": \"a\",\n  \"post/api/friend\": \"a\",\n  \"post/r/$/api/friend\": \"a\",\n  \"post/api/setpermissions\": \"a\",\n  \"post/r/$/api/setpermissions\": \"a\"\n};\n\n},{}],3:[function(require,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = Buffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar kMaxLength = 0x3fffffff\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Note:\n *\n * - Implementation must support adding new properties to `Uint8Array` instances.\n *   Firefox 4-29 lacked support, fixed in Firefox 30+.\n *   See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *  - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *  - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *    incorrect length in some situations.\n *\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they will\n * get the Object implementation, which is slower but will work correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = (function () {\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return 42 === arr.foo() && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        new Uint8Array(1).subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Find the length\n  var length\n  if (type === 'number')\n    length = subject > 0 ? subject >>> 0 : 0\n  else if (type === 'string') {\n    if (encoding === 'base64')\n      subject = base64clean(subject)\n    length = Buffer.byteLength(subject, encoding)\n  } else if (type === 'object' && subject !== null) { // assume object is array-like\n    if (subject.type === 'Buffer' && isArray(subject.data))\n      subject = subject.data\n    length = +subject.length > 0 ? Math.floor(+subject.length) : 0\n  } else\n    throw new TypeError('must start with number, buffer, array or string')\n\n  if (this.length > kMaxLength)\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n      'size: 0x' + kMaxLength.toString(16) + ' bytes')\n\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    buf = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    buf = this\n    buf.length = length\n    buf._isBuffer = true\n  }\n\n  var i\n  if (Buffer.TYPED_ARRAY_SUPPORT && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    buf._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    if (Buffer.isBuffer(subject)) {\n      for (i = 0; i < length; i++)\n        buf[i] = subject.readUInt8(i)\n    } else {\n      for (i = 0; i < length; i++)\n        buf[i] = ((subject[i] % 256) + 256) % 256\n    }\n  } else if (type === 'string') {\n    buf.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer.TYPED_ARRAY_SUPPORT && !noZero) {\n    for (i = 0; i < length; i++) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b))\n    throw new TypeError('Arguments must be Buffers')\n\n  var x = a.length\n  var y = b.length\n  for (var i = 0, len = Math.min(x, y); i < len && a[i] === b[i]; i++) {}\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function (list, totalLength) {\n  if (!isArray(list)) throw new TypeError('Usage: Buffer.concat(list[, length])')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (totalLength === undefined) {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    case 'hex':\n      ret = str.length >>> 1\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    default:\n      ret = str.length\n  }\n  return ret\n}\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\n// toString(encoding, start=0, end=buffer.length)\nBuffer.prototype.toString = function (encoding, start, end) {\n  var loweredCase = false\n\n  start = start >>> 0\n  end = end === undefined || end === Infinity ? this.length : end >>> 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase)\n          throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.equals = function (b) {\n  if(!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max)\n      str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  return Buffer.compare(this, b)\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(byte)) throw new Error('Invalid hex string')\n    buf[offset + i] = byte\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf8ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  var charsWritten = blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction utf16leWrite (buf, string, offset, length) {\n  var charsWritten = blitBuffer(utf16leToBytes(string), buf, offset, length, 2)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new TypeError('Unknown encoding: ' + encoding)\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  return asciiSlice(buf, start, end)\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len;\n    if (start < 0)\n      start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0)\n      end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start)\n    end = start\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    return Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    var newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n    return newBuf\n  }\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0)\n    throw new RangeError('offset is not uint')\n  if (offset + ext > length)\n    throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n      ((this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      this[offset + 3])\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80))\n    return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16) |\n      (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n      (this[offset + 1] << 16) |\n      (this[offset + 2] << 8) |\n      (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  if (!noAssert)\n    checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new TypeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new TypeError('index out of range')\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = value\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = value\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = value\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n  } else objectWriteUInt16(this, value, offset, true)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = value\n  } else objectWriteUInt16(this, value, offset, false)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else objectWriteUInt32(this, value, offset, true)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert)\n    checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = value\n  } else objectWriteUInt32(this, value, offset, false)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new TypeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new TypeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert)\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var source = this\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (!target_start) target_start = 0\n\n  // Copy 0 bytes; we're done\n  if (end === start) return\n  if (target.length === 0 || source.length === 0) return\n\n  // Fatal error conditions\n  if (end < start) throw new TypeError('sourceEnd < sourceStart')\n  if (target_start < 0 || target_start >= target.length)\n    throw new TypeError('targetStart out of bounds')\n  if (start < 0 || start >= source.length) throw new TypeError('sourceStart out of bounds')\n  if (end < 0 || end > source.length) throw new TypeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < len; i++) {\n      target[i + target_start] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new TypeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new TypeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new TypeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-z]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    var b = str.charCodeAt(i)\n    if (b <= 0x7F) {\n      byteArray.push(b)\n    } else {\n      var start = i\n      if (b >= 0xD800 && b <= 0xDFFF) i++\n      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')\n      for (var j = 0; j < h.length; j++) {\n        byteArray.push(parseInt(h[j], 16))\n      }\n    }\n  }\n  return byteArray\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(str)\n}\n\nfunction blitBuffer (src, dst, offset, length, unitSize) {\n  if (unitSize) length -= length % unitSize;\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n},{\"base64-js\":4,\"ieee754\":5,\"is-array\":6}],4:[function(require,module,exports){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n},{}],5:[function(require,module,exports){\nexports.read = function(buffer, offset, isLE, mLen, nBytes) {\n  var e, m,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      nBits = -7,\n      i = isLE ? (nBytes - 1) : 0,\n      d = isLE ? -1 : 1,\n      s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity);\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c,\n      eLen = nBytes * 8 - mLen - 1,\n      eMax = (1 << eLen) - 1,\n      eBias = eMax >> 1,\n      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),\n      i = isLE ? 0 : (nBytes - 1),\n      d = isLE ? 1 : -1,\n      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\n},{}],6:[function(require,module,exports){\n\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n},{}],7:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],8:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],9:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n\n},{\"_process\":10}],10:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canMutationObserver = typeof window !== 'undefined'\n    && window.MutationObserver;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    var queue = [];\n\n    if (canMutationObserver) {\n        var hiddenDiv = document.createElement(\"div\");\n        var observer = new MutationObserver(function () {\n            var queueList = queue.slice();\n            queue.length = 0;\n            queueList.forEach(function (fn) {\n                fn();\n            });\n        });\n\n        observer.observe(hiddenDiv, { attributes: true });\n\n        return function nextTick(fn) {\n            if (!queue.length) {\n                hiddenDiv.setAttribute('yes', 'no');\n            }\n            queue.push(fn);\n        };\n    }\n\n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],11:[function(require,module,exports){\n(function (global){\n/*! http://mths.be/punycode v1.2.4 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^ -~]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /\\x2E|\\u3002|\\uFF0E|\\uFF61/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\twhile (length--) {\n\t\t\tarray[length] = fn(array[length]);\n\t\t}\n\t\treturn array;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings.\n\t * @private\n\t * @param {String} domain The domain name.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\treturn map(string.split(regexSeparators), fn).join('.');\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols to a Punycode string of ASCII-only\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name to Unicode. Only the\n\t * Punycoded parts of the domain name will be converted, i.e. it doesn't\n\t * matter if you call it on a string that has already been converted to\n\t * Unicode.\n\t * @memberOf punycode\n\t * @param {String} domain The Punycode domain name to convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(domain) {\n\t\treturn mapDomain(domain, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name to Punycode. Only the\n\t * non-ASCII parts of the domain name will be converted, i.e. it doesn't\n\t * matter if you call it with a domain that's already in ASCII.\n\t * @memberOf punycode\n\t * @param {String} domain The domain name to convert, as a Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name.\n\t */\n\tfunction toASCII(domain) {\n\t\treturn mapDomain(domain, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.2.4',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],12:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],13:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":12,\"./encode\":13}],15:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n},{\"punycode\":11,\"querystring\":14}],16:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],17:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./support/isBuffer\":16,\"_process\":10,\"inherits\":8}],18:[function(require,module,exports){\n(function (global){\n/*! http://mths.be/he v0.5.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t// All astral symbols.\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\n\t// first column of the overrides table.\n\t// http://whatwg.org/html/tokenization.html#table-charref-overrides\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n\t// code points listed in the first column of the overrides table on\n\t// http://whatwg.org/html/tokenization.html#table-charref-overrides.\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\n\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\n\tvar encodeMap = {'\\xC1':'Aacute','\\xE1':'aacute','\\u0102':'Abreve','\\u0103':'abreve','\\u223E':'ac','\\u223F':'acd','\\u223E\\u0333':'acE','\\xC2':'Acirc','\\xE2':'acirc','\\xB4':'acute','\\u0410':'Acy','\\u0430':'acy','\\xC6':'AElig','\\xE6':'aelig','\\u2061':'af','\\uD835\\uDD04':'Afr','\\uD835\\uDD1E':'afr','\\xC0':'Agrave','\\xE0':'agrave','\\u2135':'aleph','\\u0391':'Alpha','\\u03B1':'alpha','\\u0100':'Amacr','\\u0101':'amacr','\\u2A3F':'amalg','&':'amp','\\u2A55':'andand','\\u2A53':'And','\\u2227':'and','\\u2A5C':'andd','\\u2A58':'andslope','\\u2A5A':'andv','\\u2220':'ang','\\u29A4':'ange','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u2221':'angmsd','\\u221F':'angrt','\\u22BE':'angrtvb','\\u299D':'angrtvbd','\\u2222':'angsph','\\xC5':'angst','\\u237C':'angzarr','\\u0104':'Aogon','\\u0105':'aogon','\\uD835\\uDD38':'Aopf','\\uD835\\uDD52':'aopf','\\u2A6F':'apacir','\\u2248':'ap','\\u2A70':'apE','\\u224A':'ape','\\u224B':'apid','\\'':'apos','\\xE5':'aring','\\uD835\\uDC9C':'Ascr','\\uD835\\uDCB6':'ascr','\\u2254':'colone','*':'ast','\\u224D':'CupCap','\\xC3':'Atilde','\\xE3':'atilde','\\xC4':'Auml','\\xE4':'auml','\\u2233':'awconint','\\u2A11':'awint','\\u224C':'bcong','\\u03F6':'bepsi','\\u2035':'bprime','\\u223D':'bsim','\\u22CD':'bsime','\\u2216':'setmn','\\u2AE7':'Barv','\\u22BD':'barvee','\\u2305':'barwed','\\u2306':'Barwed','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u0411':'Bcy','\\u0431':'bcy','\\u201E':'bdquo','\\u2235':'becaus','\\u29B0':'bemptyv','\\u212C':'Bscr','\\u0392':'Beta','\\u03B2':'beta','\\u2136':'beth','\\u226C':'twixt','\\uD835\\uDD05':'Bfr','\\uD835\\uDD1F':'bfr','\\u22C2':'xcap','\\u25EF':'xcirc','\\u22C3':'xcup','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A06':'xsqcup','\\u2605':'starf','\\u25BD':'xdtri','\\u25B3':'xutri','\\u2A04':'xuplus','\\u22C1':'Vee','\\u22C0':'Wedge','\\u290D':'rbarr','\\u29EB':'lozf','\\u25AA':'squf','\\u25B4':'utrif','\\u25BE':'dtrif','\\u25C2':'ltrif','\\u25B8':'rtrif','\\u2423':'blank','\\u2592':'blk12','\\u2591':'blk14','\\u2593':'blk34','\\u2588':'block','=\\u20E5':'bne','\\u2261\\u20E5':'bnequiv','\\u2AED':'bNot','\\u2310':'bnot','\\uD835\\uDD39':'Bopf','\\uD835\\uDD53':'bopf','\\u22A5':'bot','\\u22C8':'bowtie','\\u29C9':'boxbox','\\u2510':'boxdl','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u250C':'boxdr','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2500':'boxh','\\u2550':'boxH','\\u252C':'boxhd','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2534':'boxhu','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u229F':'minusb','\\u229E':'plusb','\\u22A0':'timesb','\\u2518':'boxul','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u2514':'boxur','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u2502':'boxv','\\u2551':'boxV','\\u253C':'boxvh','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2524':'boxvl','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u251C':'boxvr','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u02D8':'breve','\\xA6':'brvbar','\\uD835\\uDCB7':'bscr','\\u204F':'bsemi','\\u29C5':'bsolb','\\\\':'bsol','\\u27C8':'bsolhsub','\\u2022':'bull','\\u224E':'bump','\\u2AAE':'bumpE','\\u224F':'bumpe','\\u0106':'Cacute','\\u0107':'cacute','\\u2A44':'capand','\\u2A49':'capbrcup','\\u2A4B':'capcap','\\u2229':'cap','\\u22D2':'Cap','\\u2A47':'capcup','\\u2A40':'capdot','\\u2145':'DD','\\u2229\\uFE00':'caps','\\u2041':'caret','\\u02C7':'caron','\\u212D':'Cfr','\\u2A4D':'ccaps','\\u010C':'Ccaron','\\u010D':'ccaron','\\xC7':'Ccedil','\\xE7':'ccedil','\\u0108':'Ccirc','\\u0109':'ccirc','\\u2230':'Cconint','\\u2A4C':'ccups','\\u2A50':'ccupssm','\\u010A':'Cdot','\\u010B':'cdot','\\xB8':'cedil','\\u29B2':'cemptyv','\\xA2':'cent','\\xB7':'middot','\\uD835\\uDD20':'cfr','\\u0427':'CHcy','\\u0447':'chcy','\\u2713':'check','\\u03A7':'Chi','\\u03C7':'chi','\\u02C6':'circ','\\u2257':'cire','\\u21BA':'olarr','\\u21BB':'orarr','\\u229B':'oast','\\u229A':'ocir','\\u229D':'odash','\\u2299':'odot','\\xAE':'reg','\\u24C8':'oS','\\u2296':'ominus','\\u2295':'oplus','\\u2297':'otimes','\\u25CB':'cir','\\u29C3':'cirE','\\u2A10':'cirfnint','\\u2AEF':'cirmid','\\u29C2':'cirscir','\\u2232':'cwconint','\\u201D':'rdquo','\\u2019':'rsquo','\\u2663':'clubs',':':'colon','\\u2237':'Colon','\\u2A74':'Colone',',':'comma','@':'commat','\\u2201':'comp','\\u2218':'compfn','\\u2102':'Copf','\\u2245':'cong','\\u2A6D':'congdot','\\u2261':'equiv','\\u222E':'oint','\\u222F':'Conint','\\uD835\\uDD54':'copf','\\u2210':'coprod','\\xA9':'copy','\\u2117':'copysr','\\u21B5':'crarr','\\u2717':'cross','\\u2A2F':'Cross','\\uD835\\uDC9E':'Cscr','\\uD835\\uDCB8':'cscr','\\u2ACF':'csub','\\u2AD1':'csube','\\u2AD0':'csup','\\u2AD2':'csupe','\\u22EF':'ctdot','\\u2938':'cudarrl','\\u2935':'cudarrr','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u21B6':'cularr','\\u293D':'cularrp','\\u2A48':'cupbrcap','\\u2A46':'cupcap','\\u222A':'cup','\\u22D3':'Cup','\\u2A4A':'cupcup','\\u228D':'cupdot','\\u2A45':'cupor','\\u222A\\uFE00':'cups','\\u21B7':'curarr','\\u293C':'curarrm','\\u22CE':'cuvee','\\u22CF':'cuwed','\\xA4':'curren','\\u2231':'cwint','\\u232D':'cylcty','\\u2020':'dagger','\\u2021':'Dagger','\\u2138':'daleth','\\u2193':'darr','\\u21A1':'Darr','\\u21D3':'dArr','\\u2010':'dash','\\u2AE4':'Dashv','\\u22A3':'dashv','\\u290F':'rBarr','\\u02DD':'dblac','\\u010E':'Dcaron','\\u010F':'dcaron','\\u0414':'Dcy','\\u0434':'dcy','\\u21CA':'ddarr','\\u2146':'dd','\\u2911':'DDotrahd','\\u2A77':'eDDot','\\xB0':'deg','\\u2207':'Del','\\u0394':'Delta','\\u03B4':'delta','\\u29B1':'demptyv','\\u297F':'dfisht','\\uD835\\uDD07':'Dfr','\\uD835\\uDD21':'dfr','\\u2965':'dHar','\\u21C3':'dharl','\\u21C2':'dharr','\\u02D9':'dot','`':'grave','\\u02DC':'tilde','\\u22C4':'diam','\\u2666':'diams','\\xA8':'die','\\u03DD':'gammad','\\u22F2':'disin','\\xF7':'div','\\u22C7':'divonx','\\u0402':'DJcy','\\u0452':'djcy','\\u231E':'dlcorn','\\u230D':'dlcrop','$':'dollar','\\uD835\\uDD3B':'Dopf','\\uD835\\uDD55':'dopf','\\u20DC':'DotDot','\\u2250':'doteq','\\u2251':'eDot','\\u2238':'minusd','\\u2214':'plusdo','\\u22A1':'sdotb','\\u21D0':'lArr','\\u21D4':'iff','\\u27F8':'xlArr','\\u27FA':'xhArr','\\u27F9':'xrArr','\\u21D2':'rArr','\\u22A8':'vDash','\\u21D1':'uArr','\\u21D5':'vArr','\\u2225':'par','\\u2913':'DownArrowBar','\\u21F5':'duarr','\\u0311':'DownBreve','\\u2950':'DownLeftRightVector','\\u295E':'DownLeftTeeVector','\\u2956':'DownLeftVectorBar','\\u21BD':'lhard','\\u295F':'DownRightTeeVector','\\u2957':'DownRightVectorBar','\\u21C1':'rhard','\\u21A7':'mapstodown','\\u22A4':'top','\\u2910':'RBarr','\\u231F':'drcorn','\\u230C':'drcrop','\\uD835\\uDC9F':'Dscr','\\uD835\\uDCB9':'dscr','\\u0405':'DScy','\\u0455':'dscy','\\u29F6':'dsol','\\u0110':'Dstrok','\\u0111':'dstrok','\\u22F1':'dtdot','\\u25BF':'dtri','\\u296F':'duhar','\\u29A6':'dwangle','\\u040F':'DZcy','\\u045F':'dzcy','\\u27FF':'dzigrarr','\\xC9':'Eacute','\\xE9':'eacute','\\u2A6E':'easter','\\u011A':'Ecaron','\\u011B':'ecaron','\\xCA':'Ecirc','\\xEA':'ecirc','\\u2256':'ecir','\\u2255':'ecolon','\\u042D':'Ecy','\\u044D':'ecy','\\u0116':'Edot','\\u0117':'edot','\\u2147':'ee','\\u2252':'efDot','\\uD835\\uDD08':'Efr','\\uD835\\uDD22':'efr','\\u2A9A':'eg','\\xC8':'Egrave','\\xE8':'egrave','\\u2A96':'egs','\\u2A98':'egsdot','\\u2A99':'el','\\u2208':'in','\\u23E7':'elinters','\\u2113':'ell','\\u2A95':'els','\\u2A97':'elsdot','\\u0112':'Emacr','\\u0113':'emacr','\\u2205':'empty','\\u25FB':'EmptySmallSquare','\\u25AB':'EmptyVerySmallSquare','\\u2004':'emsp13','\\u2005':'emsp14','\\u2003':'emsp','\\u014A':'ENG','\\u014B':'eng','\\u2002':'ensp','\\u0118':'Eogon','\\u0119':'eogon','\\uD835\\uDD3C':'Eopf','\\uD835\\uDD56':'eopf','\\u22D5':'epar','\\u29E3':'eparsl','\\u2A71':'eplus','\\u03B5':'epsi','\\u0395':'Epsilon','\\u03F5':'epsiv','\\u2242':'esim','\\u2A75':'Equal','=':'equals','\\u225F':'equest','\\u21CC':'rlhar','\\u2A78':'equivDD','\\u29E5':'eqvparsl','\\u2971':'erarr','\\u2253':'erDot','\\u212F':'escr','\\u2130':'Escr','\\u2A73':'Esim','\\u0397':'Eta','\\u03B7':'eta','\\xD0':'ETH','\\xF0':'eth','\\xCB':'Euml','\\xEB':'euml','\\u20AC':'euro','!':'excl','\\u2203':'exist','\\u0424':'Fcy','\\u0444':'fcy','\\u2640':'female','\\uFB03':'ffilig','\\uFB00':'fflig','\\uFB04':'ffllig','\\uD835\\uDD09':'Ffr','\\uD835\\uDD23':'ffr','\\uFB01':'filig','\\u25FC':'FilledSmallSquare','fj':'fjlig','\\u266D':'flat','\\uFB02':'fllig','\\u25B1':'fltns','\\u0192':'fnof','\\uD835\\uDD3D':'Fopf','\\uD835\\uDD57':'fopf','\\u2200':'forall','\\u22D4':'fork','\\u2AD9':'forkv','\\u2131':'Fscr','\\u2A0D':'fpartint','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\u2154':'frac23','\\u2156':'frac25','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\u2044':'frasl','\\u2322':'frown','\\uD835\\uDCBB':'fscr','\\u01F5':'gacute','\\u0393':'Gamma','\\u03B3':'gamma','\\u03DC':'Gammad','\\u2A86':'gap','\\u011E':'Gbreve','\\u011F':'gbreve','\\u0122':'Gcedil','\\u011C':'Gcirc','\\u011D':'gcirc','\\u0413':'Gcy','\\u0433':'gcy','\\u0120':'Gdot','\\u0121':'gdot','\\u2265':'ge','\\u2267':'gE','\\u2A8C':'gEl','\\u22DB':'gel','\\u2A7E':'ges','\\u2AA9':'gescc','\\u2A80':'gesdot','\\u2A82':'gesdoto','\\u2A84':'gesdotol','\\u22DB\\uFE00':'gesl','\\u2A94':'gesles','\\uD835\\uDD0A':'Gfr','\\uD835\\uDD24':'gfr','\\u226B':'gg','\\u22D9':'Gg','\\u2137':'gimel','\\u0403':'GJcy','\\u0453':'gjcy','\\u2AA5':'gla','\\u2277':'gl','\\u2A92':'glE','\\u2AA4':'glj','\\u2A8A':'gnap','\\u2A88':'gne','\\u2269':'gnE','\\u22E7':'gnsim','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD58':'gopf','\\u2AA2':'GreaterGreater','\\u2273':'gsim','\\uD835\\uDCA2':'Gscr','\\u210A':'gscr','\\u2A8E':'gsime','\\u2A90':'gsiml','\\u2AA7':'gtcc','\\u2A7A':'gtcir','>':'gt','\\u22D7':'gtdot','\\u2995':'gtlPar','\\u2A7C':'gtquest','\\u2978':'gtrarr','\\u2269\\uFE00':'gvnE','\\u200A':'hairsp','\\u210B':'Hscr','\\u042A':'HARDcy','\\u044A':'hardcy','\\u2948':'harrcir','\\u2194':'harr','\\u21AD':'harrw','^':'Hat','\\u210F':'hbar','\\u0124':'Hcirc','\\u0125':'hcirc','\\u2665':'hearts','\\u2026':'mldr','\\u22B9':'hercon','\\uD835\\uDD25':'hfr','\\u210C':'Hfr','\\u2925':'searhk','\\u2926':'swarhk','\\u21FF':'hoarr','\\u223B':'homtht','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\uD835\\uDD59':'hopf','\\u210D':'Hopf','\\u2015':'horbar','\\uD835\\uDCBD':'hscr','\\u0126':'Hstrok','\\u0127':'hstrok','\\u2043':'hybull','\\xCD':'Iacute','\\xED':'iacute','\\u2063':'ic','\\xCE':'Icirc','\\xEE':'icirc','\\u0418':'Icy','\\u0438':'icy','\\u0130':'Idot','\\u0415':'IEcy','\\u0435':'iecy','\\xA1':'iexcl','\\uD835\\uDD26':'ifr','\\u2111':'Im','\\xCC':'Igrave','\\xEC':'igrave','\\u2148':'ii','\\u2A0C':'qint','\\u222D':'tint','\\u29DC':'iinfin','\\u2129':'iiota','\\u0132':'IJlig','\\u0133':'ijlig','\\u012A':'Imacr','\\u012B':'imacr','\\u2110':'Iscr','\\u0131':'imath','\\u22B7':'imof','\\u01B5':'imped','\\u2105':'incare','\\u221E':'infin','\\u29DD':'infintie','\\u22BA':'intcal','\\u222B':'int','\\u222C':'Int','\\u2124':'Zopf','\\u2A17':'intlarhk','\\u2A3C':'iprod','\\u2062':'it','\\u0401':'IOcy','\\u0451':'iocy','\\u012E':'Iogon','\\u012F':'iogon','\\uD835\\uDD40':'Iopf','\\uD835\\uDD5A':'iopf','\\u0399':'Iota','\\u03B9':'iota','\\xBF':'iquest','\\uD835\\uDCBE':'iscr','\\u22F5':'isindot','\\u22F9':'isinE','\\u22F4':'isins','\\u22F3':'isinsv','\\u0128':'Itilde','\\u0129':'itilde','\\u0406':'Iukcy','\\u0456':'iukcy','\\xCF':'Iuml','\\xEF':'iuml','\\u0134':'Jcirc','\\u0135':'jcirc','\\u0419':'Jcy','\\u0439':'jcy','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD27':'jfr','\\u0237':'jmath','\\uD835\\uDD41':'Jopf','\\uD835\\uDD5B':'jopf','\\uD835\\uDCA5':'Jscr','\\uD835\\uDCBF':'jscr','\\u0408':'Jsercy','\\u0458':'jsercy','\\u0404':'Jukcy','\\u0454':'jukcy','\\u039A':'Kappa','\\u03BA':'kappa','\\u03F0':'kappav','\\u0136':'Kcedil','\\u0137':'kcedil','\\u041A':'Kcy','\\u043A':'kcy','\\uD835\\uDD0E':'Kfr','\\uD835\\uDD28':'kfr','\\u0138':'kgreen','\\u0425':'KHcy','\\u0445':'khcy','\\u040C':'KJcy','\\u045C':'kjcy','\\uD835\\uDD42':'Kopf','\\uD835\\uDD5C':'kopf','\\uD835\\uDCA6':'Kscr','\\uD835\\uDCC0':'kscr','\\u21DA':'lAarr','\\u0139':'Lacute','\\u013A':'lacute','\\u29B4':'laemptyv','\\u2112':'Lscr','\\u039B':'Lambda','\\u03BB':'lambda','\\u27E8':'lang','\\u27EA':'Lang','\\u2991':'langd','\\u2A85':'lap','\\xAB':'laquo','\\u21E4':'larrb','\\u291F':'larrbfs','\\u2190':'larr','\\u219E':'Larr','\\u291D':'larrfs','\\u21AB':'larrlp','\\u2939':'larrpl','\\u2973':'larrsim','\\u21A2':'larrtl','\\u2919':'latail','\\u291B':'lAtail','\\u2AAB':'lat','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u290C':'lbarr','\\u290E':'lBarr','\\u2772':'lbbrk','{':'lcub','[':'lsqb','\\u298B':'lbrke','\\u298F':'lbrksld','\\u298D':'lbrkslu','\\u013D':'Lcaron','\\u013E':'lcaron','\\u013B':'Lcedil','\\u013C':'lcedil','\\u2308':'lceil','\\u041B':'Lcy','\\u043B':'lcy','\\u2936':'ldca','\\u201C':'ldquo','\\u2967':'ldrdhar','\\u294B':'ldrushar','\\u21B2':'ldsh','\\u2264':'le','\\u2266':'lE','\\u21C6':'lrarr','\\u27E6':'lobrk','\\u2961':'LeftDownTeeVector','\\u2959':'LeftDownVectorBar','\\u230A':'lfloor','\\u21BC':'lharu','\\u21C7':'llarr','\\u21CB':'lrhar','\\u294E':'LeftRightVector','\\u21A4':'mapstoleft','\\u295A':'LeftTeeVector','\\u22CB':'lthree','\\u29CF':'LeftTriangleBar','\\u22B2':'vltri','\\u22B4':'ltrie','\\u2951':'LeftUpDownVector','\\u2960':'LeftUpTeeVector','\\u2958':'LeftUpVectorBar','\\u21BF':'uharl','\\u2952':'LeftVectorBar','\\u2A8B':'lEg','\\u22DA':'leg','\\u2A7D':'les','\\u2AA8':'lescc','\\u2A7F':'lesdot','\\u2A81':'lesdoto','\\u2A83':'lesdotor','\\u22DA\\uFE00':'lesg','\\u2A93':'lesges','\\u22D6':'ltdot','\\u2276':'lg','\\u2AA1':'LessLess','\\u2272':'lsim','\\u297C':'lfisht','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD29':'lfr','\\u2A91':'lgE','\\u2962':'lHar','\\u296A':'lharul','\\u2584':'lhblk','\\u0409':'LJcy','\\u0459':'ljcy','\\u226A':'ll','\\u22D8':'Ll','\\u296B':'llhard','\\u25FA':'lltri','\\u013F':'Lmidot','\\u0140':'lmidot','\\u23B0':'lmoust','\\u2A89':'lnap','\\u2A87':'lne','\\u2268':'lnE','\\u22E6':'lnsim','\\u27EC':'loang','\\u21FD':'loarr','\\u27F5':'xlarr','\\u27F7':'xharr','\\u27FC':'xmap','\\u27F6':'xrarr','\\u21AC':'rarrlp','\\u2985':'lopar','\\uD835\\uDD43':'Lopf','\\uD835\\uDD5D':'lopf','\\u2A2D':'loplus','\\u2A34':'lotimes','\\u2217':'lowast','_':'lowbar','\\u2199':'swarr','\\u2198':'searr','\\u25CA':'loz','(':'lpar','\\u2993':'lparlt','\\u296D':'lrhard','\\u200E':'lrm','\\u22BF':'lrtri','\\u2039':'lsaquo','\\uD835\\uDCC1':'lscr','\\u21B0':'lsh','\\u2A8D':'lsime','\\u2A8F':'lsimg','\\u2018':'lsquo','\\u201A':'sbquo','\\u0141':'Lstrok','\\u0142':'lstrok','\\u2AA6':'ltcc','\\u2A79':'ltcir','<':'lt','\\u22C9':'ltimes','\\u2976':'ltlarr','\\u2A7B':'ltquest','\\u25C3':'ltri','\\u2996':'ltrPar','\\u294A':'lurdshar','\\u2966':'luruhar','\\u2268\\uFE00':'lvnE','\\xAF':'macr','\\u2642':'male','\\u2720':'malt','\\u2905':'Map','\\u21A6':'map','\\u21A5':'mapstoup','\\u25AE':'marker','\\u2A29':'mcomma','\\u041C':'Mcy','\\u043C':'mcy','\\u2014':'mdash','\\u223A':'mDDot','\\u205F':'MediumSpace','\\u2133':'Mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD2A':'mfr','\\u2127':'mho','\\xB5':'micro','\\u2AF0':'midcir','\\u2223':'mid','\\u2212':'minus','\\u2A2A':'minusdu','\\u2213':'mp','\\u2ADB':'mlcp','\\u22A7':'models','\\uD835\\uDD44':'Mopf','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\u039C':'Mu','\\u03BC':'mu','\\u22B8':'mumap','\\u0143':'Nacute','\\u0144':'nacute','\\u2220\\u20D2':'nang','\\u2249':'nap','\\u2A70\\u0338':'napE','\\u224B\\u0338':'napid','\\u0149':'napos','\\u266E':'natur','\\u2115':'Nopf','\\xA0':'nbsp','\\u224E\\u0338':'nbump','\\u224F\\u0338':'nbumpe','\\u2A43':'ncap','\\u0147':'Ncaron','\\u0148':'ncaron','\\u0145':'Ncedil','\\u0146':'ncedil','\\u2247':'ncong','\\u2A6D\\u0338':'ncongdot','\\u2A42':'ncup','\\u041D':'Ncy','\\u043D':'ncy','\\u2013':'ndash','\\u2924':'nearhk','\\u2197':'nearr','\\u21D7':'neArr','\\u2260':'ne','\\u2250\\u0338':'nedot','\\u200B':'ZeroWidthSpace','\\u2262':'nequiv','\\u2928':'toea','\\u2242\\u0338':'nesim','\\n':'NewLine','\\u2204':'nexist','\\uD835\\uDD11':'Nfr','\\uD835\\uDD2B':'nfr','\\u2267\\u0338':'ngE','\\u2271':'nge','\\u2A7E\\u0338':'nges','\\u22D9\\u0338':'nGg','\\u2275':'ngsim','\\u226B\\u20D2':'nGt','\\u226F':'ngt','\\u226B\\u0338':'nGtv','\\u21AE':'nharr','\\u21CE':'nhArr','\\u2AF2':'nhpar','\\u220B':'ni','\\u22FC':'nis','\\u22FA':'nisd','\\u040A':'NJcy','\\u045A':'njcy','\\u219A':'nlarr','\\u21CD':'nlArr','\\u2025':'nldr','\\u2266\\u0338':'nlE','\\u2270':'nle','\\u2A7D\\u0338':'nles','\\u226E':'nlt','\\u22D8\\u0338':'nLl','\\u2274':'nlsim','\\u226A\\u20D2':'nLt','\\u22EA':'nltri','\\u22EC':'nltrie','\\u226A\\u0338':'nLtv','\\u2224':'nmid','\\u2060':'NoBreak','\\uD835\\uDD5F':'nopf','\\u2AEC':'Not','\\xAC':'not','\\u226D':'NotCupCap','\\u2226':'npar','\\u2209':'notin','\\u2279':'ntgl','\\u22F5\\u0338':'notindot','\\u22F9\\u0338':'notinE','\\u22F7':'notinvb','\\u22F6':'notinvc','\\u29CF\\u0338':'NotLeftTriangleBar','\\u2278':'ntlg','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA1\\u0338':'NotNestedLessLess','\\u220C':'notni','\\u22FE':'notnivb','\\u22FD':'notnivc','\\u2280':'npr','\\u2AAF\\u0338':'npre','\\u22E0':'nprcue','\\u29D0\\u0338':'NotRightTriangleBar','\\u22EB':'nrtri','\\u22ED':'nrtrie','\\u228F\\u0338':'NotSquareSubset','\\u22E2':'nsqsube','\\u2290\\u0338':'NotSquareSuperset','\\u22E3':'nsqsupe','\\u2282\\u20D2':'vnsub','\\u2288':'nsube','\\u2281':'nsc','\\u2AB0\\u0338':'nsce','\\u22E1':'nsccue','\\u227F\\u0338':'NotSucceedsTilde','\\u2283\\u20D2':'vnsup','\\u2289':'nsupe','\\u2241':'nsim','\\u2244':'nsime','\\u2AFD\\u20E5':'nparsl','\\u2202\\u0338':'npart','\\u2A14':'npolint','\\u2933\\u0338':'nrarrc','\\u219B':'nrarr','\\u21CF':'nrArr','\\u219D\\u0338':'nrarrw','\\uD835\\uDCA9':'Nscr','\\uD835\\uDCC3':'nscr','\\u2284':'nsub','\\u2AC5\\u0338':'nsubE','\\u2285':'nsup','\\u2AC6\\u0338':'nsupE','\\xD1':'Ntilde','\\xF1':'ntilde','\\u039D':'Nu','\\u03BD':'nu','#':'num','\\u2116':'numero','\\u2007':'numsp','\\u224D\\u20D2':'nvap','\\u22AC':'nvdash','\\u22AD':'nvDash','\\u22AE':'nVdash','\\u22AF':'nVDash','\\u2265\\u20D2':'nvge','>\\u20D2':'nvgt','\\u2904':'nvHarr','\\u29DE':'nvinfin','\\u2902':'nvlArr','\\u2264\\u20D2':'nvle','<\\u20D2':'nvlt','\\u22B4\\u20D2':'nvltrie','\\u2903':'nvrArr','\\u22B5\\u20D2':'nvrtrie','\\u223C\\u20D2':'nvsim','\\u2923':'nwarhk','\\u2196':'nwarr','\\u21D6':'nwArr','\\u2927':'nwnear','\\xD3':'Oacute','\\xF3':'oacute','\\xD4':'Ocirc','\\xF4':'ocirc','\\u041E':'Ocy','\\u043E':'ocy','\\u0150':'Odblac','\\u0151':'odblac','\\u2A38':'odiv','\\u29BC':'odsold','\\u0152':'OElig','\\u0153':'oelig','\\u29BF':'ofcir','\\uD835\\uDD12':'Ofr','\\uD835\\uDD2C':'ofr','\\u02DB':'ogon','\\xD2':'Ograve','\\xF2':'ograve','\\u29C1':'ogt','\\u29B5':'ohbar','\\u03A9':'ohm','\\u29BE':'olcir','\\u29BB':'olcross','\\u203E':'oline','\\u29C0':'olt','\\u014C':'Omacr','\\u014D':'omacr','\\u03C9':'omega','\\u039F':'Omicron','\\u03BF':'omicron','\\u29B6':'omid','\\uD835\\uDD46':'Oopf','\\uD835\\uDD60':'oopf','\\u29B7':'opar','\\u29B9':'operp','\\u2A54':'Or','\\u2228':'or','\\u2A5D':'ord','\\u2134':'oscr','\\xAA':'ordf','\\xBA':'ordm','\\u22B6':'origof','\\u2A56':'oror','\\u2A57':'orslope','\\u2A5B':'orv','\\uD835\\uDCAA':'Oscr','\\xD8':'Oslash','\\xF8':'oslash','\\u2298':'osol','\\xD5':'Otilde','\\xF5':'otilde','\\u2A36':'otimesas','\\u2A37':'Otimes','\\xD6':'Ouml','\\xF6':'ouml','\\u233D':'ovbar','\\u23DE':'OverBrace','\\u23B4':'tbrk','\\u23DC':'OverParenthesis','\\xB6':'para','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2202':'part','\\u041F':'Pcy','\\u043F':'pcy','%':'percnt','.':'period','\\u2030':'permil','\\u2031':'pertenk','\\uD835\\uDD13':'Pfr','\\uD835\\uDD2D':'pfr','\\u03A6':'Phi','\\u03C6':'phi','\\u03D5':'phiv','\\u260E':'phone','\\u03A0':'Pi','\\u03C0':'pi','\\u03D6':'piv','\\u210E':'planckh','\\u2A23':'plusacir','\\u2A22':'pluscir','+':'plus','\\u2A25':'plusdu','\\u2A72':'pluse','\\xB1':'pm','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A15':'pointint','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\xA3':'pound','\\u2AB7':'prap','\\u2ABB':'Pr','\\u227A':'pr','\\u227C':'prcue','\\u2AAF':'pre','\\u227E':'prsim','\\u2AB9':'prnap','\\u2AB5':'prnE','\\u22E8':'prnsim','\\u2AB3':'prE','\\u2032':'prime','\\u2033':'Prime','\\u220F':'prod','\\u232E':'profalar','\\u2312':'profline','\\u2313':'profsurf','\\u221D':'prop','\\u22B0':'prurel','\\uD835\\uDCAB':'Pscr','\\uD835\\uDCC5':'pscr','\\u03A8':'Psi','\\u03C8':'psi','\\u2008':'puncsp','\\uD835\\uDD14':'Qfr','\\uD835\\uDD2E':'qfr','\\uD835\\uDD62':'qopf','\\u211A':'Qopf','\\u2057':'qprime','\\uD835\\uDCAC':'Qscr','\\uD835\\uDCC6':'qscr','\\u2A16':'quatint','?':'quest','\"':'quot','\\u21DB':'rAarr','\\u223D\\u0331':'race','\\u0154':'Racute','\\u0155':'racute','\\u221A':'Sqrt','\\u29B3':'raemptyv','\\u27E9':'rang','\\u27EB':'Rang','\\u2992':'rangd','\\u29A5':'range','\\xBB':'raquo','\\u2975':'rarrap','\\u21E5':'rarrb','\\u2920':'rarrbfs','\\u2933':'rarrc','\\u2192':'rarr','\\u21A0':'Rarr','\\u291E':'rarrfs','\\u2945':'rarrpl','\\u2974':'rarrsim','\\u2916':'Rarrtl','\\u21A3':'rarrtl','\\u219D':'rarrw','\\u291A':'ratail','\\u291C':'rAtail','\\u2236':'ratio','\\u2773':'rbbrk','}':'rcub',']':'rsqb','\\u298C':'rbrke','\\u298E':'rbrksld','\\u2990':'rbrkslu','\\u0158':'Rcaron','\\u0159':'rcaron','\\u0156':'Rcedil','\\u0157':'rcedil','\\u2309':'rceil','\\u0420':'Rcy','\\u0440':'rcy','\\u2937':'rdca','\\u2969':'rdldhar','\\u21B3':'rdsh','\\u211C':'Re','\\u211B':'Rscr','\\u211D':'Ropf','\\u25AD':'rect','\\u297D':'rfisht','\\u230B':'rfloor','\\uD835\\uDD2F':'rfr','\\u2964':'rHar','\\u21C0':'rharu','\\u296C':'rharul','\\u03A1':'Rho','\\u03C1':'rho','\\u03F1':'rhov','\\u21C4':'rlarr','\\u27E7':'robrk','\\u295D':'RightDownTeeVector','\\u2955':'RightDownVectorBar','\\u21C9':'rrarr','\\u22A2':'vdash','\\u295B':'RightTeeVector','\\u22CC':'rthree','\\u29D0':'RightTriangleBar','\\u22B3':'vrtri','\\u22B5':'rtrie','\\u294F':'RightUpDownVector','\\u295C':'RightUpTeeVector','\\u2954':'RightUpVectorBar','\\u21BE':'uharr','\\u2953':'RightVectorBar','\\u02DA':'ring','\\u200F':'rlm','\\u23B1':'rmoust','\\u2AEE':'rnmid','\\u27ED':'roang','\\u21FE':'roarr','\\u2986':'ropar','\\uD835\\uDD63':'ropf','\\u2A2E':'roplus','\\u2A35':'rotimes','\\u2970':'RoundImplies',')':'rpar','\\u2994':'rpargt','\\u2A12':'rppolint','\\u203A':'rsaquo','\\uD835\\uDCC7':'rscr','\\u21B1':'rsh','\\u22CA':'rtimes','\\u25B9':'rtri','\\u29CE':'rtriltri','\\u29F4':'RuleDelayed','\\u2968':'ruluhar','\\u211E':'rx','\\u015A':'Sacute','\\u015B':'sacute','\\u2AB8':'scap','\\u0160':'Scaron','\\u0161':'scaron','\\u2ABC':'Sc','\\u227B':'sc','\\u227D':'sccue','\\u2AB0':'sce','\\u2AB4':'scE','\\u015E':'Scedil','\\u015F':'scedil','\\u015C':'Scirc','\\u015D':'scirc','\\u2ABA':'scnap','\\u2AB6':'scnE','\\u22E9':'scnsim','\\u2A13':'scpolint','\\u227F':'scsim','\\u0421':'Scy','\\u0441':'scy','\\u22C5':'sdot','\\u2A66':'sdote','\\u21D8':'seArr','\\xA7':'sect',';':'semi','\\u2929':'tosa','\\u2736':'sext','\\uD835\\uDD16':'Sfr','\\uD835\\uDD30':'sfr','\\u266F':'sharp','\\u0429':'SHCHcy','\\u0449':'shchcy','\\u0428':'SHcy','\\u0448':'shcy','\\u2191':'uarr','\\xAD':'shy','\\u03A3':'Sigma','\\u03C3':'sigma','\\u03C2':'sigmaf','\\u223C':'sim','\\u2A6A':'simdot','\\u2243':'sime','\\u2A9E':'simg','\\u2AA0':'simgE','\\u2A9D':'siml','\\u2A9F':'simlE','\\u2246':'simne','\\u2A24':'simplus','\\u2972':'simrarr','\\u2A33':'smashp','\\u29E4':'smeparsl','\\u2323':'smile','\\u2AAA':'smt','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u042C':'SOFTcy','\\u044C':'softcy','\\u233F':'solbar','\\u29C4':'solb','/':'sol','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD64':'sopf','\\u2660':'spades','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u228F':'sqsub','\\u2291':'sqsube','\\u2290':'sqsup','\\u2292':'sqsupe','\\u25A1':'squ','\\uD835\\uDCAE':'Sscr','\\uD835\\uDCC8':'sscr','\\u22C6':'Star','\\u2606':'star','\\u2282':'sub','\\u22D0':'Sub','\\u2ABD':'subdot','\\u2AC5':'subE','\\u2286':'sube','\\u2AC3':'subedot','\\u2AC1':'submult','\\u2ACB':'subnE','\\u228A':'subne','\\u2ABF':'subplus','\\u2979':'subrarr','\\u2AC7':'subsim','\\u2AD5':'subsub','\\u2AD3':'subsup','\\u2211':'sum','\\u266A':'sung','\\xB9':'sup1','\\xB2':'sup2','\\xB3':'sup3','\\u2283':'sup','\\u22D1':'Sup','\\u2ABE':'supdot','\\u2AD8':'supdsub','\\u2AC6':'supE','\\u2287':'supe','\\u2AC4':'supedot','\\u27C9':'suphsol','\\u2AD7':'suphsub','\\u297B':'suplarr','\\u2AC2':'supmult','\\u2ACC':'supnE','\\u228B':'supne','\\u2AC0':'supplus','\\u2AC8':'supsim','\\u2AD4':'supsub','\\u2AD6':'supsup','\\u21D9':'swArr','\\u292A':'swnwar','\\xDF':'szlig','\\t':'Tab','\\u2316':'target','\\u03A4':'Tau','\\u03C4':'tau','\\u0164':'Tcaron','\\u0165':'tcaron','\\u0162':'Tcedil','\\u0163':'tcedil','\\u0422':'Tcy','\\u0442':'tcy','\\u20DB':'tdot','\\u2315':'telrec','\\uD835\\uDD17':'Tfr','\\uD835\\uDD31':'tfr','\\u2234':'there4','\\u0398':'Theta','\\u03B8':'theta','\\u03D1':'thetav','\\u205F\\u200A':'ThickSpace','\\u2009':'thinsp','\\xDE':'THORN','\\xFE':'thorn','\\u2A31':'timesbar','\\xD7':'times','\\u2A30':'timesd','\\u2336':'topbot','\\u2AF1':'topcir','\\uD835\\uDD4B':'Topf','\\uD835\\uDD65':'topf','\\u2ADA':'topfork','\\u2034':'tprime','\\u2122':'trade','\\u25B5':'utri','\\u225C':'trie','\\u25EC':'tridot','\\u2A3A':'triminus','\\u2A39':'triplus','\\u29CD':'trisb','\\u2A3B':'tritime','\\u23E2':'trpezium','\\uD835\\uDCAF':'Tscr','\\uD835\\uDCC9':'tscr','\\u0426':'TScy','\\u0446':'tscy','\\u040B':'TSHcy','\\u045B':'tshcy','\\u0166':'Tstrok','\\u0167':'tstrok','\\xDA':'Uacute','\\xFA':'uacute','\\u219F':'Uarr','\\u2949':'Uarrocir','\\u040E':'Ubrcy','\\u045E':'ubrcy','\\u016C':'Ubreve','\\u016D':'ubreve','\\xDB':'Ucirc','\\xFB':'ucirc','\\u0423':'Ucy','\\u0443':'ucy','\\u21C5':'udarr','\\u0170':'Udblac','\\u0171':'udblac','\\u296E':'udhar','\\u297E':'ufisht','\\uD835\\uDD18':'Ufr','\\uD835\\uDD32':'ufr','\\xD9':'Ugrave','\\xF9':'ugrave','\\u2963':'uHar','\\u2580':'uhblk','\\u231C':'ulcorn','\\u230F':'ulcrop','\\u25F8':'ultri','\\u016A':'Umacr','\\u016B':'umacr','\\u23DF':'UnderBrace','\\u23DD':'UnderParenthesis','\\u228E':'uplus','\\u0172':'Uogon','\\u0173':'uogon','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD66':'uopf','\\u2912':'UpArrowBar','\\u2195':'varr','\\u03C5':'upsi','\\u03D2':'Upsi','\\u03A5':'Upsilon','\\u21C8':'uuarr','\\u231D':'urcorn','\\u230E':'urcrop','\\u016E':'Uring','\\u016F':'uring','\\u25F9':'urtri','\\uD835\\uDCB0':'Uscr','\\uD835\\uDCCA':'uscr','\\u22F0':'utdot','\\u0168':'Utilde','\\u0169':'utilde','\\xDC':'Uuml','\\xFC':'uuml','\\u29A7':'uwangle','\\u299C':'vangrt','\\u228A\\uFE00':'vsubne','\\u2ACB\\uFE00':'vsubnE','\\u228B\\uFE00':'vsupne','\\u2ACC\\uFE00':'vsupnE','\\u2AE8':'vBar','\\u2AEB':'Vbar','\\u2AE9':'vBarv','\\u0412':'Vcy','\\u0432':'vcy','\\u22A9':'Vdash','\\u22AB':'VDash','\\u2AE6':'Vdashl','\\u22BB':'veebar','\\u225A':'veeeq','\\u22EE':'vellip','|':'vert','\\u2016':'Vert','\\u2758':'VerticalSeparator','\\u2240':'wr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD33':'vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDD67':'vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDCCB':'vscr','\\u22AA':'Vvdash','\\u299A':'vzigzag','\\u0174':'Wcirc','\\u0175':'wcirc','\\u2A5F':'wedbar','\\u2259':'wedgeq','\\u2118':'wp','\\uD835\\uDD1A':'Wfr','\\uD835\\uDD34':'wfr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD68':'wopf','\\uD835\\uDCB2':'Wscr','\\uD835\\uDCCC':'wscr','\\uD835\\uDD1B':'Xfr','\\uD835\\uDD35':'xfr','\\u039E':'Xi','\\u03BE':'xi','\\u22FB':'xnis','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD69':'xopf','\\uD835\\uDCB3':'Xscr','\\uD835\\uDCCD':'xscr','\\xDD':'Yacute','\\xFD':'yacute','\\u042F':'YAcy','\\u044F':'yacy','\\u0176':'Ycirc','\\u0177':'ycirc','\\u042B':'Ycy','\\u044B':'ycy','\\xA5':'yen','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD36':'yfr','\\u0407':'YIcy','\\u0457':'yicy','\\uD835\\uDD50':'Yopf','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDCCE':'yscr','\\u042E':'YUcy','\\u044E':'yucy','\\xFF':'yuml','\\u0178':'Yuml','\\u0179':'Zacute','\\u017A':'zacute','\\u017D':'Zcaron','\\u017E':'zcaron','\\u0417':'Zcy','\\u0437':'zcy','\\u017B':'Zdot','\\u017C':'zdot','\\u2128':'Zfr','\\u0396':'Zeta','\\u03B6':'zeta','\\uD835\\uDD37':'zfr','\\u0416':'ZHcy','\\u0436':'zhcy','\\u21DD':'zigrarr','\\uD835\\uDD6B':'zopf','\\uD835\\uDCB5':'Zscr','\\uD835\\uDCCF':'zscr','\\u200D':'zwj','\\u200C':'zwnj'};\n\n\tvar regexEscape = /[\"&'<>`]/g;\n\tvar escapeMap = {\n\t\t'\"': '&quot;',\n\t\t'&': '&amp;',\n\t\t'\\'': '&#x27;',\n\t\t'<': '&lt;',\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n\t\t// following is not strictly necessary unless it’s part of a tag or an\n\t\t// unquoted attribute value. We’re only escaping it to support those\n\t\t// situations, and for XML support.\n\t\t'>': '&gt;',\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\n\t\t// to break out of (un)quoted attribute values or HTML comments.\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\n\t\t// http://html5sec.org/#133.\n\t\t'`': '&#x60;'\n\t};\n\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\tvar regexDecode = /&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+);|&(Aacute|iacute|Uacute|plusmn|otilde|Otilde|Agrave|agrave|yacute|Yacute|oslash|Oslash|Atilde|atilde|brvbar|Ccedil|ccedil|ograve|curren|divide|Eacute|eacute|Ograve|oacute|Egrave|egrave|ugrave|frac12|frac14|frac34|Ugrave|Oacute|Iacute|ntilde|Ntilde|uacute|middot|Igrave|igrave|iquest|aacute|laquo|THORN|micro|iexcl|icirc|Icirc|Acirc|ucirc|ecirc|Ocirc|ocirc|Ecirc|Ucirc|aring|Aring|aelig|AElig|acute|pound|raquo|acirc|times|thorn|szlig|cedil|COPY|Auml|ordf|ordm|uuml|macr|Uuml|auml|Ouml|ouml|para|nbsp|Euml|quot|QUOT|euml|yuml|cent|sect|copy|sup1|sup2|sup3|Iuml|iuml|shy|eth|reg|not|yen|amp|AMP|REG|uml|ETH|deg|gt|GT|LT|lt)([=a-zA-Z0-9])?/g;\n\tvar decodeMap = {'Aacute':'\\xC1','aacute':'\\xE1','Abreve':'\\u0102','abreve':'\\u0103','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','Acirc':'\\xC2','acirc':'\\xE2','acute':'\\xB4','Acy':'\\u0410','acy':'\\u0430','AElig':'\\xC6','aelig':'\\xE6','af':'\\u2061','Afr':'\\uD835\\uDD04','afr':'\\uD835\\uDD1E','Agrave':'\\xC0','agrave':'\\xE0','alefsym':'\\u2135','aleph':'\\u2135','Alpha':'\\u0391','alpha':'\\u03B1','Amacr':'\\u0100','amacr':'\\u0101','amalg':'\\u2A3F','amp':'&','AMP':'&','andand':'\\u2A55','And':'\\u2A53','and':'\\u2227','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angmsd':'\\u2221','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','Aogon':'\\u0104','aogon':'\\u0105','Aopf':'\\uD835\\uDD38','aopf':'\\uD835\\uDD52','apacir':'\\u2A6F','ap':'\\u2248','apE':'\\u2A70','ape':'\\u224A','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','Aring':'\\xC5','aring':'\\xE5','Ascr':'\\uD835\\uDC9C','ascr':'\\uD835\\uDCB6','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','Atilde':'\\xC3','atilde':'\\xE3','Auml':'\\xC4','auml':'\\xE4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','Bcy':'\\u0411','bcy':'\\u0431','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','Beta':'\\u0392','beta':'\\u03B2','beth':'\\u2136','between':'\\u226C','Bfr':'\\uD835\\uDD05','bfr':'\\uD835\\uDD1F','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bNot':'\\u2AED','bnot':'\\u2310','Bopf':'\\uD835\\uDD39','bopf':'\\uD835\\uDD53','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxHd':'\\u2564','boxhD':'\\u2565','boxHD':'\\u2566','boxhu':'\\u2534','boxHu':'\\u2567','boxhU':'\\u2568','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsolb':'\\u29C5','bsol':'\\\\','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpE':'\\u2AAE','bumpe':'\\u224F','Bumpeq':'\\u224E','bumpeq':'\\u224F','Cacute':'\\u0106','cacute':'\\u0107','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','cap':'\\u2229','Cap':'\\u22D2','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','Ccaron':'\\u010C','ccaron':'\\u010D','Ccedil':'\\xC7','ccedil':'\\xE7','Ccirc':'\\u0108','ccirc':'\\u0109','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','Cdot':'\\u010A','cdot':'\\u010B','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','CHcy':'\\u0427','chcy':'\\u0447','check':'\\u2713','checkmark':'\\u2713','Chi':'\\u03A7','chi':'\\u03C7','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cir':'\\u25CB','cirE':'\\u29C3','cire':'\\u2257','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','Colone':'\\u2A74','colone':'\\u2254','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','Cscr':'\\uD835\\uDC9E','cscr':'\\uD835\\uDCB8','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cup':'\\u222A','Cup':'\\u22D3','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','Darr':'\\u21A1','dArr':'\\u21D3','dash':'\\u2010','Dashv':'\\u2AE4','dashv':'\\u22A3','dbkarow':'\\u290F','dblac':'\\u02DD','Dcaron':'\\u010E','dcaron':'\\u010F','Dcy':'\\u0414','dcy':'\\u0434','ddagger':'\\u2021','ddarr':'\\u21CA','DD':'\\u2145','dd':'\\u2146','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','Delta':'\\u0394','delta':'\\u03B4','demptyv':'\\u29B1','dfisht':'\\u297F','Dfr':'\\uD835\\uDD07','dfr':'\\uD835\\uDD21','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','DJcy':'\\u0402','djcy':'\\u0452','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','Dopf':'\\uD835\\uDD3B','dopf':'\\uD835\\uDD55','Dot':'\\xA8','dot':'\\u02D9','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','DownArrowBar':'\\u2913','downarrow':'\\u2193','DownArrow':'\\u2193','Downarrow':'\\u21D3','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVectorBar':'\\u2956','DownLeftVector':'\\u21BD','DownRightTeeVector':'\\u295F','DownRightVectorBar':'\\u2957','DownRightVector':'\\u21C1','DownTeeArrow':'\\u21A7','DownTee':'\\u22A4','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','Dscr':'\\uD835\\uDC9F','dscr':'\\uD835\\uDCB9','DScy':'\\u0405','dscy':'\\u0455','dsol':'\\u29F6','Dstrok':'\\u0110','dstrok':'\\u0111','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','DZcy':'\\u040F','dzcy':'\\u045F','dzigrarr':'\\u27FF','Eacute':'\\xC9','eacute':'\\xE9','easter':'\\u2A6E','Ecaron':'\\u011A','ecaron':'\\u011B','Ecirc':'\\xCA','ecirc':'\\xEA','ecir':'\\u2256','ecolon':'\\u2255','Ecy':'\\u042D','ecy':'\\u044D','eDDot':'\\u2A77','Edot':'\\u0116','edot':'\\u0117','eDot':'\\u2251','ee':'\\u2147','efDot':'\\u2252','Efr':'\\uD835\\uDD08','efr':'\\uD835\\uDD22','eg':'\\u2A9A','Egrave':'\\xC8','egrave':'\\xE8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','Emacr':'\\u0112','emacr':'\\u0113','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp13':'\\u2004','emsp14':'\\u2005','emsp':'\\u2003','ENG':'\\u014A','eng':'\\u014B','ensp':'\\u2002','Eogon':'\\u0118','eogon':'\\u0119','Eopf':'\\uD835\\uDD3C','eopf':'\\uD835\\uDD56','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','Epsilon':'\\u0395','epsilon':'\\u03B5','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','Esim':'\\u2A73','esim':'\\u2242','Eta':'\\u0397','eta':'\\u03B7','ETH':'\\xD0','eth':'\\xF0','Euml':'\\xCB','euml':'\\xEB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','Fcy':'\\u0424','fcy':'\\u0444','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','Ffr':'\\uD835\\uDD09','ffr':'\\uD835\\uDD23','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','Fopf':'\\uD835\\uDD3D','fopf':'\\uD835\\uDD57','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','Gamma':'\\u0393','gamma':'\\u03B3','Gammad':'\\u03DC','gammad':'\\u03DD','gap':'\\u2A86','Gbreve':'\\u011E','gbreve':'\\u011F','Gcedil':'\\u0122','Gcirc':'\\u011C','gcirc':'\\u011D','Gcy':'\\u0413','gcy':'\\u0433','Gdot':'\\u0120','gdot':'\\u0121','ge':'\\u2265','gE':'\\u2267','gEl':'\\u2A8C','gel':'\\u22DB','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','gescc':'\\u2AA9','ges':'\\u2A7E','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','Gfr':'\\uD835\\uDD0A','gfr':'\\uD835\\uDD24','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','GJcy':'\\u0403','gjcy':'\\u0453','gla':'\\u2AA5','gl':'\\u2277','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','Gopf':'\\uD835\\uDD3E','gopf':'\\uD835\\uDD58','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','Gscr':'\\uD835\\uDCA2','gscr':'\\u210A','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gt':'>','GT':'>','Gt':'\\u226B','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','HARDcy':'\\u042A','hardcy':'\\u044A','harrcir':'\\u2948','harr':'\\u2194','hArr':'\\u21D4','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','Hcirc':'\\u0124','hcirc':'\\u0125','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','Hstrok':'\\u0126','hstrok':'\\u0127','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','Iacute':'\\xCD','iacute':'\\xED','ic':'\\u2063','Icirc':'\\xCE','icirc':'\\xEE','Icy':'\\u0418','icy':'\\u0438','Idot':'\\u0130','IEcy':'\\u0415','iecy':'\\u0435','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','Igrave':'\\xCC','igrave':'\\xEC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','IJlig':'\\u0132','ijlig':'\\u0133','Imacr':'\\u012A','imacr':'\\u012B','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','Im':'\\u2111','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','incare':'\\u2105','in':'\\u2208','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','intcal':'\\u22BA','int':'\\u222B','Int':'\\u222C','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','IOcy':'\\u0401','iocy':'\\u0451','Iogon':'\\u012E','iogon':'\\u012F','Iopf':'\\uD835\\uDD40','iopf':'\\uD835\\uDD5A','Iota':'\\u0399','iota':'\\u03B9','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','Itilde':'\\u0128','itilde':'\\u0129','Iukcy':'\\u0406','iukcy':'\\u0456','Iuml':'\\xCF','iuml':'\\xEF','Jcirc':'\\u0134','jcirc':'\\u0135','Jcy':'\\u0419','jcy':'\\u0439','Jfr':'\\uD835\\uDD0D','jfr':'\\uD835\\uDD27','jmath':'\\u0237','Jopf':'\\uD835\\uDD41','jopf':'\\uD835\\uDD5B','Jscr':'\\uD835\\uDCA5','jscr':'\\uD835\\uDCBF','Jsercy':'\\u0408','jsercy':'\\u0458','Jukcy':'\\u0404','jukcy':'\\u0454','Kappa':'\\u039A','kappa':'\\u03BA','kappav':'\\u03F0','Kcedil':'\\u0136','kcedil':'\\u0137','Kcy':'\\u041A','kcy':'\\u043A','Kfr':'\\uD835\\uDD0E','kfr':'\\uD835\\uDD28','kgreen':'\\u0138','KHcy':'\\u0425','khcy':'\\u0445','KJcy':'\\u040C','kjcy':'\\u045C','Kopf':'\\uD835\\uDD42','kopf':'\\uD835\\uDD5C','Kscr':'\\uD835\\uDCA6','kscr':'\\uD835\\uDCC0','lAarr':'\\u21DA','Lacute':'\\u0139','lacute':'\\u013A','laemptyv':'\\u29B4','lagran':'\\u2112','Lambda':'\\u039B','lambda':'\\u03BB','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larrb':'\\u21E4','larrbfs':'\\u291F','larr':'\\u2190','Larr':'\\u219E','lArr':'\\u21D0','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','latail':'\\u2919','lAtail':'\\u291B','lat':'\\u2AAB','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','Lcaron':'\\u013D','lcaron':'\\u013E','Lcedil':'\\u013B','lcedil':'\\u013C','lceil':'\\u2308','lcub':'{','Lcy':'\\u041B','lcy':'\\u043B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','LeftArrowBar':'\\u21E4','leftarrow':'\\u2190','LeftArrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVectorBar':'\\u2959','LeftDownVector':'\\u21C3','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','LeftRightArrow':'\\u2194','Leftrightarrow':'\\u21D4','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTeeArrow':'\\u21A4','LeftTee':'\\u22A3','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangleBar':'\\u29CF','LeftTriangle':'\\u22B2','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVectorBar':'\\u2958','LeftUpVector':'\\u21BF','LeftVectorBar':'\\u2952','LeftVector':'\\u21BC','lEg':'\\u2A8B','leg':'\\u22DA','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','lescc':'\\u2AA8','les':'\\u2A7D','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','Lfr':'\\uD835\\uDD0F','lfr':'\\uD835\\uDD29','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','LJcy':'\\u0409','ljcy':'\\u0459','llarr':'\\u21C7','ll':'\\u226A','Ll':'\\u22D8','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','Lmidot':'\\u013F','lmidot':'\\u0140','lmoustache':'\\u23B0','lmoust':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','LongLeftArrow':'\\u27F5','Longleftarrow':'\\u27F8','longleftrightarrow':'\\u27F7','LongLeftRightArrow':'\\u27F7','Longleftrightarrow':'\\u27FA','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','LongRightArrow':'\\u27F6','Longrightarrow':'\\u27F9','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','Lopf':'\\uD835\\uDD43','lopf':'\\uD835\\uDD5D','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','Lstrok':'\\u0141','lstrok':'\\u0142','ltcc':'\\u2AA6','ltcir':'\\u2A79','lt':'<','LT':'<','Lt':'\\u226A','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','Map':'\\u2905','map':'\\u21A6','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','Mcy':'\\u041C','mcy':'\\u043C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','Mfr':'\\uD835\\uDD10','mfr':'\\uD835\\uDD2A','mho':'\\u2127','micro':'\\xB5','midast':'*','midcir':'\\u2AF0','mid':'\\u2223','middot':'\\xB7','minusb':'\\u229F','minus':'\\u2212','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','Mopf':'\\uD835\\uDD44','mopf':'\\uD835\\uDD5E','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','Mu':'\\u039C','mu':'\\u03BC','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','Nacute':'\\u0143','nacute':'\\u0144','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natural':'\\u266E','naturals':'\\u2115','natur':'\\u266E','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','Ncaron':'\\u0147','ncaron':'\\u0148','Ncedil':'\\u0145','ncedil':'\\u0146','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','Ncy':'\\u041D','ncy':'\\u043D','ndash':'\\u2013','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','ne':'\\u2260','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','Nfr':'\\uD835\\uDD11','nfr':'\\uD835\\uDD2B','ngE':'\\u2267\\u0338','nge':'\\u2271','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','nGt':'\\u226B\\u20D2','ngt':'\\u226F','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','NJcy':'\\u040A','njcy':'\\u045A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nlE':'\\u2266\\u0338','nle':'\\u2270','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nLt':'\\u226A\\u20D2','nlt':'\\u226E','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','Not':'\\u2AEC','not':'\\xAC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangle':'\\u22EA','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangle':'\\u22EB','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','nparallel':'\\u2226','npar':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','npre':'\\u2AAF\\u0338','nrarrc':'\\u2933\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','Nscr':'\\uD835\\uDCA9','nscr':'\\uD835\\uDCC3','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsubE':'\\u2AC5\\u0338','nsube':'\\u2288','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupE':'\\u2AC6\\u0338','nsupe':'\\u2289','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','Ntilde':'\\xD1','ntilde':'\\xF1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','Nu':'\\u039D','nu':'\\u03BD','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','Oacute':'\\xD3','oacute':'\\xF3','oast':'\\u229B','Ocirc':'\\xD4','ocirc':'\\xF4','ocir':'\\u229A','Ocy':'\\u041E','ocy':'\\u043E','odash':'\\u229D','Odblac':'\\u0150','odblac':'\\u0151','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','OElig':'\\u0152','oelig':'\\u0153','ofcir':'\\u29BF','Ofr':'\\uD835\\uDD12','ofr':'\\uD835\\uDD2C','ogon':'\\u02DB','Ograve':'\\xD2','ograve':'\\xF2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','Omacr':'\\u014C','omacr':'\\u014D','Omega':'\\u03A9','omega':'\\u03C9','Omicron':'\\u039F','omicron':'\\u03BF','omid':'\\u29B6','ominus':'\\u2296','Oopf':'\\uD835\\uDD46','oopf':'\\uD835\\uDD60','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','orarr':'\\u21BB','Or':'\\u2A54','or':'\\u2228','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','Oscr':'\\uD835\\uDCAA','oscr':'\\u2134','Oslash':'\\xD8','oslash':'\\xF8','osol':'\\u2298','Otilde':'\\xD5','otilde':'\\xF5','otimesas':'\\u2A36','Otimes':'\\u2A37','otimes':'\\u2297','Ouml':'\\xD6','ouml':'\\xF6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','para':'\\xB6','parallel':'\\u2225','par':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','Pcy':'\\u041F','pcy':'\\u043F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','Pfr':'\\uD835\\uDD13','pfr':'\\uD835\\uDD2D','Phi':'\\u03A6','phi':'\\u03C6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','Pi':'\\u03A0','pi':'\\u03C0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plus':'+','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','prap':'\\u2AB7','Pr':'\\u2ABB','pr':'\\u227A','prcue':'\\u227C','precapprox':'\\u2AB7','prec':'\\u227A','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','pre':'\\u2AAF','prE':'\\u2AB3','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportional':'\\u221D','Proportion':'\\u2237','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','Pscr':'\\uD835\\uDCAB','pscr':'\\uD835\\uDCC5','Psi':'\\u03A8','psi':'\\u03C8','puncsp':'\\u2008','Qfr':'\\uD835\\uDD14','qfr':'\\uD835\\uDD2E','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','Qscr':'\\uD835\\uDCAC','qscr':'\\uD835\\uDCC6','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','Racute':'\\u0154','racute':'\\u0155','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarr':'\\u2192','Rarr':'\\u21A0','rArr':'\\u21D2','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','Rarrtl':'\\u2916','rarrtl':'\\u21A3','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','Rcaron':'\\u0158','rcaron':'\\u0159','Rcedil':'\\u0156','rcedil':'\\u0157','rceil':'\\u2309','rcub':'}','Rcy':'\\u0420','rcy':'\\u0440','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','Re':'\\u211C','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','Rho':'\\u03A1','rho':'\\u03C1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','RightArrowBar':'\\u21E5','rightarrow':'\\u2192','RightArrow':'\\u2192','Rightarrow':'\\u21D2','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVectorBar':'\\u2955','RightDownVector':'\\u21C2','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTeeArrow':'\\u21A6','RightTee':'\\u22A2','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangleBar':'\\u29D0','RightTriangle':'\\u22B3','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVectorBar':'\\u2954','RightUpVector':'\\u21BE','RightVectorBar':'\\u2953','RightVector':'\\u21C0','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoustache':'\\u23B1','rmoust':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','Sacute':'\\u015A','sacute':'\\u015B','sbquo':'\\u201A','scap':'\\u2AB8','Scaron':'\\u0160','scaron':'\\u0161','Sc':'\\u2ABC','sc':'\\u227B','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','Scedil':'\\u015E','scedil':'\\u015F','Scirc':'\\u015C','scirc':'\\u015D','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','Scy':'\\u0421','scy':'\\u0441','sdotb':'\\u22A1','sdot':'\\u22C5','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','Sfr':'\\uD835\\uDD16','sfr':'\\uD835\\uDD30','sfrown':'\\u2322','sharp':'\\u266F','SHCHcy':'\\u0429','shchcy':'\\u0449','SHcy':'\\u0428','shcy':'\\u0448','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','Sigma':'\\u03A3','sigma':'\\u03C3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','SOFTcy':'\\u042C','softcy':'\\u044C','solbar':'\\u233F','solb':'\\u29C4','sol':'/','Sopf':'\\uD835\\uDD4A','sopf':'\\uD835\\uDD64','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squ':'\\u25A1','squf':'\\u25AA','srarr':'\\u2192','Sscr':'\\uD835\\uDCAE','sscr':'\\uD835\\uDCC8','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','Star':'\\u22C6','star':'\\u2606','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','subE':'\\u2AC5','sube':'\\u2286','subedot':'\\u2AC3','submult':'\\u2AC1','subnE':'\\u2ACB','subne':'\\u228A','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succapprox':'\\u2AB8','succ':'\\u227B','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','sup':'\\u2283','Sup':'\\u22D1','supdot':'\\u2ABE','supdsub':'\\u2AD8','supE':'\\u2AC6','supe':'\\u2287','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supnE':'\\u2ACC','supne':'\\u228B','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','Tau':'\\u03A4','tau':'\\u03C4','tbrk':'\\u23B4','Tcaron':'\\u0164','tcaron':'\\u0165','Tcedil':'\\u0162','tcedil':'\\u0163','Tcy':'\\u0422','tcy':'\\u0442','tdot':'\\u20DB','telrec':'\\u2315','Tfr':'\\uD835\\uDD17','tfr':'\\uD835\\uDD31','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','Theta':'\\u0398','theta':'\\u03B8','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','ThinSpace':'\\u2009','thinsp':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','THORN':'\\xDE','thorn':'\\xFE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','timesbar':'\\u2A31','timesb':'\\u22A0','times':'\\xD7','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','topbot':'\\u2336','topcir':'\\u2AF1','top':'\\u22A4','Topf':'\\uD835\\uDD4B','topf':'\\uD835\\uDD65','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','Tscr':'\\uD835\\uDCAF','tscr':'\\uD835\\uDCC9','TScy':'\\u0426','tscy':'\\u0446','TSHcy':'\\u040B','tshcy':'\\u045B','Tstrok':'\\u0166','tstrok':'\\u0167','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','Uacute':'\\xDA','uacute':'\\xFA','uarr':'\\u2191','Uarr':'\\u219F','uArr':'\\u21D1','Uarrocir':'\\u2949','Ubrcy':'\\u040E','ubrcy':'\\u045E','Ubreve':'\\u016C','ubreve':'\\u016D','Ucirc':'\\xDB','ucirc':'\\xFB','Ucy':'\\u0423','ucy':'\\u0443','udarr':'\\u21C5','Udblac':'\\u0170','udblac':'\\u0171','udhar':'\\u296E','ufisht':'\\u297E','Ufr':'\\uD835\\uDD18','ufr':'\\uD835\\uDD32','Ugrave':'\\xD9','ugrave':'\\xF9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','Umacr':'\\u016A','umacr':'\\u016B','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','Uogon':'\\u0172','uogon':'\\u0173','Uopf':'\\uD835\\uDD4C','uopf':'\\uD835\\uDD66','UpArrowBar':'\\u2912','uparrow':'\\u2191','UpArrow':'\\u2191','Uparrow':'\\u21D1','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','UpDownArrow':'\\u2195','Updownarrow':'\\u21D5','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','Upsilon':'\\u03A5','upsilon':'\\u03C5','UpTeeArrow':'\\u21A5','UpTee':'\\u22A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','Uring':'\\u016E','uring':'\\u016F','urtri':'\\u25F9','Uscr':'\\uD835\\uDCB0','uscr':'\\uD835\\uDCCA','utdot':'\\u22F0','Utilde':'\\u0168','utilde':'\\u0169','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','Uuml':'\\xDC','uuml':'\\xFC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','Vcy':'\\u0412','vcy':'\\u0432','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','veebar':'\\u22BB','vee':'\\u2228','Vee':'\\u22C1','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','Vfr':'\\uD835\\uDD19','vfr':'\\uD835\\uDD33','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','Vopf':'\\uD835\\uDD4D','vopf':'\\uD835\\uDD67','vprop':'\\u221D','vrtri':'\\u22B3','Vscr':'\\uD835\\uDCB1','vscr':'\\uD835\\uDCCB','vsubnE':'\\u2ACB\\uFE00','vsubne':'\\u228A\\uFE00','vsupnE':'\\u2ACC\\uFE00','vsupne':'\\u228B\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','Wcirc':'\\u0174','wcirc':'\\u0175','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','Wfr':'\\uD835\\uDD1A','wfr':'\\uD835\\uDD34','Wopf':'\\uD835\\uDD4E','wopf':'\\uD835\\uDD68','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','Wscr':'\\uD835\\uDCB2','wscr':'\\uD835\\uDCCC','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','Xfr':'\\uD835\\uDD1B','xfr':'\\uD835\\uDD35','xharr':'\\u27F7','xhArr':'\\u27FA','Xi':'\\u039E','xi':'\\u03BE','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','Xopf':'\\uD835\\uDD4F','xopf':'\\uD835\\uDD69','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','Xscr':'\\uD835\\uDCB3','xscr':'\\uD835\\uDCCD','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','Yacute':'\\xDD','yacute':'\\xFD','YAcy':'\\u042F','yacy':'\\u044F','Ycirc':'\\u0176','ycirc':'\\u0177','Ycy':'\\u042B','ycy':'\\u044B','yen':'\\xA5','Yfr':'\\uD835\\uDD1C','yfr':'\\uD835\\uDD36','YIcy':'\\u0407','yicy':'\\u0457','Yopf':'\\uD835\\uDD50','yopf':'\\uD835\\uDD6A','Yscr':'\\uD835\\uDCB4','yscr':'\\uD835\\uDCCE','YUcy':'\\u042E','yucy':'\\u044E','yuml':'\\xFF','Yuml':'\\u0178','Zacute':'\\u0179','zacute':'\\u017A','Zcaron':'\\u017D','zcaron':'\\u017E','Zcy':'\\u0417','zcy':'\\u0437','Zdot':'\\u017B','zdot':'\\u017C','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','Zeta':'\\u0396','zeta':'\\u03B6','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','ZHcy':'\\u0416','zhcy':'\\u0436','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','Zscr':'\\uD835\\uDCB5','zscr':'\\uD835\\uDCCF','zwj':'\\u200D','zwnj':'\\u200C'};\n\tvar decodeMapLegacy = {'Aacute':'\\xC1','aacute':'\\xE1','Acirc':'\\xC2','acirc':'\\xE2','acute':'\\xB4','AElig':'\\xC6','aelig':'\\xE6','Agrave':'\\xC0','agrave':'\\xE0','amp':'&','AMP':'&','Aring':'\\xC5','aring':'\\xE5','Atilde':'\\xC3','atilde':'\\xE3','Auml':'\\xC4','auml':'\\xE4','brvbar':'\\xA6','Ccedil':'\\xC7','ccedil':'\\xE7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','Eacute':'\\xC9','eacute':'\\xE9','Ecirc':'\\xCA','ecirc':'\\xEA','Egrave':'\\xC8','egrave':'\\xE8','ETH':'\\xD0','eth':'\\xF0','Euml':'\\xCB','euml':'\\xEB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','Iacute':'\\xCD','iacute':'\\xED','Icirc':'\\xCE','icirc':'\\xEE','iexcl':'\\xA1','Igrave':'\\xCC','igrave':'\\xEC','iquest':'\\xBF','Iuml':'\\xCF','iuml':'\\xEF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','Ntilde':'\\xD1','ntilde':'\\xF1','Oacute':'\\xD3','oacute':'\\xF3','Ocirc':'\\xD4','ocirc':'\\xF4','Ograve':'\\xD2','ograve':'\\xF2','ordf':'\\xAA','ordm':'\\xBA','Oslash':'\\xD8','oslash':'\\xF8','Otilde':'\\xD5','otilde':'\\xF5','Ouml':'\\xD6','ouml':'\\xF6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','THORN':'\\xDE','thorn':'\\xFE','times':'\\xD7','Uacute':'\\xDA','uacute':'\\xFA','Ucirc':'\\xDB','ucirc':'\\xFB','Ugrave':'\\xD9','ugrave':'\\xF9','uml':'\\xA8','Uuml':'\\xDC','uuml':'\\xFC','Yacute':'\\xDD','yacute':'\\xFD','yen':'\\xA5','yuml':'\\xFF'};\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\tvar object = {};\n\tvar hasOwnProperty = object.hasOwnProperty;\n\tvar has = function(object, propertyName) {\n\t\treturn hasOwnProperty.call(object, propertyName);\n\t};\n\n\tvar contains = function(array, value) {\n\t\tvar index = -1;\n\t\tvar length = array.length;\n\t\twhile (++index < length) {\n\t\t\tif (array[index] == value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tvar merge = function(options, defaults) {\n\t\tif (!options) {\n\t\t\treturn defaults;\n\t\t}\n\t\tvar result = {};\n\t\tvar key;\n\t\tfor (key in defaults) {\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\n\t\t\t// option names are used anyway. Any others are ignored.\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\n\t\t}\n\t\treturn result;\n\t};\n\n\t// Modified version of `ucs2encode`; see http://mths.be/punycode.\n\tvar codePointToSymbol = function(codePoint, strict) {\n\t\tvar output = '';\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\n\t\t\t// See issue #4:\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n\t\t\t// REPLACEMENT CHARACTER.”\n\t\t\tif (strict) {\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\n\t\t\t}\n\t\t\treturn '\\uFFFD';\n\t\t}\n\t\tif (has(decodeMapNumeric, codePoint)) {\n\t\t\tif (strict) {\n\t\t\t\tparseError('disallowed character reference');\n\t\t\t}\n\t\t\treturn decodeMapNumeric[codePoint];\n\t\t}\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\n\t\t\tparseError('disallowed character reference');\n\t\t}\n\t\tif (codePoint > 0xFFFF) {\n\t\t\tcodePoint -= 0x10000;\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(codePoint);\n\t\treturn output;\n\t};\n\n\tvar hexEscape = function(symbol) {\n\t\treturn '&#x' + symbol.charCodeAt(0).toString(16).toUpperCase() + ';';\n\t};\n\n\tvar parseError = function(message) {\n\t\tthrow Error('Parse error: ' + message);\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar encode = function(string, options) {\n\t\toptions = merge(options, encode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\n\t\t\tparseError('forbidden code point');\n\t\t}\n\t\tvar encodeEverything = options.encodeEverything;\n\t\tvar useNamedReferences = options.useNamedReferences;\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\n\t\tif (encodeEverything) {\n\t\t\t// Encode ASCII symbols.\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\n\t\t\t\t// Use named references if requested & possible.\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\n\t\t\t\t}\n\t\t\t\treturn hexEscape(symbol);\n\t\t\t});\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\n\t\t\t// is within the ASCII range.\n\t\t\tif (useNamedReferences) {\n\t\t\t\tstring = string\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\n\t\t\t}\n\t\t\t// Encode non-ASCII symbols.\n\t\t\tif (useNamedReferences) {\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\n\t\t} else if (useNamedReferences) {\n\t\t\t// Apply named character references.\n\t\t\t// Encode `<>\"'&` using named character references.\n\t\t\tif (!allowUnsafeSymbols) {\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\n\t\t\t// `<>\"'&`.\n\t\t\tstring = string\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\n\t\t\t\treturn '&' + encodeMap[string] + ';';\n\t\t\t});\n\t\t} else if (!allowUnsafeSymbols) {\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n\t\t\t// using named character references.\n\t\t\tstring = string.replace(regexEscape, hexEscape);\n\t\t}\n\t\treturn string\n\t\t\t// Encode astral symbols.\n\t\t\t.replace(regexAstralSymbols, function($0) {\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tvar high = $0.charCodeAt(0);\n\t\t\t\tvar low = $0.charCodeAt(1);\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\n\t\t\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\n\t\t\t})\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\n\t\t\t// using a hexadecimal escape.\n\t\t\t.replace(regexBmpWhitelist, hexEscape);\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tencode.options = {\n\t\t'allowUnsafeSymbols': false,\n\t\t'encodeEverything': false,\n\t\t'strict': false,\n\t\t'useNamedReferences': false\n\t};\n\n\tvar decode = function(html, options) {\n\t\toptions = merge(options, decode.options);\n\t\tvar strict = options.strict;\n\t\tif (strict && regexInvalidEntity.test(html)) {\n\t\t\tparseError('malformed character reference');\n\t\t}\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7) {\n\t\t\tvar codePoint;\n\t\t\tvar semicolon;\n\t\t\tvar hexDigits;\n\t\t\tvar reference;\n\t\t\tvar next;\n\t\t\tif ($1) {\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\n\t\t\t\tcodePoint = $1;\n\t\t\t\tsemicolon = $2;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\t\t\tif ($3) {\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\n\t\t\t\thexDigits = $3;\n\t\t\t\tsemicolon = $4;\n\t\t\t\tif (strict && !semicolon) {\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\n\t\t\t\t}\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\n\t\t\t}\n\t\t\tif ($5) {\n\t\t\t\t// Decode named character references with trailing `;`, e.g. `&copy;`.\n\t\t\t\treference = $5;\n\t\t\t\tif (has(decodeMap, reference)) {\n\t\t\t\t\treturn decodeMap[reference];\n\t\t\t\t} else {\n\t\t\t\t\t// Ambiguous ampersand; see http://mths.be/notes/ambiguous-ampersands.\n\t\t\t\t\tif (strict) {\n\t\t\t\t\t\tparseError(\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn $0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// If we’re still here, it’s a legacy reference for sure. No need for an\n\t\t\t// extra `if` check.\n\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`\n\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\n\t\t\t// followed by `=` in an attribute context.\n\t\t\treference = $6;\n\t\t\tnext = $7;\n\t\t\tif (next && options.isAttributeValue) {\n\t\t\t\tif (strict && next == '=') {\n\t\t\t\t\tparseError('`&` did not start a character reference');\n\t\t\t\t}\n\t\t\t\treturn $0;\n\t\t\t} else {\n\t\t\t\tif (strict) {\n\t\t\t\t\tparseError(\n\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\n\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\n\t\t\t}\n\t\t});\n\t};\n\t// Expose default options (so they can be overridden globally).\n\tdecode.options = {\n\t\t'isAttributeValue': false,\n\t\t'strict': false\n\t};\n\n\tvar escape = function(string) {\n\t\treturn string.replace(regexEscape, function($0) {\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\n\t\t\treturn escapeMap[$0];\n\t\t});\n\t};\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar he = {\n\t\t'version': '0.5.0',\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'escape': escape,\n\t\t'unescape': decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn he;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = he;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in he) {\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.he = he;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],19:[function(require,module,exports){\n/** @license MIT License (c) copyright 2011-2013 original author or authors */\n\n/**\n * delay.js\n *\n * Helper that returns a promise that resolves after a delay.\n *\n * @author Brian Cavalier\n * @author John Hann\n */\n\n(function(define) {\ndefine(function(require) {\n\n\tvar when = require('./when');\n\n    /**\n\t * @deprecated Use when(value).delay(ms)\n     */\n    return function delay(msec, value) {\n\t\treturn when(value).delay(msec);\n    };\n\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n\n\n},{\"./when\":37}],20:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function (require) {\n\n\tvar makePromise = require('./makePromise');\n\tvar Scheduler = require('./Scheduler');\n\tvar async = require('./env').asap;\n\n\treturn makePromise({\n\t\tscheduler: new Scheduler(async)\n\t});\n\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n},{\"./Scheduler\":21,\"./env\":33,\"./makePromise\":35}],21:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\t// Credit to Twisol (https://github.com/Twisol) for suggesting\n\t// this type of extensible queue + trampoline approach for next-tick conflation.\n\n\t/**\n\t * Async task scheduler\n\t * @param {function} async function to schedule a single async function\n\t * @constructor\n\t */\n\tfunction Scheduler(async) {\n\t\tthis._async = async;\n\t\tthis._running = false;\n\n\t\tthis._queue = this;\n\t\tthis._queueLen = 0;\n\t\tthis._afterQueue = {};\n\t\tthis._afterQueueLen = 0;\n\n\t\tvar self = this;\n\t\tthis.drain = function() {\n\t\t\tself._drain();\n\t\t};\n\t}\n\n\t/**\n\t * Enqueue a task\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.enqueue = function(task) {\n\t\tthis._queue[this._queueLen++] = task;\n\t\tthis.run();\n\t};\n\n\t/**\n\t * Enqueue a task to run after the main task queue\n\t * @param {{ run:function }} task\n\t */\n\tScheduler.prototype.afterQueue = function(task) {\n\t\tthis._afterQueue[this._afterQueueLen++] = task;\n\t\tthis.run();\n\t};\n\n\tScheduler.prototype.run = function() {\n\t\tif (!this._running) {\n\t\t\tthis._running = true;\n\t\t\tthis._async(this.drain);\n\t\t}\n\t};\n\n\t/**\n\t * Drain the handler queue entirely, and then the after queue\n\t */\n\tScheduler.prototype._drain = function() {\n\t\tvar i = 0;\n\t\tfor (; i < this._queueLen; ++i) {\n\t\t\tthis._queue[i].run();\n\t\t\tthis._queue[i] = void 0;\n\t\t}\n\n\t\tthis._queueLen = 0;\n\t\tthis._running = false;\n\n\t\tfor (i = 0; i < this._afterQueueLen; ++i) {\n\t\t\tthis._afterQueue[i].run();\n\t\t\tthis._afterQueue[i] = void 0;\n\t\t}\n\n\t\tthis._afterQueueLen = 0;\n\t};\n\n\treturn Scheduler;\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],22:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\t/**\n\t * Custom error type for promises rejected by promise.timeout\n\t * @param {string} message\n\t * @constructor\n\t */\n\tfunction TimeoutError (message) {\n\t\tError.call(this);\n\t\tthis.message = message;\n\t\tthis.name = TimeoutError.name;\n\t\tif (typeof Error.captureStackTrace === 'function') {\n\t\t\tError.captureStackTrace(this, TimeoutError);\n\t\t}\n\t}\n\n\tTimeoutError.prototype = Object.create(Error.prototype);\n\tTimeoutError.prototype.constructor = TimeoutError;\n\n\treturn TimeoutError;\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n},{}],23:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\tmakeApply.tryCatchResolve = tryCatchResolve;\n\n\treturn makeApply;\n\n\tfunction makeApply(Promise, call) {\n\t\tif(arguments.length < 2) {\n\t\t\tcall = tryCatchResolve;\n\t\t}\n\n\t\treturn apply;\n\n\t\tfunction apply(f, thisArg, args) {\n\t\t\tvar p = Promise._defer();\n\t\t\tvar l = args.length;\n\t\t\tvar params = new Array(l);\n\t\t\tcallAndResolve({ f:f, thisArg:thisArg, args:args, params:params, i:l-1, call:call }, p._handler);\n\n\t\t\treturn p;\n\t\t}\n\n\t\tfunction callAndResolve(c, h) {\n\t\t\tif(c.i < 0) {\n\t\t\t\treturn call(c.f, c.thisArg, c.params, h);\n\t\t\t}\n\n\t\t\tvar handler = Promise._handler(c.args[c.i]);\n\t\t\thandler.fold(callAndResolveNext, c, void 0, h);\n\t\t}\n\n\t\tfunction callAndResolveNext(c, x, h) {\n\t\t\tc.params[c.i] = x;\n\t\t\tc.i -= 1;\n\t\t\tcallAndResolve(c, h);\n\t\t}\n\t}\n\n\tfunction tryCatchResolve(f, thisArg, args, resolver) {\n\t\ttry {\n\t\t\tresolver.resolve(f.apply(thisArg, args));\n\t\t} catch(e) {\n\t\t\tresolver.reject(e);\n\t\t}\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n\n\n},{}],24:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar state = require('../state');\n\tvar applier = require('../apply');\n\n\treturn function array(Promise) {\n\n\t\tvar applyFold = applier(Promise);\n\t\tvar toPromise = Promise.resolve;\n\t\tvar all = Promise.all;\n\n\t\tvar ar = Array.prototype.reduce;\n\t\tvar arr = Array.prototype.reduceRight;\n\t\tvar slice = Array.prototype.slice;\n\n\t\t// Additional array combinators\n\n\t\tPromise.any = any;\n\t\tPromise.some = some;\n\t\tPromise.settle = settle;\n\n\t\tPromise.map = map;\n\t\tPromise.filter = filter;\n\t\tPromise.reduce = reduce;\n\t\tPromise.reduceRight = reduceRight;\n\n\t\t/**\n\t\t * When this promise fulfills with an array, do\n\t\t * onFulfilled.apply(void 0, array)\n\t\t * @param {function} onFulfilled function to apply\n\t\t * @returns {Promise} promise for the result of applying onFulfilled\n\t\t */\n\t\tPromise.prototype.spread = function(onFulfilled) {\n\t\t\treturn this.then(all).then(function(array) {\n\t\t\t\treturn onFulfilled.apply(this, array);\n\t\t\t});\n\t\t};\n\n\t\treturn Promise;\n\n\t\t/**\n\t\t * One-winner competitive race.\n\t\t * Return a promise that will fulfill when one of the promises\n\t\t * in the input array fulfills, or will reject when all promises\n\t\t * have rejected.\n\t\t * @param {array} promises\n\t\t * @returns {Promise} promise for the first fulfilled value\n\t\t */\n\t\tfunction any(promises) {\n\t\t\tvar p = Promise._defer();\n\t\t\tvar resolver = p._handler;\n\t\t\tvar l = promises.length>>>0;\n\n\t\t\tvar pending = l;\n\t\t\tvar errors = [];\n\n\t\t\tfor (var h, x, i = 0; i < l; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(x === void 0 && !(i in promises)) {\n\t\t\t\t\t--pending;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\th = Promise._handler(x);\n\t\t\t\tif(h.state() > 0) {\n\t\t\t\t\tresolver.become(h);\n\t\t\t\t\tPromise._visitRemaining(promises, i, h);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\th.visit(resolver, handleFulfill, handleReject);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(pending === 0) {\n\t\t\t\tresolver.reject(new RangeError('any(): array must not be empty'));\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t\tfunction handleFulfill(x) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\terrors = null;\n\t\t\t\tthis.resolve(x); // this === resolver\n\t\t\t}\n\n\t\t\tfunction handleReject(e) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tif(this.resolved) { // this === resolver\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\terrors.push(e);\n\t\t\t\tif(--pending === 0) {\n\t\t\t\t\tthis.reject(errors);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * N-winner competitive race\n\t\t * Return a promise that will fulfill when n input promises have\n\t\t * fulfilled, or will reject when it becomes impossible for n\n\t\t * input promises to fulfill (ie when promises.length - n + 1\n\t\t * have rejected)\n\t\t * @param {array} promises\n\t\t * @param {number} n\n\t\t * @returns {Promise} promise for the earliest n fulfillment values\n\t\t *\n\t\t * @deprecated\n\t\t */\n\t\tfunction some(promises, n) {\n\t\t\t/*jshint maxcomplexity:7*/\n\t\t\tvar p = Promise._defer();\n\t\t\tvar resolver = p._handler;\n\n\t\t\tvar results = [];\n\t\t\tvar errors = [];\n\n\t\t\tvar l = promises.length>>>0;\n\t\t\tvar nFulfill = 0;\n\t\t\tvar nReject;\n\t\t\tvar x, i; // reused in both for() loops\n\n\t\t\t// First pass: count actual array items\n\t\t\tfor(i=0; i<l; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(x === void 0 && !(i in promises)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t++nFulfill;\n\t\t\t}\n\n\t\t\t// Compute actual goals\n\t\t\tn = Math.max(n, 0);\n\t\t\tnReject = (nFulfill - n + 1);\n\t\t\tnFulfill = Math.min(n, nFulfill);\n\n\t\t\tif(n > nFulfill) {\n\t\t\t\tresolver.reject(new RangeError('some(): array must contain at least '\n\t\t\t\t+ n + ' item(s), but had ' + nFulfill));\n\t\t\t} else if(nFulfill === 0) {\n\t\t\t\tresolver.resolve(results);\n\t\t\t}\n\n\t\t\t// Second pass: observe each array item, make progress toward goals\n\t\t\tfor(i=0; i<l; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif(x === void 0 && !(i in promises)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tPromise._handler(x).visit(resolver, fulfill, reject, resolver.notify);\n\t\t\t}\n\n\t\t\treturn p;\n\n\t\t\tfunction fulfill(x) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tif(this.resolved) { // this === resolver\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresults.push(x);\n\t\t\t\tif(--nFulfill === 0) {\n\t\t\t\t\terrors = null;\n\t\t\t\t\tthis.resolve(results);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction reject(e) {\n\t\t\t\t/*jshint validthis:true*/\n\t\t\t\tif(this.resolved) { // this === resolver\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\terrors.push(e);\n\t\t\t\tif(--nReject === 0) {\n\t\t\t\t\tresults = null;\n\t\t\t\t\tthis.reject(errors);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Apply f to the value of each promise in a list of promises\n\t\t * and return a new list containing the results.\n\t\t * @param {array} promises\n\t\t * @param {function(x:*, index:Number):*} f mapping function\n\t\t * @returns {Promise}\n\t\t */\n\t\tfunction map(promises, f) {\n\t\t\treturn Promise._traverse(f, promises);\n\t\t}\n\n\t\t/**\n\t\t * Filter the provided array of promises using the provided predicate.  Input may\n\t\t * contain promises and values\n\t\t * @param {Array} promises array of promises and values\n\t\t * @param {function(x:*, index:Number):boolean} predicate filtering predicate.\n\t\t *  Must return truthy (or promise for truthy) for items to retain.\n\t\t * @returns {Promise} promise that will fulfill with an array containing all items\n\t\t *  for which predicate returned truthy.\n\t\t */\n\t\tfunction filter(promises, predicate) {\n\t\t\tvar a = slice.call(promises);\n\t\t\treturn Promise._traverse(predicate, a).then(function(keep) {\n\t\t\t\treturn filterSync(a, keep);\n\t\t\t});\n\t\t}\n\n\t\tfunction filterSync(promises, keep) {\n\t\t\t// Safe because we know all promises have fulfilled if we've made it this far\n\t\t\tvar l = keep.length;\n\t\t\tvar filtered = new Array(l);\n\t\t\tfor(var i=0, j=0; i<l; ++i) {\n\t\t\t\tif(keep[i]) {\n\t\t\t\t\tfiltered[j++] = Promise._handler(promises[i]).value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiltered.length = j;\n\t\t\treturn filtered;\n\n\t\t}\n\n\t\t/**\n\t\t * Return a promise that will always fulfill with an array containing\n\t\t * the outcome states of all input promises.  The returned promise\n\t\t * will never reject.\n\t\t * @param {Array} promises\n\t\t * @returns {Promise} promise for array of settled state descriptors\n\t\t */\n\t\tfunction settle(promises) {\n\t\t\treturn all(promises.map(settleOne));\n\t\t}\n\n\t\tfunction settleOne(p) {\n\t\t\tvar h = Promise._handler(p);\n\t\t\tif(h.state() === 0) {\n\t\t\t\treturn toPromise(p).then(state.fulfilled, state.rejected);\n\t\t\t}\n\n\t\t\th._unreport();\n\t\t\treturn state.inspect(h);\n\t\t}\n\n\t\t/**\n\t\t * Traditional reduce function, similar to `Array.prototype.reduce()`, but\n\t\t * input may contain promises and/or values, and reduceFunc\n\t\t * may return either a value or a promise, *and* initialValue may\n\t\t * be a promise for the starting value.\n\t\t * @param {Array|Promise} promises array or promise for an array of anything,\n\t\t *      may contain a mix of promises and values.\n\t\t * @param {function(accumulated:*, x:*, index:Number):*} f reduce function\n\t\t * @returns {Promise} that will resolve to the final reduced value\n\t\t */\n\t\tfunction reduce(promises, f /*, initialValue */) {\n\t\t\treturn arguments.length > 2 ? ar.call(promises, liftCombine(f), arguments[2])\n\t\t\t\t\t: ar.call(promises, liftCombine(f));\n\t\t}\n\n\t\t/**\n\t\t * Traditional reduce function, similar to `Array.prototype.reduceRight()`, but\n\t\t * input may contain promises and/or values, and reduceFunc\n\t\t * may return either a value or a promise, *and* initialValue may\n\t\t * be a promise for the starting value.\n\t\t * @param {Array|Promise} promises array or promise for an array of anything,\n\t\t *      may contain a mix of promises and values.\n\t\t * @param {function(accumulated:*, x:*, index:Number):*} f reduce function\n\t\t * @returns {Promise} that will resolve to the final reduced value\n\t\t */\n\t\tfunction reduceRight(promises, f /*, initialValue */) {\n\t\t\treturn arguments.length > 2 ? arr.call(promises, liftCombine(f), arguments[2])\n\t\t\t\t\t: arr.call(promises, liftCombine(f));\n\t\t}\n\n\t\tfunction liftCombine(f) {\n\t\t\treturn function(z, x, i) {\n\t\t\t\treturn applyFold(f, void 0, [z,x,i]);\n\t\t\t};\n\t\t}\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n},{\"../apply\":23,\"../state\":36}],25:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function flow(Promise) {\n\n\t\tvar resolve = Promise.resolve;\n\t\tvar reject = Promise.reject;\n\t\tvar origCatch = Promise.prototype['catch'];\n\n\t\t/**\n\t\t * Handle the ultimate fulfillment value or rejection reason, and assume\n\t\t * responsibility for all errors.  If an error propagates out of result\n\t\t * or handleFatalError, it will be rethrown to the host, resulting in a\n\t\t * loud stack track on most platforms and a crash on some.\n\t\t * @param {function?} onResult\n\t\t * @param {function?} onError\n\t\t * @returns {undefined}\n\t\t */\n\t\tPromise.prototype.done = function(onResult, onError) {\n\t\t\tthis._handler.visit(this._handler.receiver, onResult, onError);\n\t\t};\n\n\t\t/**\n\t\t * Add Error-type and predicate matching to catch.  Examples:\n\t\t * promise.catch(TypeError, handleTypeError)\n\t\t *   .catch(predicate, handleMatchedErrors)\n\t\t *   .catch(handleRemainingErrors)\n\t\t * @param onRejected\n\t\t * @returns {*}\n\t\t */\n\t\tPromise.prototype['catch'] = Promise.prototype.otherwise = function(onRejected) {\n\t\t\tif (arguments.length < 2) {\n\t\t\t\treturn origCatch.call(this, onRejected);\n\t\t\t}\n\n\t\t\tif(typeof onRejected !== 'function') {\n\t\t\t\treturn this.ensure(rejectInvalidPredicate);\n\t\t\t}\n\n\t\t\treturn origCatch.call(this, createCatchFilter(arguments[1], onRejected));\n\t\t};\n\n\t\t/**\n\t\t * Wraps the provided catch handler, so that it will only be called\n\t\t * if the predicate evaluates truthy\n\t\t * @param {?function} handler\n\t\t * @param {function} predicate\n\t\t * @returns {function} conditional catch handler\n\t\t */\n\t\tfunction createCatchFilter(handler, predicate) {\n\t\t\treturn function(e) {\n\t\t\t\treturn evaluatePredicate(e, predicate)\n\t\t\t\t\t? handler.call(this, e)\n\t\t\t\t\t: reject(e);\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Ensures that onFulfilledOrRejected will be called regardless of whether\n\t\t * this promise is fulfilled or rejected.  onFulfilledOrRejected WILL NOT\n\t\t * receive the promises' value or reason.  Any returned value will be disregarded.\n\t\t * onFulfilledOrRejected may throw or return a rejected promise to signal\n\t\t * an additional error.\n\t\t * @param {function} handler handler to be called regardless of\n\t\t *  fulfillment or rejection\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype['finally'] = Promise.prototype.ensure = function(handler) {\n\t\t\tif(typeof handler !== 'function') {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\treturn this.then(function(x) {\n\t\t\t\treturn runSideEffect(handler, this, identity, x);\n\t\t\t}, function(e) {\n\t\t\t\treturn runSideEffect(handler, this, reject, e);\n\t\t\t});\n\t\t};\n\n\t\tfunction runSideEffect (handler, thisArg, propagate, value) {\n\t\t\tvar result = handler.call(thisArg);\n\t\t\treturn maybeThenable(result)\n\t\t\t\t? propagateValue(result, propagate, value)\n\t\t\t\t: propagate(value);\n\t\t}\n\n\t\tfunction propagateValue (result, propagate, x) {\n\t\t\treturn resolve(result).then(function () {\n\t\t\t\treturn propagate(x);\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Recover from a failure by returning a defaultValue.  If defaultValue\n\t\t * is a promise, it's fulfillment value will be used.  If defaultValue is\n\t\t * a promise that rejects, the returned promise will reject with the\n\t\t * same reason.\n\t\t * @param {*} defaultValue\n\t\t * @returns {Promise} new promise\n\t\t */\n\t\tPromise.prototype['else'] = Promise.prototype.orElse = function(defaultValue) {\n\t\t\treturn this.then(void 0, function() {\n\t\t\t\treturn defaultValue;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Shortcut for .then(function() { return value; })\n\t\t * @param  {*} value\n\t\t * @return {Promise} a promise that:\n\t\t *  - is fulfilled if value is not a promise, or\n\t\t *  - if value is a promise, will fulfill with its value, or reject\n\t\t *    with its reason.\n\t\t */\n\t\tPromise.prototype['yield'] = function(value) {\n\t\t\treturn this.then(function() {\n\t\t\t\treturn value;\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Runs a side effect when this promise fulfills, without changing the\n\t\t * fulfillment value.\n\t\t * @param {function} onFulfilledSideEffect\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.tap = function(onFulfilledSideEffect) {\n\t\t\treturn this.then(onFulfilledSideEffect)['yield'](this);\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n\tfunction rejectInvalidPredicate() {\n\t\tthrow new TypeError('catch predicate must be a function');\n\t}\n\n\tfunction evaluatePredicate(e, predicate) {\n\t\treturn isError(predicate) ? e instanceof predicate : predicate(e);\n\t}\n\n\tfunction isError(predicate) {\n\t\treturn predicate === Error\n\t\t\t|| (predicate != null && predicate.prototype instanceof Error);\n\t}\n\n\tfunction maybeThenable(x) {\n\t\treturn (typeof x === 'object' || typeof x === 'function') && x !== null;\n\t}\n\n\tfunction identity(x) {\n\t\treturn x;\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],26:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n/** @author Jeff Escalante */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function fold(Promise) {\n\n\t\tPromise.prototype.fold = function(f, z) {\n\t\t\tvar promise = this._beget();\n\n\t\t\tthis._handler.fold(function(z, x, to) {\n\t\t\t\tPromise._handler(z).fold(function(x, z, to) {\n\t\t\t\t\tto.resolve(f.call(this, z, x));\n\t\t\t\t}, x, this, to);\n\t\t\t}, z, promise._handler.receiver, promise._handler);\n\n\t\t\treturn promise;\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],27:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar inspect = require('../state').inspect;\n\n\treturn function inspection(Promise) {\n\n\t\tPromise.prototype.inspect = function() {\n\t\t\treturn inspect(Promise._handler(this));\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n},{\"../state\":36}],28:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function generate(Promise) {\n\n\t\tvar resolve = Promise.resolve;\n\n\t\tPromise.iterate = iterate;\n\t\tPromise.unfold = unfold;\n\n\t\treturn Promise;\n\n\t\t/**\n\t\t * @deprecated Use github.com/cujojs/most streams and most.iterate\n\t\t * Generate a (potentially infinite) stream of promised values:\n\t\t * x, f(x), f(f(x)), etc. until condition(x) returns true\n\t\t * @param {function} f function to generate a new x from the previous x\n\t\t * @param {function} condition function that, given the current x, returns\n\t\t *  truthy when the iterate should stop\n\t\t * @param {function} handler function to handle the value produced by f\n\t\t * @param {*|Promise} x starting value, may be a promise\n\t\t * @return {Promise} the result of the last call to f before\n\t\t *  condition returns true\n\t\t */\n\t\tfunction iterate(f, condition, handler, x) {\n\t\t\treturn unfold(function(x) {\n\t\t\t\treturn [x, f(x)];\n\t\t\t}, condition, handler, x);\n\t\t}\n\n\t\t/**\n\t\t * @deprecated Use github.com/cujojs/most streams and most.unfold\n\t\t * Generate a (potentially infinite) stream of promised values\n\t\t * by applying handler(generator(seed)) iteratively until\n\t\t * condition(seed) returns true.\n\t\t * @param {function} unspool function that generates a [value, newSeed]\n\t\t *  given a seed.\n\t\t * @param {function} condition function that, given the current seed, returns\n\t\t *  truthy when the unfold should stop\n\t\t * @param {function} handler function to handle the value produced by unspool\n\t\t * @param x {*|Promise} starting value, may be a promise\n\t\t * @return {Promise} the result of the last value produced by unspool before\n\t\t *  condition returns true\n\t\t */\n\t\tfunction unfold(unspool, condition, handler, x) {\n\t\t\treturn resolve(x).then(function(seed) {\n\t\t\t\treturn resolve(condition(seed)).then(function(done) {\n\t\t\t\t\treturn done ? seed : resolve(unspool(seed)).spread(next);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tfunction next(item, newSeed) {\n\t\t\t\treturn resolve(handler(item)).then(function() {\n\t\t\t\t\treturn unfold(unspool, condition, handler, newSeed);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],29:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function progress(Promise) {\n\n\t\t/**\n\t\t * @deprecated\n\t\t * Register a progress handler for this promise\n\t\t * @param {function} onProgress\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.progress = function(onProgress) {\n\t\t\treturn this.then(void 0, void 0, onProgress);\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],30:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar env = require('../env');\n\tvar TimeoutError = require('../TimeoutError');\n\n\tfunction setTimeout(f, ms, x, y) {\n\t\treturn env.setTimer(function() {\n\t\t\tf(x, y, ms);\n\t\t}, ms);\n\t}\n\n\treturn function timed(Promise) {\n\t\t/**\n\t\t * Return a new promise whose fulfillment value is revealed only\n\t\t * after ms milliseconds\n\t\t * @param {number} ms milliseconds\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.delay = function(ms) {\n\t\t\tvar p = this._beget();\n\t\t\tthis._handler.fold(handleDelay, ms, void 0, p._handler);\n\t\t\treturn p;\n\t\t};\n\n\t\tfunction handleDelay(ms, x, h) {\n\t\t\tsetTimeout(resolveDelay, ms, x, h);\n\t\t}\n\n\t\tfunction resolveDelay(x, h) {\n\t\t\th.resolve(x);\n\t\t}\n\n\t\t/**\n\t\t * Return a new promise that rejects after ms milliseconds unless\n\t\t * this promise fulfills earlier, in which case the returned promise\n\t\t * fulfills with the same value.\n\t\t * @param {number} ms milliseconds\n\t\t * @param {Error|*=} reason optional rejection reason to use, defaults\n\t\t *   to a TimeoutError if not provided\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype.timeout = function(ms, reason) {\n\t\t\tvar p = this._beget();\n\t\t\tvar h = p._handler;\n\n\t\t\tvar t = setTimeout(onTimeout, ms, reason, p._handler);\n\n\t\t\tthis._handler.visit(h,\n\t\t\t\tfunction onFulfill(x) {\n\t\t\t\t\tenv.clearTimer(t);\n\t\t\t\t\tthis.resolve(x); // this = h\n\t\t\t\t},\n\t\t\t\tfunction onReject(x) {\n\t\t\t\t\tenv.clearTimer(t);\n\t\t\t\t\tthis.reject(x); // this = h\n\t\t\t\t},\n\t\t\t\th.notify);\n\n\t\t\treturn p;\n\t\t};\n\n\t\tfunction onTimeout(reason, h, ms) {\n\t\t\tvar e = typeof reason === 'undefined'\n\t\t\t\t? new TimeoutError('timed out after ' + ms + 'ms')\n\t\t\t\t: reason;\n\t\t\th.reject(e);\n\t\t}\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n},{\"../TimeoutError\":22,\"../env\":33}],31:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function(require) {\n\n\tvar setTimer = require('../env').setTimer;\n\tvar format = require('../format');\n\n\treturn function unhandledRejection(Promise) {\n\n\t\tvar logError = noop;\n\t\tvar logInfo = noop;\n\t\tvar localConsole;\n\n\t\tif(typeof console !== 'undefined') {\n\t\t\t// Alias console to prevent things like uglify's drop_console option from\n\t\t\t// removing console.log/error. Unhandled rejections fall into the same\n\t\t\t// category as uncaught exceptions, and build tools shouldn't silence them.\n\t\t\tlocalConsole = console;\n\t\t\tlogError = typeof localConsole.error !== 'undefined'\n\t\t\t\t? function (e) { localConsole.error(e); }\n\t\t\t\t: function (e) { localConsole.log(e); };\n\n\t\t\tlogInfo = typeof localConsole.info !== 'undefined'\n\t\t\t\t? function (e) { localConsole.info(e); }\n\t\t\t\t: function (e) { localConsole.log(e); };\n\t\t}\n\n\t\tPromise.onPotentiallyUnhandledRejection = function(rejection) {\n\t\t\tenqueue(report, rejection);\n\t\t};\n\n\t\tPromise.onPotentiallyUnhandledRejectionHandled = function(rejection) {\n\t\t\tenqueue(unreport, rejection);\n\t\t};\n\n\t\tPromise.onFatalRejection = function(rejection) {\n\t\t\tenqueue(throwit, rejection.value);\n\t\t};\n\n\t\tvar tasks = [];\n\t\tvar reported = [];\n\t\tvar running = null;\n\n\t\tfunction report(r) {\n\t\t\tif(!r.handled) {\n\t\t\t\treported.push(r);\n\t\t\t\tlogError('Potentially unhandled rejection [' + r.id + '] ' + format.formatError(r.value));\n\t\t\t}\n\t\t}\n\n\t\tfunction unreport(r) {\n\t\t\tvar i = reported.indexOf(r);\n\t\t\tif(i >= 0) {\n\t\t\t\treported.splice(i, 1);\n\t\t\t\tlogInfo('Handled previous rejection [' + r.id + '] ' + format.formatObject(r.value));\n\t\t\t}\n\t\t}\n\n\t\tfunction enqueue(f, x) {\n\t\t\ttasks.push(f, x);\n\t\t\tif(running === null) {\n\t\t\t\trunning = setTimer(flush, 0);\n\t\t\t}\n\t\t}\n\n\t\tfunction flush() {\n\t\t\trunning = null;\n\t\t\twhile(tasks.length > 0) {\n\t\t\t\ttasks.shift()(tasks.shift());\n\t\t\t}\n\t\t}\n\n\t\treturn Promise;\n\t};\n\n\tfunction throwit(e) {\n\t\tthrow e;\n\t}\n\n\tfunction noop() {}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n},{\"../env\":33,\"../format\":34}],32:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function addWith(Promise) {\n\t\t/**\n\t\t * Returns a promise whose handlers will be called with `this` set to\n\t\t * the supplied receiver.  Subsequent promises derived from the\n\t\t * returned promise will also have their handlers called with receiver\n\t\t * as `this`. Calling `with` with undefined or no arguments will return\n\t\t * a promise whose handlers will again be called in the usual Promises/A+\n\t\t * way (no `this`) thus safely undoing any previous `with` in the\n\t\t * promise chain.\n\t\t *\n\t\t * WARNING: Promises returned from `with`/`withThis` are NOT Promises/A+\n\t\t * compliant, specifically violating 2.2.5 (http://promisesaplus.com/#point-41)\n\t\t *\n\t\t * @param {object} receiver `this` value for all handlers attached to\n\t\t *  the returned promise.\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype['with'] = Promise.prototype.withThis = function(receiver) {\n\t\t\tvar p = this._beget();\n\t\t\tvar child = p._handler;\n\t\t\tchild.receiver = receiver;\n\t\t\tthis._handler.chain(child, receiver);\n\t\t\treturn p;\n\t\t};\n\n\t\treturn Promise;\n\t};\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n\n},{}],33:[function(require,module,exports){\n(function (process){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/*global process,document,setTimeout,clearTimeout,MutationObserver,WebKitMutationObserver*/\n(function(define) { 'use strict';\ndefine(function(require) {\n\t/*jshint maxcomplexity:6*/\n\n\t// Sniff \"best\" async scheduling option\n\t// Prefer process.nextTick or MutationObserver, then check for\n\t// setTimeout, and finally vertx, since its the only env that doesn't\n\t// have setTimeout\n\n\tvar MutationObs;\n\tvar capturedSetTimeout = typeof setTimeout !== 'undefined' && setTimeout;\n\n\t// Default env\n\tvar setTimer = function(f, ms) { return setTimeout(f, ms); };\n\tvar clearTimer = function(t) { return clearTimeout(t); };\n\tvar asap = function (f) { return capturedSetTimeout(f, 0); };\n\n\t// Detect specific env\n\tif (isNode()) { // Node\n\t\tasap = function (f) { return process.nextTick(f); };\n\n\t} else if (MutationObs = hasMutationObserver()) { // Modern browser\n\t\tasap = initMutationObserver(MutationObs);\n\n\t} else if (!capturedSetTimeout) { // vert.x\n\t\tvar vertxRequire = require;\n\t\tvar vertx = vertxRequire('vertx');\n\t\tsetTimer = function (f, ms) { return vertx.setTimer(ms, f); };\n\t\tclearTimer = vertx.cancelTimer;\n\t\tasap = vertx.runOnLoop || vertx.runOnContext;\n\t}\n\n\treturn {\n\t\tsetTimer: setTimer,\n\t\tclearTimer: clearTimer,\n\t\tasap: asap\n\t};\n\n\tfunction isNode () {\n\t\treturn typeof process !== 'undefined' && process !== null &&\n\t\t\ttypeof process.nextTick === 'function';\n\t}\n\n\tfunction hasMutationObserver () {\n\t\treturn (typeof MutationObserver === 'function' && MutationObserver) ||\n\t\t\t(typeof WebKitMutationObserver === 'function' && WebKitMutationObserver);\n\t}\n\n\tfunction initMutationObserver(MutationObserver) {\n\t\tvar scheduled;\n\t\tvar node = document.createTextNode('');\n\t\tvar o = new MutationObserver(run);\n\t\to.observe(node, { characterData: true });\n\n\t\tfunction run() {\n\t\t\tvar f = scheduled;\n\t\t\tscheduled = void 0;\n\t\t\tf();\n\t\t}\n\n\t\tvar i = 0;\n\t\treturn function (f) {\n\t\t\tscheduled = f;\n\t\t\tnode.data = (i ^= 1);\n\t\t};\n\t}\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));\n\n}).call(this,require('_process'))\n\n},{\"_process\":10}],34:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn {\n\t\tformatError: formatError,\n\t\tformatObject: formatObject,\n\t\ttryStringify: tryStringify\n\t};\n\n\t/**\n\t * Format an error into a string.  If e is an Error and has a stack property,\n\t * it's returned.  Otherwise, e is formatted using formatObject, with a\n\t * warning added about e not being a proper Error.\n\t * @param {*} e\n\t * @returns {String} formatted string, suitable for output to developers\n\t */\n\tfunction formatError(e) {\n\t\tvar s = typeof e === 'object' && e !== null && e.stack ? e.stack : formatObject(e);\n\t\treturn e instanceof Error ? s : s + ' (WARNING: non-Error used)';\n\t}\n\n\t/**\n\t * Format an object, detecting \"plain\" objects and running them through\n\t * JSON.stringify if possible.\n\t * @param {Object} o\n\t * @returns {string}\n\t */\n\tfunction formatObject(o) {\n\t\tvar s = String(o);\n\t\tif(s === '[object Object]' && typeof JSON !== 'undefined') {\n\t\t\ts = tryStringify(o, s);\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t * Try to return the result of JSON.stringify(x).  If that fails, return\n\t * defaultValue\n\t * @param {*} x\n\t * @param {*} defaultValue\n\t * @returns {String|*} JSON.stringify(x) or defaultValue\n\t */\n\tfunction tryStringify(x, defaultValue) {\n\t\ttry {\n\t\t\treturn JSON.stringify(x);\n\t\t} catch(e) {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],35:[function(require,module,exports){\n(function (process){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn function makePromise(environment) {\n\n\t\tvar tasks = environment.scheduler;\n\t\tvar emitRejection = initEmitRejection();\n\n\t\tvar objectCreate = Object.create ||\n\t\t\tfunction(proto) {\n\t\t\t\tfunction Child() {}\n\t\t\t\tChild.prototype = proto;\n\t\t\t\treturn new Child();\n\t\t\t};\n\n\t\t/**\n\t\t * Create a promise whose fate is determined by resolver\n\t\t * @constructor\n\t\t * @returns {Promise} promise\n\t\t * @name Promise\n\t\t */\n\t\tfunction Promise(resolver, handler) {\n\t\t\tthis._handler = resolver === Handler ? handler : init(resolver);\n\t\t}\n\n\t\t/**\n\t\t * Run the supplied resolver\n\t\t * @param resolver\n\t\t * @returns {Pending}\n\t\t */\n\t\tfunction init(resolver) {\n\t\t\tvar handler = new Pending();\n\n\t\t\ttry {\n\t\t\t\tresolver(promiseResolve, promiseReject, promiseNotify);\n\t\t\t} catch (e) {\n\t\t\t\tpromiseReject(e);\n\t\t\t}\n\n\t\t\treturn handler;\n\n\t\t\t/**\n\t\t\t * Transition from pre-resolution state to post-resolution state, notifying\n\t\t\t * all listeners of the ultimate fulfillment or rejection\n\t\t\t * @param {*} x resolution value\n\t\t\t */\n\t\t\tfunction promiseResolve (x) {\n\t\t\t\thandler.resolve(x);\n\t\t\t}\n\t\t\t/**\n\t\t\t * Reject this promise with reason, which will be used verbatim\n\t\t\t * @param {Error|*} reason rejection reason, strongly suggested\n\t\t\t *   to be an Error type\n\t\t\t */\n\t\t\tfunction promiseReject (reason) {\n\t\t\t\thandler.reject(reason);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @deprecated\n\t\t\t * Issue a progress event, notifying all progress listeners\n\t\t\t * @param {*} x progress event payload to pass to all listeners\n\t\t\t */\n\t\t\tfunction promiseNotify (x) {\n\t\t\t\thandler.notify(x);\n\t\t\t}\n\t\t}\n\n\t\t// Creation\n\n\t\tPromise.resolve = resolve;\n\t\tPromise.reject = reject;\n\t\tPromise.never = never;\n\n\t\tPromise._defer = defer;\n\t\tPromise._handler = getHandler;\n\n\t\t/**\n\t\t * Returns a trusted promise. If x is already a trusted promise, it is\n\t\t * returned, otherwise returns a new trusted Promise which follows x.\n\t\t * @param  {*} x\n\t\t * @return {Promise} promise\n\t\t */\n\t\tfunction resolve(x) {\n\t\t\treturn isPromise(x) ? x\n\t\t\t\t: new Promise(Handler, new Async(getHandler(x)));\n\t\t}\n\n\t\t/**\n\t\t * Return a reject promise with x as its reason (x is used verbatim)\n\t\t * @param {*} x\n\t\t * @returns {Promise} rejected promise\n\t\t */\n\t\tfunction reject(x) {\n\t\t\treturn new Promise(Handler, new Async(new Rejected(x)));\n\t\t}\n\n\t\t/**\n\t\t * Return a promise that remains pending forever\n\t\t * @returns {Promise} forever-pending promise.\n\t\t */\n\t\tfunction never() {\n\t\t\treturn foreverPendingPromise; // Should be frozen\n\t\t}\n\n\t\t/**\n\t\t * Creates an internal {promise, resolver} pair\n\t\t * @private\n\t\t * @returns {Promise}\n\t\t */\n\t\tfunction defer() {\n\t\t\treturn new Promise(Handler, new Pending());\n\t\t}\n\n\t\t// Transformation and flow control\n\n\t\t/**\n\t\t * Transform this promise's fulfillment value, returning a new Promise\n\t\t * for the transformed result.  If the promise cannot be fulfilled, onRejected\n\t\t * is called with the reason.  onProgress *may* be called with updates toward\n\t\t * this promise's fulfillment.\n\t\t * @param {function=} onFulfilled fulfillment handler\n\t\t * @param {function=} onRejected rejection handler\n\t\t * @param {function=} onProgress @deprecated progress handler\n\t\t * @return {Promise} new promise\n\t\t */\n\t\tPromise.prototype.then = function(onFulfilled, onRejected, onProgress) {\n\t\t\tvar parent = this._handler;\n\t\t\tvar state = parent.join().state();\n\n\t\t\tif ((typeof onFulfilled !== 'function' && state > 0) ||\n\t\t\t\t(typeof onRejected !== 'function' && state < 0)) {\n\t\t\t\t// Short circuit: value will not change, simply share handler\n\t\t\t\treturn new this.constructor(Handler, parent);\n\t\t\t}\n\n\t\t\tvar p = this._beget();\n\t\t\tvar child = p._handler;\n\n\t\t\tparent.chain(child, parent.receiver, onFulfilled, onRejected, onProgress);\n\n\t\t\treturn p;\n\t\t};\n\n\t\t/**\n\t\t * If this promise cannot be fulfilled due to an error, call onRejected to\n\t\t * handle the error. Shortcut for .then(undefined, onRejected)\n\t\t * @param {function?} onRejected\n\t\t * @return {Promise}\n\t\t */\n\t\tPromise.prototype['catch'] = function(onRejected) {\n\t\t\treturn this.then(void 0, onRejected);\n\t\t};\n\n\t\t/**\n\t\t * Creates a new, pending promise of the same type as this promise\n\t\t * @private\n\t\t * @returns {Promise}\n\t\t */\n\t\tPromise.prototype._beget = function() {\n\t\t\treturn begetFrom(this._handler, this.constructor);\n\t\t};\n\n\t\tfunction begetFrom(parent, Promise) {\n\t\t\tvar child = new Pending(parent.receiver, parent.join().context);\n\t\t\treturn new Promise(Handler, child);\n\t\t}\n\n\t\t// Array combinators\n\n\t\tPromise.all = all;\n\t\tPromise.race = race;\n\t\tPromise._traverse = traverse;\n\n\t\t/**\n\t\t * Return a promise that will fulfill when all promises in the\n\t\t * input array have fulfilled, or will reject when one of the\n\t\t * promises rejects.\n\t\t * @param {array} promises array of promises\n\t\t * @returns {Promise} promise for array of fulfillment values\n\t\t */\n\t\tfunction all(promises) {\n\t\t\treturn traverseWith(snd, null, promises);\n\t\t}\n\n\t\t/**\n\t\t * Array<Promise<X>> -> Promise<Array<f(X)>>\n\t\t * @private\n\t\t * @param {function} f function to apply to each promise's value\n\t\t * @param {Array} promises array of promises\n\t\t * @returns {Promise} promise for transformed values\n\t\t */\n\t\tfunction traverse(f, promises) {\n\t\t\treturn traverseWith(tryCatch2, f, promises);\n\t\t}\n\n\t\tfunction traverseWith(tryMap, f, promises) {\n\t\t\tvar handler = typeof f === 'function' ? mapAt : settleAt;\n\n\t\t\tvar resolver = new Pending();\n\t\t\tvar pending = promises.length >>> 0;\n\t\t\tvar results = new Array(pending);\n\n\t\t\tfor (var i = 0, x; i < promises.length && !resolver.resolved; ++i) {\n\t\t\t\tx = promises[i];\n\n\t\t\t\tif (x === void 0 && !(i in promises)) {\n\t\t\t\t\t--pending;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttraverseAt(promises, handler, i, x, resolver);\n\t\t\t}\n\n\t\t\tif(pending === 0) {\n\t\t\t\tresolver.become(new Fulfilled(results));\n\t\t\t}\n\n\t\t\treturn new Promise(Handler, resolver);\n\n\t\t\tfunction mapAt(i, x, resolver) {\n\t\t\t\tif(!resolver.resolved) {\n\t\t\t\t\ttraverseAt(promises, settleAt, i, tryMap(f, x, i), resolver);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction settleAt(i, x, resolver) {\n\t\t\t\tresults[i] = x;\n\t\t\t\tif(--pending === 0) {\n\t\t\t\t\tresolver.become(new Fulfilled(results));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction traverseAt(promises, handler, i, x, resolver) {\n\t\t\tif (maybeThenable(x)) {\n\t\t\t\tvar h = getHandlerMaybeThenable(x);\n\t\t\t\tvar s = h.state();\n\n\t\t\t\tif (s === 0) {\n\t\t\t\t\th.fold(handler, i, void 0, resolver);\n\t\t\t\t} else if (s > 0) {\n\t\t\t\t\thandler(i, h.value, resolver);\n\t\t\t\t} else {\n\t\t\t\t\tresolver.become(h);\n\t\t\t\t\tvisitRemaining(promises, i+1, h);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandler(i, x, resolver);\n\t\t\t}\n\t\t}\n\n\t\tPromise._visitRemaining = visitRemaining;\n\t\tfunction visitRemaining(promises, start, handler) {\n\t\t\tfor(var i=start; i<promises.length; ++i) {\n\t\t\t\tmarkAsHandled(getHandler(promises[i]), handler);\n\t\t\t}\n\t\t}\n\n\t\tfunction markAsHandled(h, handler) {\n\t\t\tif(h === handler) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar s = h.state();\n\t\t\tif(s === 0) {\n\t\t\t\th.visit(h, void 0, h._unreport);\n\t\t\t} else if(s < 0) {\n\t\t\t\th._unreport();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Fulfill-reject competitive race. Return a promise that will settle\n\t\t * to the same state as the earliest input promise to settle.\n\t\t *\n\t\t * WARNING: The ES6 Promise spec requires that race()ing an empty array\n\t\t * must return a promise that is pending forever.  This implementation\n\t\t * returns a singleton forever-pending promise, the same singleton that is\n\t\t * returned by Promise.never(), thus can be checked with ===\n\t\t *\n\t\t * @param {array} promises array of promises to race\n\t\t * @returns {Promise} if input is non-empty, a promise that will settle\n\t\t * to the same outcome as the earliest input promise to settle. if empty\n\t\t * is empty, returns a promise that will never settle.\n\t\t */\n\t\tfunction race(promises) {\n\t\t\tif(typeof promises !== 'object' || promises === null) {\n\t\t\t\treturn reject(new TypeError('non-iterable passed to race()'));\n\t\t\t}\n\n\t\t\t// Sigh, race([]) is untestable unless we return *something*\n\t\t\t// that is recognizable without calling .then() on it.\n\t\t\treturn promises.length === 0 ? never()\n\t\t\t\t : promises.length === 1 ? resolve(promises[0])\n\t\t\t\t : runRace(promises);\n\t\t}\n\n\t\tfunction runRace(promises) {\n\t\t\tvar resolver = new Pending();\n\t\t\tvar i, x, h;\n\t\t\tfor(i=0; i<promises.length; ++i) {\n\t\t\t\tx = promises[i];\n\t\t\t\tif (x === void 0 && !(i in promises)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\th = getHandler(x);\n\t\t\t\tif(h.state() !== 0) {\n\t\t\t\t\tresolver.become(h);\n\t\t\t\t\tvisitRemaining(promises, i+1, h);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\th.visit(resolver, resolver.resolve, resolver.reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new Promise(Handler, resolver);\n\t\t}\n\n\t\t// Promise internals\n\t\t// Below this, everything is @private\n\n\t\t/**\n\t\t * Get an appropriate handler for x, without checking for cycles\n\t\t * @param {*} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandler(x) {\n\t\t\tif(isPromise(x)) {\n\t\t\t\treturn x._handler.join();\n\t\t\t}\n\t\t\treturn maybeThenable(x) ? getHandlerUntrusted(x) : new Fulfilled(x);\n\t\t}\n\n\t\t/**\n\t\t * Get a handler for thenable x.\n\t\t * NOTE: You must only call this if maybeThenable(x) == true\n\t\t * @param {object|function|Promise} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandlerMaybeThenable(x) {\n\t\t\treturn isPromise(x) ? x._handler.join() : getHandlerUntrusted(x);\n\t\t}\n\n\t\t/**\n\t\t * Get a handler for potentially untrusted thenable x\n\t\t * @param {*} x\n\t\t * @returns {object} handler\n\t\t */\n\t\tfunction getHandlerUntrusted(x) {\n\t\t\ttry {\n\t\t\t\tvar untrustedThen = x.then;\n\t\t\t\treturn typeof untrustedThen === 'function'\n\t\t\t\t\t? new Thenable(untrustedThen, x)\n\t\t\t\t\t: new Fulfilled(x);\n\t\t\t} catch(e) {\n\t\t\t\treturn new Rejected(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handler for a promise that is pending forever\n\t\t * @constructor\n\t\t */\n\t\tfunction Handler() {}\n\n\t\tHandler.prototype.when\n\t\t\t= Handler.prototype.become\n\t\t\t= Handler.prototype.notify // deprecated\n\t\t\t= Handler.prototype.fail\n\t\t\t= Handler.prototype._unreport\n\t\t\t= Handler.prototype._report\n\t\t\t= noop;\n\n\t\tHandler.prototype._state = 0;\n\n\t\tHandler.prototype.state = function() {\n\t\t\treturn this._state;\n\t\t};\n\n\t\t/**\n\t\t * Recursively collapse handler chain to find the handler\n\t\t * nearest to the fully resolved value.\n\t\t * @returns {object} handler nearest the fully resolved value\n\t\t */\n\t\tHandler.prototype.join = function() {\n\t\t\tvar h = this;\n\t\t\twhile(h.handler !== void 0) {\n\t\t\t\th = h.handler;\n\t\t\t}\n\t\t\treturn h;\n\t\t};\n\n\t\tHandler.prototype.chain = function(to, receiver, fulfilled, rejected, progress) {\n\t\t\tthis.when({\n\t\t\t\tresolver: to,\n\t\t\t\treceiver: receiver,\n\t\t\t\tfulfilled: fulfilled,\n\t\t\t\trejected: rejected,\n\t\t\t\tprogress: progress\n\t\t\t});\n\t\t};\n\n\t\tHandler.prototype.visit = function(receiver, fulfilled, rejected, progress) {\n\t\t\tthis.chain(failIfRejected, receiver, fulfilled, rejected, progress);\n\t\t};\n\n\t\tHandler.prototype.fold = function(f, z, c, to) {\n\t\t\tthis.when(new Fold(f, z, c, to));\n\t\t};\n\n\t\t/**\n\t\t * Handler that invokes fail() on any handler it becomes\n\t\t * @constructor\n\t\t */\n\t\tfunction FailIfRejected() {}\n\n\t\tinherit(Handler, FailIfRejected);\n\n\t\tFailIfRejected.prototype.become = function(h) {\n\t\t\th.fail();\n\t\t};\n\n\t\tvar failIfRejected = new FailIfRejected();\n\n\t\t/**\n\t\t * Handler that manages a queue of consumers waiting on a pending promise\n\t\t * @constructor\n\t\t */\n\t\tfunction Pending(receiver, inheritedContext) {\n\t\t\tPromise.createContext(this, inheritedContext);\n\n\t\t\tthis.consumers = void 0;\n\t\t\tthis.receiver = receiver;\n\t\t\tthis.handler = void 0;\n\t\t\tthis.resolved = false;\n\t\t}\n\n\t\tinherit(Handler, Pending);\n\n\t\tPending.prototype._state = 0;\n\n\t\tPending.prototype.resolve = function(x) {\n\t\t\tthis.become(getHandler(x));\n\t\t};\n\n\t\tPending.prototype.reject = function(x) {\n\t\t\tif(this.resolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.become(new Rejected(x));\n\t\t};\n\n\t\tPending.prototype.join = function() {\n\t\t\tif (!this.resolved) {\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tvar h = this;\n\n\t\t\twhile (h.handler !== void 0) {\n\t\t\t\th = h.handler;\n\t\t\t\tif (h === this) {\n\t\t\t\t\treturn this.handler = cycle();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn h;\n\t\t};\n\n\t\tPending.prototype.run = function() {\n\t\t\tvar q = this.consumers;\n\t\t\tvar handler = this.handler;\n\t\t\tthis.handler = this.handler.join();\n\t\t\tthis.consumers = void 0;\n\n\t\t\tfor (var i = 0; i < q.length; ++i) {\n\t\t\t\thandler.when(q[i]);\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.become = function(handler) {\n\t\t\tif(this.resolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.resolved = true;\n\t\t\tthis.handler = handler;\n\t\t\tif(this.consumers !== void 0) {\n\t\t\t\ttasks.enqueue(this);\n\t\t\t}\n\n\t\t\tif(this.context !== void 0) {\n\t\t\t\thandler._report(this.context);\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.when = function(continuation) {\n\t\t\tif(this.resolved) {\n\t\t\t\ttasks.enqueue(new ContinuationTask(continuation, this.handler));\n\t\t\t} else {\n\t\t\t\tif(this.consumers === void 0) {\n\t\t\t\t\tthis.consumers = [continuation];\n\t\t\t\t} else {\n\t\t\t\t\tthis.consumers.push(continuation);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @deprecated\n\t\t */\n\t\tPending.prototype.notify = function(x) {\n\t\t\tif(!this.resolved) {\n\t\t\t\ttasks.enqueue(new ProgressTask(x, this));\n\t\t\t}\n\t\t};\n\n\t\tPending.prototype.fail = function(context) {\n\t\t\tvar c = typeof context === 'undefined' ? this.context : context;\n\t\t\tthis.resolved && this.handler.join().fail(c);\n\t\t};\n\n\t\tPending.prototype._report = function(context) {\n\t\t\tthis.resolved && this.handler.join()._report(context);\n\t\t};\n\n\t\tPending.prototype._unreport = function() {\n\t\t\tthis.resolved && this.handler.join()._unreport();\n\t\t};\n\n\t\t/**\n\t\t * Wrap another handler and force it into a future stack\n\t\t * @param {object} handler\n\t\t * @constructor\n\t\t */\n\t\tfunction Async(handler) {\n\t\t\tthis.handler = handler;\n\t\t}\n\n\t\tinherit(Handler, Async);\n\n\t\tAsync.prototype.when = function(continuation) {\n\t\t\ttasks.enqueue(new ContinuationTask(continuation, this));\n\t\t};\n\n\t\tAsync.prototype._report = function(context) {\n\t\t\tthis.join()._report(context);\n\t\t};\n\n\t\tAsync.prototype._unreport = function() {\n\t\t\tthis.join()._unreport();\n\t\t};\n\n\t\t/**\n\t\t * Handler that wraps an untrusted thenable and assimilates it in a future stack\n\t\t * @param {function} then\n\t\t * @param {{then: function}} thenable\n\t\t * @constructor\n\t\t */\n\t\tfunction Thenable(then, thenable) {\n\t\t\tPending.call(this);\n\t\t\ttasks.enqueue(new AssimilateTask(then, thenable, this));\n\t\t}\n\n\t\tinherit(Pending, Thenable);\n\n\t\t/**\n\t\t * Handler for a fulfilled promise\n\t\t * @param {*} x fulfillment value\n\t\t * @constructor\n\t\t */\n\t\tfunction Fulfilled(x) {\n\t\t\tPromise.createContext(this);\n\t\t\tthis.value = x;\n\t\t}\n\n\t\tinherit(Handler, Fulfilled);\n\n\t\tFulfilled.prototype._state = 1;\n\n\t\tFulfilled.prototype.fold = function(f, z, c, to) {\n\t\t\trunContinuation3(f, z, this, c, to);\n\t\t};\n\n\t\tFulfilled.prototype.when = function(cont) {\n\t\t\trunContinuation1(cont.fulfilled, this, cont.receiver, cont.resolver);\n\t\t};\n\n\t\tvar errorId = 0;\n\n\t\t/**\n\t\t * Handler for a rejected promise\n\t\t * @param {*} x rejection reason\n\t\t * @constructor\n\t\t */\n\t\tfunction Rejected(x) {\n\t\t\tPromise.createContext(this);\n\n\t\t\tthis.id = ++errorId;\n\t\t\tthis.value = x;\n\t\t\tthis.handled = false;\n\t\t\tthis.reported = false;\n\n\t\t\tthis._report();\n\t\t}\n\n\t\tinherit(Handler, Rejected);\n\n\t\tRejected.prototype._state = -1;\n\n\t\tRejected.prototype.fold = function(f, z, c, to) {\n\t\t\tto.become(this);\n\t\t};\n\n\t\tRejected.prototype.when = function(cont) {\n\t\t\tif(typeof cont.rejected === 'function') {\n\t\t\t\tthis._unreport();\n\t\t\t}\n\t\t\trunContinuation1(cont.rejected, this, cont.receiver, cont.resolver);\n\t\t};\n\n\t\tRejected.prototype._report = function(context) {\n\t\t\ttasks.afterQueue(new ReportTask(this, context));\n\t\t};\n\n\t\tRejected.prototype._unreport = function() {\n\t\t\tif(this.handled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.handled = true;\n\t\t\ttasks.afterQueue(new UnreportTask(this));\n\t\t};\n\n\t\tRejected.prototype.fail = function(context) {\n\t\t\tthis.reported = true;\n\t\t\temitRejection('unhandledRejection', this);\n\t\t\tPromise.onFatalRejection(this, context === void 0 ? this.context : context);\n\t\t};\n\n\t\tfunction ReportTask(rejection, context) {\n\t\t\tthis.rejection = rejection;\n\t\t\tthis.context = context;\n\t\t}\n\n\t\tReportTask.prototype.run = function() {\n\t\t\tif(!this.rejection.handled && !this.rejection.reported) {\n\t\t\t\tthis.rejection.reported = true;\n\t\t\t\temitRejection('unhandledRejection', this.rejection) ||\n\t\t\t\t\tPromise.onPotentiallyUnhandledRejection(this.rejection, this.context);\n\t\t\t}\n\t\t};\n\n\t\tfunction UnreportTask(rejection) {\n\t\t\tthis.rejection = rejection;\n\t\t}\n\n\t\tUnreportTask.prototype.run = function() {\n\t\t\tif(this.rejection.reported) {\n\t\t\t\temitRejection('rejectionHandled', this.rejection) ||\n\t\t\t\t\tPromise.onPotentiallyUnhandledRejectionHandled(this.rejection);\n\t\t\t}\n\t\t};\n\n\t\t// Unhandled rejection hooks\n\t\t// By default, everything is a noop\n\n\t\tPromise.createContext\n\t\t\t= Promise.enterContext\n\t\t\t= Promise.exitContext\n\t\t\t= Promise.onPotentiallyUnhandledRejection\n\t\t\t= Promise.onPotentiallyUnhandledRejectionHandled\n\t\t\t= Promise.onFatalRejection\n\t\t\t= noop;\n\n\t\t// Errors and singletons\n\n\t\tvar foreverPendingHandler = new Handler();\n\t\tvar foreverPendingPromise = new Promise(Handler, foreverPendingHandler);\n\n\t\tfunction cycle() {\n\t\t\treturn new Rejected(new TypeError('Promise cycle'));\n\t\t}\n\n\t\t// Task runners\n\n\t\t/**\n\t\t * Run a single consumer\n\t\t * @constructor\n\t\t */\n\t\tfunction ContinuationTask(continuation, handler) {\n\t\t\tthis.continuation = continuation;\n\t\t\tthis.handler = handler;\n\t\t}\n\n\t\tContinuationTask.prototype.run = function() {\n\t\t\tthis.handler.join().when(this.continuation);\n\t\t};\n\n\t\t/**\n\t\t * Run a queue of progress handlers\n\t\t * @constructor\n\t\t */\n\t\tfunction ProgressTask(value, handler) {\n\t\t\tthis.handler = handler;\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tProgressTask.prototype.run = function() {\n\t\t\tvar q = this.handler.consumers;\n\t\t\tif(q === void 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var c, i = 0; i < q.length; ++i) {\n\t\t\t\tc = q[i];\n\t\t\t\trunNotify(c.progress, this.value, this.handler, c.receiver, c.resolver);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Assimilate a thenable, sending it's value to resolver\n\t\t * @param {function} then\n\t\t * @param {object|function} thenable\n\t\t * @param {object} resolver\n\t\t * @constructor\n\t\t */\n\t\tfunction AssimilateTask(then, thenable, resolver) {\n\t\t\tthis._then = then;\n\t\t\tthis.thenable = thenable;\n\t\t\tthis.resolver = resolver;\n\t\t}\n\n\t\tAssimilateTask.prototype.run = function() {\n\t\t\tvar h = this.resolver;\n\t\t\ttryAssimilate(this._then, this.thenable, _resolve, _reject, _notify);\n\n\t\t\tfunction _resolve(x) { h.resolve(x); }\n\t\t\tfunction _reject(x)  { h.reject(x); }\n\t\t\tfunction _notify(x)  { h.notify(x); }\n\t\t};\n\n\t\tfunction tryAssimilate(then, thenable, resolve, reject, notify) {\n\t\t\ttry {\n\t\t\t\tthen.call(thenable, resolve, reject, notify);\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Fold a handler value with z\n\t\t * @constructor\n\t\t */\n\t\tfunction Fold(f, z, c, to) {\n\t\t\tthis.f = f; this.z = z; this.c = c; this.to = to;\n\t\t\tthis.resolver = failIfRejected;\n\t\t\tthis.receiver = this;\n\t\t}\n\n\t\tFold.prototype.fulfilled = function(x) {\n\t\t\tthis.f.call(this.c, this.z, x, this.to);\n\t\t};\n\n\t\tFold.prototype.rejected = function(x) {\n\t\t\tthis.to.reject(x);\n\t\t};\n\n\t\tFold.prototype.progress = function(x) {\n\t\t\tthis.to.notify(x);\n\t\t};\n\n\t\t// Other helpers\n\n\t\t/**\n\t\t * @param {*} x\n\t\t * @returns {boolean} true iff x is a trusted Promise\n\t\t */\n\t\tfunction isPromise(x) {\n\t\t\treturn x instanceof Promise;\n\t\t}\n\n\t\t/**\n\t\t * Test just enough to rule out primitives, in order to take faster\n\t\t * paths in some code\n\t\t * @param {*} x\n\t\t * @returns {boolean} false iff x is guaranteed *not* to be a thenable\n\t\t */\n\t\tfunction maybeThenable(x) {\n\t\t\treturn (typeof x === 'object' || typeof x === 'function') && x !== null;\n\t\t}\n\n\t\tfunction runContinuation1(f, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.become(h);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReject(f, h.value, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\tfunction runContinuation3(f, x, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.become(h);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReject3(f, x, h.value, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\t/**\n\t\t * @deprecated\n\t\t */\n\t\tfunction runNotify(f, x, h, receiver, next) {\n\t\t\tif(typeof f !== 'function') {\n\t\t\t\treturn next.notify(x);\n\t\t\t}\n\n\t\t\tPromise.enterContext(h);\n\t\t\ttryCatchReturn(f, x, receiver, next);\n\t\t\tPromise.exitContext();\n\t\t}\n\n\t\tfunction tryCatch2(f, a, b) {\n\t\t\ttry {\n\t\t\t\treturn f(a, b);\n\t\t\t} catch(e) {\n\t\t\t\treturn reject(e);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Return f.call(thisArg, x), or if it throws return a rejected promise for\n\t\t * the thrown exception\n\t\t */\n\t\tfunction tryCatchReject(f, x, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tnext.become(getHandler(f.call(thisArg, x)));\n\t\t\t} catch(e) {\n\t\t\t\tnext.become(new Rejected(e));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Same as above, but includes the extra argument parameter.\n\t\t */\n\t\tfunction tryCatchReject3(f, x, y, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tf.call(thisArg, x, y, next);\n\t\t\t} catch(e) {\n\t\t\t\tnext.become(new Rejected(e));\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @deprecated\n\t\t * Return f.call(thisArg, x), or if it throws, *return* the exception\n\t\t */\n\t\tfunction tryCatchReturn(f, x, thisArg, next) {\n\t\t\ttry {\n\t\t\t\tnext.notify(f.call(thisArg, x));\n\t\t\t} catch(e) {\n\t\t\t\tnext.notify(e);\n\t\t\t}\n\t\t}\n\n\t\tfunction inherit(Parent, Child) {\n\t\t\tChild.prototype = objectCreate(Parent.prototype);\n\t\t\tChild.prototype.constructor = Child;\n\t\t}\n\n\t\tfunction snd(x, y) {\n\t\t\treturn y;\n\t\t}\n\n\t\tfunction noop() {}\n\n\t\tfunction initEmitRejection() {\n\t\t\t/*global process, self, CustomEvent*/\n\t\t\tif(typeof process !== 'undefined' && process !== null\n\t\t\t\t&& typeof process.emit === 'function') {\n\t\t\t\t// Returning falsy here means to call the default\n\t\t\t\t// onPotentiallyUnhandledRejection API.  This is safe even in\n\t\t\t\t// browserify since process.emit always returns falsy in browserify:\n\t\t\t\t// https://github.com/defunctzombie/node-process/blob/master/browser.js#L40-L46\n\t\t\t\treturn function(type, rejection) {\n\t\t\t\t\treturn type === 'unhandledRejection'\n\t\t\t\t\t\t? process.emit(type, rejection.value, rejection)\n\t\t\t\t\t\t: process.emit(type, rejection);\n\t\t\t\t};\n\t\t\t} else if(typeof self !== 'undefined' && typeof CustomEvent === 'function') {\n\t\t\t\treturn (function(noop, self, CustomEvent) {\n\t\t\t\t\tvar hasCustomEvent = false;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar ev = new CustomEvent('unhandledRejection');\n\t\t\t\t\t\thasCustomEvent = ev instanceof CustomEvent;\n\t\t\t\t\t} catch (e) {}\n\n\t\t\t\t\treturn !hasCustomEvent ? noop : function(type, rejection) {\n\t\t\t\t\t\tvar ev = new CustomEvent(type, {\n\t\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\t\treason: rejection.value,\n\t\t\t\t\t\t\t\tkey: rejection\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tbubbles: false,\n\t\t\t\t\t\t\tcancelable: true\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn !self.dispatchEvent(ev);\n\t\t\t\t\t};\n\t\t\t\t}(noop, self, CustomEvent));\n\t\t\t}\n\n\t\t\treturn noop;\n\t\t}\n\n\t\treturn Promise;\n\t};\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n}).call(this,require('_process'))\n\n},{\"_process\":10}],36:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n(function(define) { 'use strict';\ndefine(function() {\n\n\treturn {\n\t\tpending: toPendingState,\n\t\tfulfilled: toFulfilledState,\n\t\trejected: toRejectedState,\n\t\tinspect: inspect\n\t};\n\n\tfunction toPendingState() {\n\t\treturn { state: 'pending' };\n\t}\n\n\tfunction toRejectedState(e) {\n\t\treturn { state: 'rejected', reason: e };\n\t}\n\n\tfunction toFulfilledState(x) {\n\t\treturn { state: 'fulfilled', value: x };\n\t}\n\n\tfunction inspect(handler) {\n\t\tvar state = handler.state();\n\t\treturn state === 0 ? toPendingState()\n\t\t\t : state > 0   ? toFulfilledState(handler.value)\n\t\t\t               : toRejectedState(handler.value);\n\t}\n\n});\n}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));\n\n},{}],37:[function(require,module,exports){\n/** @license MIT License (c) copyright 2010-2014 original author or authors */\n\n/**\n * Promises/A+ and when() implementation\n * when is part of the cujoJS family of libraries (http://cujojs.com/)\n * @author Brian Cavalier\n * @author John Hann\n * @version 3.7.2\n */\n(function(define) { 'use strict';\ndefine(function (require) {\n\n\tvar timed = require('./lib/decorators/timed');\n\tvar array = require('./lib/decorators/array');\n\tvar flow = require('./lib/decorators/flow');\n\tvar fold = require('./lib/decorators/fold');\n\tvar inspect = require('./lib/decorators/inspect');\n\tvar generate = require('./lib/decorators/iterate');\n\tvar progress = require('./lib/decorators/progress');\n\tvar withThis = require('./lib/decorators/with');\n\tvar unhandledRejection = require('./lib/decorators/unhandledRejection');\n\tvar TimeoutError = require('./lib/TimeoutError');\n\n\tvar Promise = [array, flow, fold, generate, progress,\n\t\tinspect, withThis, timed, unhandledRejection]\n\t\t.reduce(function(Promise, feature) {\n\t\t\treturn feature(Promise);\n\t\t}, require('./lib/Promise'));\n\n\tvar apply = require('./lib/apply')(Promise);\n\n\t// Public API\n\n\twhen.promise     = promise;              // Create a pending promise\n\twhen.resolve     = Promise.resolve;      // Create a resolved promise\n\twhen.reject      = Promise.reject;       // Create a rejected promise\n\n\twhen.lift        = lift;                 // lift a function to return promises\n\twhen['try']      = attempt;              // call a function and return a promise\n\twhen.attempt     = attempt;              // alias for when.try\n\n\twhen.iterate     = Promise.iterate;      // DEPRECATED (use cujojs/most streams) Generate a stream of promises\n\twhen.unfold      = Promise.unfold;       // DEPRECATED (use cujojs/most streams) Generate a stream of promises\n\n\twhen.join        = join;                 // Join 2 or more promises\n\n\twhen.all         = all;                  // Resolve a list of promises\n\twhen.settle      = settle;               // Settle a list of promises\n\n\twhen.any         = lift(Promise.any);    // One-winner race\n\twhen.some        = lift(Promise.some);   // Multi-winner race\n\twhen.race        = lift(Promise.race);   // First-to-settle race\n\n\twhen.map         = map;                  // Array.map() for promises\n\twhen.filter      = filter;               // Array.filter() for promises\n\twhen.reduce      = lift(Promise.reduce);       // Array.reduce() for promises\n\twhen.reduceRight = lift(Promise.reduceRight);  // Array.reduceRight() for promises\n\n\twhen.isPromiseLike = isPromiseLike;      // Is something promise-like, aka thenable\n\n\twhen.Promise     = Promise;              // Promise constructor\n\twhen.defer       = defer;                // Create a {promise, resolve, reject} tuple\n\n\t// Error types\n\n\twhen.TimeoutError = TimeoutError;\n\n\t/**\n\t * Get a trusted promise for x, or by transforming x with onFulfilled\n\t *\n\t * @param {*} x\n\t * @param {function?} onFulfilled callback to be called when x is\n\t *   successfully fulfilled.  If promiseOrValue is an immediate value, callback\n\t *   will be invoked immediately.\n\t * @param {function?} onRejected callback to be called when x is\n\t *   rejected.\n\t * @param {function?} onProgress callback to be called when progress updates\n\t *   are issued for x. @deprecated\n\t * @returns {Promise} a new promise that will fulfill with the return\n\t *   value of callback or errback or the completion value of promiseOrValue if\n\t *   callback and/or errback is not supplied.\n\t */\n\tfunction when(x, onFulfilled, onRejected, onProgress) {\n\t\tvar p = Promise.resolve(x);\n\t\tif (arguments.length < 2) {\n\t\t\treturn p;\n\t\t}\n\n\t\treturn p.then(onFulfilled, onRejected, onProgress);\n\t}\n\n\t/**\n\t * Creates a new promise whose fate is determined by resolver.\n\t * @param {function} resolver function(resolve, reject, notify)\n\t * @returns {Promise} promise whose fate is determine by resolver\n\t */\n\tfunction promise(resolver) {\n\t\treturn new Promise(resolver);\n\t}\n\n\t/**\n\t * Lift the supplied function, creating a version of f that returns\n\t * promises, and accepts promises as arguments.\n\t * @param {function} f\n\t * @returns {Function} version of f that returns promises\n\t */\n\tfunction lift(f) {\n\t\treturn function() {\n\t\t\tfor(var i=0, l=arguments.length, a=new Array(l); i<l; ++i) {\n\t\t\t\ta[i] = arguments[i];\n\t\t\t}\n\t\t\treturn apply(f, this, a);\n\t\t};\n\t}\n\n\t/**\n\t * Call f in a future turn, with the supplied args, and return a promise\n\t * for the result.\n\t * @param {function} f\n\t * @returns {Promise}\n\t */\n\tfunction attempt(f /*, args... */) {\n\t\t/*jshint validthis:true */\n\t\tfor(var i=0, l=arguments.length-1, a=new Array(l); i<l; ++i) {\n\t\t\ta[i] = arguments[i+1];\n\t\t}\n\t\treturn apply(f, this, a);\n\t}\n\n\t/**\n\t * Creates a {promise, resolver} pair, either or both of which\n\t * may be given out safely to consumers.\n\t * @return {{promise: Promise, resolve: function, reject: function, notify: function}}\n\t */\n\tfunction defer() {\n\t\treturn new Deferred();\n\t}\n\n\tfunction Deferred() {\n\t\tvar p = Promise._defer();\n\n\t\tfunction resolve(x) { p._handler.resolve(x); }\n\t\tfunction reject(x) { p._handler.reject(x); }\n\t\tfunction notify(x) { p._handler.notify(x); }\n\n\t\tthis.promise = p;\n\t\tthis.resolve = resolve;\n\t\tthis.reject = reject;\n\t\tthis.notify = notify;\n\t\tthis.resolver = { resolve: resolve, reject: reject, notify: notify };\n\t}\n\n\t/**\n\t * Determines if x is promise-like, i.e. a thenable object\n\t * NOTE: Will return true for *any thenable object*, and isn't truly\n\t * safe, since it may attempt to access the `then` property of x (i.e.\n\t *  clever/malicious getters may do weird things)\n\t * @param {*} x anything\n\t * @returns {boolean} true if x is promise-like\n\t */\n\tfunction isPromiseLike(x) {\n\t\treturn x && typeof x.then === 'function';\n\t}\n\n\t/**\n\t * Return a promise that will resolve only once all the supplied arguments\n\t * have resolved. The resolution value of the returned promise will be an array\n\t * containing the resolution values of each of the arguments.\n\t * @param {...*} arguments may be a mix of promises and values\n\t * @returns {Promise}\n\t */\n\tfunction join(/* ...promises */) {\n\t\treturn Promise.all(arguments);\n\t}\n\n\t/**\n\t * Return a promise that will fulfill once all input promises have\n\t * fulfilled, or reject when any one input promise rejects.\n\t * @param {array|Promise} promises array (or promise for an array) of promises\n\t * @returns {Promise}\n\t */\n\tfunction all(promises) {\n\t\treturn when(promises, Promise.all);\n\t}\n\n\t/**\n\t * Return a promise that will always fulfill with an array containing\n\t * the outcome states of all input promises.  The returned promise\n\t * will only reject if `promises` itself is a rejected promise.\n\t * @param {array|Promise} promises array (or promise for an array) of promises\n\t * @returns {Promise} promise for array of settled state descriptors\n\t */\n\tfunction settle(promises) {\n\t\treturn when(promises, Promise.settle);\n\t}\n\n\t/**\n\t * Promise-aware array map function, similar to `Array.prototype.map()`,\n\t * but input array may contain promises or values.\n\t * @param {Array|Promise} promises array of anything, may contain promises and values\n\t * @param {function(x:*, index:Number):*} mapFunc map function which may\n\t *  return a promise or value\n\t * @returns {Promise} promise that will fulfill with an array of mapped values\n\t *  or reject if any input promise rejects.\n\t */\n\tfunction map(promises, mapFunc) {\n\t\treturn when(promises, function(promises) {\n\t\t\treturn Promise.map(promises, mapFunc);\n\t\t});\n\t}\n\n\t/**\n\t * Filter the provided array of promises using the provided predicate.  Input may\n\t * contain promises and values\n\t * @param {Array|Promise} promises array of promises and values\n\t * @param {function(x:*, index:Number):boolean} predicate filtering predicate.\n\t *  Must return truthy (or promise for truthy) for items to retain.\n\t * @returns {Promise} promise that will fulfill with an array containing all items\n\t *  for which predicate returned truthy.\n\t */\n\tfunction filter(promises, predicate) {\n\t\treturn when(promises, function(promises) {\n\t\t\treturn Promise.filter(promises, predicate);\n\t\t});\n\t}\n\n\treturn when;\n});\n})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });\n\n},{\"./lib/Promise\":20,\"./lib/TimeoutError\":22,\"./lib/apply\":23,\"./lib/decorators/array\":24,\"./lib/decorators/flow\":25,\"./lib/decorators/fold\":26,\"./lib/decorators/inspect\":27,\"./lib/decorators/iterate\":28,\"./lib/decorators/progress\":29,\"./lib/decorators/timed\":30,\"./lib/decorators/unhandledRejection\":31,\"./lib/decorators/with\":32}],38:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function _interopRequireWildcard(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n};\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireWildcard(_path);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireWildcard(_utils);\n\n// Precompiled list of properties for specific endpoints\n\nvar _endpointProperties = require('../build/endpointProperties');\n\nvar _endpointProperties2 = _interopRequireWildcard(_endpointProperties);\n\n// Build a more parseable tree for the properties. Built here vs. simply\n// requiring an already build tree to save on bytes.\nvar PROPERTY_TREE = buildPropertyTree(_endpointProperties2['default']);\n\nmodule.exports = Endpoint;\nfunction Endpoint(userConfig, method, endpointPath, givenArgs, contextOptions) {\n  var self = this;\n\n  self.method = method;\n  self.path = endpointPath;\n\n  self.properties = getProperties();\n\n  // if this endpoint requires the `api_type` string of \"json\"\n  // in it's request\n  self.needsApiTypeJson = self.properties.indexOf('a') !== -1;\n\n  self.contextOptions = normalizeContextOptions();\n  self.args = buildArgs();\n  self.url = buildUrl();\n\n  function getProperties() {\n    // remove leading slash if any\n    var sections = self.path.replace(/^\\//, '').split('/');\n\n    // the top level of the endpoint tree that we will traverse down\n    var leaf = PROPERTY_TREE;\n\n    var section;\n\n    for (var i = 0, len = sections.length; i < len; ++i) {\n      section = sections[i];\n\n      // We can go down further in the tree\n      if (typeof leaf[section] !== 'undefined') {\n        leaf = leaf[section];\n        continue;\n      }\n\n      // Check if there is a placeholder we can go down\n      if (typeof leaf.$ !== 'undefined') {\n        leaf = leaf.$;\n        continue;\n      }\n\n      break; // else, dead end\n    }\n\n    if (leaf._endpoints && leaf._endpoints[self.method]) {\n      return leaf._endpoints[self.method];\n    }\n\n    return '';\n  }\n\n  /*\n     Returns a set of options that effect how each call to reddit behaves.\n   */\n  function normalizeContextOptions() {\n\n    var cOptions = contextOptions || {};\n\n    // by default we do not bypass authentication\n    cOptions.bypassAuth = _utils2['default'].thisOrThat(cOptions.bypassAuth, false);\n\n    // decode html enntities for this call?\n    cOptions.decodeHtmlEntities = _utils2['default'].thisOrThat(cOptions.decodeHtmlEntities, userConfig.decodeHtmlEntities);\n\n    // how many attempts left do we have to retry an endpoint?\n\n    // use the given retryAttemptsLeft, or the retryAttempts passed in the\n    // context options if not specified\n    cOptions.retryAttemptsLeft = _utils2['default'].thisOrThat(cOptions.retryAttemptsLeft, cOptions.retryAttempts);\n\n    // use the given retryAttemptsLeft, or the retryAttempts passed in the\n    // user configuration\n    cOptions.retryAttemptsLeft = _utils2['default'].thisOrThat(cOptions.retryAttemptsLeft, userConfig.retryAttempts);\n\n    // delay between retrying an endpoint\n    cOptions.retryDelay = _utils2['default'].thisOrThat(cOptions.retryDelay, userConfig.retryDelay);\n\n    // how many reauthentication attempts do we have left?\n    cOptions.reauthAttemptsLeft = _utils2['default'].thisOrThat(cOptions.reauthAttemptsLeft, cOptions.retryAttemptsLeft);\n\n    return cOptions;\n  }\n\n  /*\n     Build the arguments that we will send to reddit in our\n     request. These customize the request that we send to reddit\n   */\n  function buildArgs() {\n\n    givenArgs = givenArgs || {};\n    var args = {};\n\n    // Skip any url parameters (e.g. items that begin with $)\n    for (var key in givenArgs) {\n      if (key.substring(0, 1) !== '$') {\n        args[key] = givenArgs[key];\n      }\n    }\n\n    var apiType = _utils2['default'].thisOrThat(self.contextOptions.api_type, userConfig.apiType);\n\n    if (apiType && self.needsApiTypeJson) {\n      args.api_type = apiType;\n    }\n\n    return args;\n  }\n\n  /*\n     Builds the URL that we will query reddit with.\n   */\n  function buildUrl() {\n    var serverOAuth = _utils2['default'].thisOrThat(self.contextOptions.serverOAuth, userConfig.serverOAuth);\n\n    var url = 'https://' + _path2['default'].join(serverOAuth, self.path);\n    url = replaceUrlParams(url, givenArgs);\n    return url;\n  }\n}\n\n/*\n   Converts a list of endpoint properties into a tree for\n   faster traversal during runtime.\n */\nmodule.exports.buildPropertyTree = buildPropertyTree;\nfunction buildPropertyTree(endpointProperties) {\n  var propertyTree = {};\n\n  Object.keys(endpointProperties).forEach(function (endpointPath) {\n\n    // get the properties for this endpoint\n    var properties = endpointProperties[endpointPath];\n\n    // get the sections to traverse down for this endpoint\n    var pathSections = endpointPath.split('/');\n\n    // the first element in this list is the endpoint method\n    var method = pathSections.shift().toLowerCase();\n\n    var leaf = propertyTree; // start at the root\n\n    // move down to where we need to be in the chain for this endpoint\n    var i = 0;\n    var len = pathSections.length;\n\n    for (; i < len - 1; ++i) {\n      if (typeof leaf[pathSections[i]] === 'undefined') {\n        leaf[pathSections[i]] = {};\n      }\n      leaf = leaf[pathSections[i]];\n    }\n\n    // push the endpoint to this section of the tree\n    if (typeof leaf[pathSections[i]] === 'undefined') {\n      leaf[pathSections[i]] = { _endpoints: {} };\n    }\n\n    leaf[pathSections[i]]._endpoints[method] = properties;\n  });\n\n  return propertyTree;\n}\n\n/*\n   Takes an url, and an object of url parameters and replaces\n   them, e.g.\n\n   endpointUrl:\n   'http://example.com/$foo/$bar/test.html'\n\n   givenArgs: { $foo: 'hello', $bar: 'world' }\n\n   would output:\n\n   'http://example.com/hello/world/test.html'\n */\n\nmodule.exports.replaceUrlParams = replaceUrlParams;\nfunction replaceUrlParams(endpointUrl, givenArgs) {\n  // nothing to replace!\n  if (endpointUrl.indexOf('$') === -1) {\n    return endpointUrl;\n  }\n\n  // pull out variables from the url\n  var params = endpointUrl.match(/\\$[\\w\\.]+/g);\n\n  // replace with the argument provided\n  params.forEach(function (param) {\n    if (typeof givenArgs[param] === 'undefined') {\n      throw new Error('missing required url parameter ' + param);\n    }\n    endpointUrl = endpointUrl.replace(param, givenArgs[param]);\n  });\n\n  return endpointUrl;\n}\n\n},{\"../build/endpointProperties\":2,\"./utils\":47,\"path\":9}],39:[function(require,module,exports){\n(function (Buffer){\n'use strict';\n\nvar _interopRequireWildcard = function _interopRequireWildcard(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n};\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireWildcard(_querystring);\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireWildcard(_util);\n\nvar _urlLib = require('url');\n\nvar _urlLib2 = _interopRequireWildcard(_urlLib);\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireWildcard(_when);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireWildcard(_utils);\n\nmodule.exports = OAuth;\n\n/*\n   Various OAuth types\n */\nvar TOKEN = module.exports.TOKEN = {\n  EXPLICIT: 'explicit',\n  IMPLICIT: 'implicit',\n  SCRIPT: 'script',\n  APP_ONLY: 'app_only',\n  REFRESH: 'refresh'\n};\n\n/*\n   Represents an unset/invalid token\n */\nvar INVALID_TOKEN = module.exports.INVALID_TOKEN = 'invalid_token';\n\n/*\n   Represents a single OAuth instance. Used primarily for internal\n   use within the Snoocore class to manage two OAuth instances -\n   Applicaton Only and an Authenticated Session.\n\n */\nfunction OAuth(userConfig, request) {\n  var self = this;\n\n  self._userConfig = userConfig;\n\n  self._request = request;\n\n  self.accessToken = INVALID_TOKEN;\n  self.refreshToken = INVALID_TOKEN;\n  self.tokenType = 'bearer';\n\n  self.scope = normalizeScope();\n\n  /*\n     Takes a given scope, and normalizes it to a proper string.\n   */\n  function normalizeScope() {\n    var scope;\n    // Set to empty string if the scope if not set\n    if (typeof self._userConfig.oauth.scope === 'undefined') {\n      scope = '';\n    }\n    // convert an array into a string\n    else if (_util2['default'].isArray(self._userConfig.oauth.scope)) {\n      scope = self._userConfig.oauth.scope.join(',');\n    }\n    return scope;\n  }\n\n  /*\n     Do we have a refresh token defined?\n   */\n  self.hasRefreshToken = function () {\n    return self.refreshToken !== INVALID_TOKEN;\n  };\n\n  /*\n     Are we currently authenticated?\n   */\n  self.isAuthenticated = function () {\n    return self.accessToken !== INVALID_TOKEN;\n  };\n\n  self.getAuthorizationHeader = function () {\n    return self.tokenType + ' ' + self.accessToken;\n  };\n\n  /*\n     Get the Explicit Auth Url.\n   */\n  self.getExplicitAuthUrl = function (state) {\n\n    var query = {};\n\n    query.client_id = self._userConfig.oauth.key;\n    query.state = state || Math.ceil(Math.random() * 1000);\n    query.redirect_uri = self._userConfig.oauth.redirectUri;\n    query.duration = self._userConfig.oauth.duration || 'temporary';\n    query.response_type = 'code';\n    query.scope = self.scope;\n\n    var baseUrl = 'https://' + self._userConfig.serverWWW + '/api/v1/authorize';\n\n    if (self._userConfig.mobile) {\n      baseUrl += '.compact';\n    }\n\n    return baseUrl + '?' + _querystring2['default'].stringify(query);\n  };\n\n  /*\n     Get the Implicit Auth Url.\n   */\n  self.getImplicitAuthUrl = function (state) {\n\n    var query = {};\n\n    query.client_id = self._userConfig.oauth.key;\n    query.state = state || Math.ceil(Math.random() * 1000);\n    query.redirect_uri = self._userConfig.oauth.redirectUri;\n    query.response_type = 'token';\n    query.scope = self.scope;\n\n    var baseUrl = 'https://' + self._userConfig.serverWWW + '/api/v1/authorize';\n\n    if (self._userConfig.mobile) {\n      baseUrl += '.compact';\n    }\n\n    return baseUrl + '?' + _querystring2['default'].stringify(query);\n  };\n\n  self.getAuthUrl = function (state) {\n    switch (self._userConfig.oauth.type) {\n      case TOKEN.EXPLICIT:\n        return self.getExplicitAuthUrl(state);\n      case TOKEN.IMPLICIT:\n        return self.getImplicitAuthUrl(state);\n      default:\n        throw new Error('The oauth type of ' + oauthType + ' does not require an url');\n    }\n  };\n\n  /*\n     Returns the data needed to request an Applicaton Only\n     OAuth access token.\n   */\n  self.getAppOnlyTokenData = function () {\n    var params = {};\n\n    params.scope = self.scope;\n\n    // From the reddit documentation:\n    //\n    // - - -\n    // \"client_credentials\"\n    //\n    // Confidential clients (web apps / scripts) not acting on\n    // behalf of one or more logged out users.\n    //\n    // - - -\n    // \"https://oauth.reddit.com/grants/installed_client\"\n    //\n    // * Installed app types (as these apps are considered\n    // \"non-confidential\", have no secret, and thus, are\n    // ineligible for client_credentials grant.\n    //\n    // * Other apps acting on behalf of one or more \"logged out\" users.\n    //\n    switch (self._userConfig.oauth.type) {\n      case TOKEN.SCRIPT:\n      case TOKEN.EXPLICIT:\n        params.grant_type = 'client_credentials';\n        break;\n      case TOKEN.IMPLICIT:\n      default:\n        params.grant_type = 'https://oauth.reddit.com/grants/installed_client';\n        params.device_id = self._userConfig.oauth.deviceId;\n        break;\n    }\n\n    return params;\n  };\n\n  /*\n     Returns the data needed to request an authenticated OAuth\n     access token.\n   */\n  self.getAuthenticatedTokenData = function (authorizationCode) {\n    var params = {};\n\n    params.scope = self.scope;\n\n    switch (self._userConfig.oauth.type) {\n      case TOKEN.SCRIPT:\n        params.grant_type = 'password';\n        params.username = self._userConfig.oauth.username;\n        params.password = self._userConfig.oauth.password;\n        break;\n      case TOKEN.EXPLICIT:\n        params.grant_type = 'authorization_code';\n        params.client_id = self._userConfig.oauth.key;\n        params.redirect_uri = self._userConfig.oauth.redirectUri;\n        params.code = authorizationCode;\n        break;\n      default:\n        return _when2['default'].reject(new Error('Invalid OAuth type specified (Authenticated OAuth).'));\n    }\n\n    return params;\n  };\n\n  /*\n     Returns the data needed to request a refresh token.\n   */\n  self.getRefreshTokenData = function (refreshToken) {\n    var params = {};\n    params.scope = self.scope;\n    params.grant_type = 'refresh_token';\n    params.refresh_token = refreshToken;\n    return params;\n  };\n\n  /*\n     A function that sets up a call to receive an access/refresh token.\n   */\n  self.getToken = function (tokenEnum, options) {\n\n    options = options || {};\n    var params;\n\n    switch (tokenEnum) {\n      case TOKEN.REFRESH:\n        params = self.getRefreshTokenData(options.refreshToken);\n        break;\n      case TOKEN.APP_ONLY:\n        params = self.getAppOnlyTokenData();\n        break;\n      case TOKEN.SCRIPT:\n      case TOKEN.EXPLICIT:\n        params = self.getAuthenticatedTokenData(options.authorizationCode);\n        break;\n    }\n\n    var headers = {};\n    var buff = new Buffer(self._userConfig.oauth.key + ':' + self._userConfig.oauth.secret);\n    var auth = 'Basic ' + buff.toString('base64');\n\n    headers.Authorization = auth;\n\n    return self._request.https({\n      method: 'POST',\n      hostname: self._userConfig.serverWWW,\n      path: '/api/v1/access_token',\n      headers: headers\n    }, _querystring2['default'].stringify(params)).then(function (response) {\n      var data;\n\n      try {\n        data = JSON.parse(response._body);\n      } catch (e) {\n        throw new Error('Failed to get Auth Data:\\n' + response._body + '\\n' + e.stack);\n      }\n\n      if (data.error) {\n        throw new Error('Error fetching a new token.\\n' + JSON.stringify(data));\n      }\n\n      return data;\n    });\n  };\n\n  /*\n     Sets the auth data from the oauth module to allow OAuth calls.\n      This function can authenticate with:\n      - Script based OAuth (no parameter)\n     - Raw authentication data\n     - Authorization Code (request_type = \"code\")\n     - Access Token (request_type = \"token\") / Implicit OAuth\n     - Application Only. (void 0, true);\n   */\n  self.auth = function (authCodeOrAccessToken, isApplicationOnly) {\n    var tokenData;\n\n    if (isApplicationOnly) {\n      tokenData = self.getToken(TOKEN.APP_ONLY);\n    } else {\n\n      var token = self._userConfig.oauth.type;\n\n      switch (token) {\n        case TOKEN.SCRIPT:\n          tokenData = self.getToken(token);\n          break;\n\n        case TOKEN.EXPLICIT:\n          // auth code in this case\n          tokenData = self.getToken(token, {\n            authorizationCode: authCodeOrAccessToken\n          });\n          break;\n\n        case TOKEN.IMPLICIT:\n          // access token in this case\n          tokenData = {\n            access_token: authCodeOrAccessToken,\n            token_type: 'bearer',\n            expires_in: 3600,\n            scope: self._userConfig.oauth.scope\n          };\n          break;\n\n        default:\n          throw new Error('Setting the auth data is no longer supported.');\n      }\n    }\n\n    return _when2['default'](tokenData).then(function (data) {\n\n      if (typeof data !== 'object') {\n        return _when2['default'].reject(new Error('There was a problem authenticating: \\n', data));\n      }\n\n      self.accessToken = data.access_token;\n      self.tokenType = data.token_type;\n\n      // If the explicit app used a perminant duration, send\n      // back the refresh token that will be used to re-authenticate\n      // later without user interaction.\n      if (data.refresh_token) {\n        // set the internal refresh token for automatic expiring\n        // access_token management\n        self.refreshToken = data.refresh_token;\n        return self.refreshToken;\n      }\n    });\n  };\n\n  /*\n     Only authenticates with Application Only OAuth\n   */\n  self.applicationOnlyAuth = function () {\n    return self.auth(void 0, true);\n  };\n\n  /*\n     Authenticate with a refresh token.\n   */\n  self.refresh = function (refreshToken) {\n\n    // use the provided refresh token, or the current\n    // one that we have for this class\n    refreshToken = refreshToken || self.refreshToken;\n\n    return self.getToken(TOKEN.REFRESH, {\n      refreshToken: refreshToken\n    }).then(function (data) {\n      // only set the internal refresh token if reddit\n      // agrees that it was OK and sends back authData\n      self.refreshToken = refreshToken;\n\n      self.accessToken = data.access_token;\n      self.tokenType = data.token_type;\n    });\n  };\n\n  /*\n     Clears any authentication data & removes OAuth authentication\n      By default it will only remove the \"access_token\". Specify\n     the users refresh token to revoke that token instead.\n   */\n  self.deauth = function (refreshToken) {\n\n    // no need to deauth if not authenticated\n    if (!self.isAuthenticated()) {\n      return _when2['default'].resolve();\n    }\n\n    var isRefreshToken = typeof refreshToken === 'string';\n\n    var token = isRefreshToken ? refreshToken : self.accessToken;\n\n    var tokenTypeHint = isRefreshToken ? 'refresh_token' : 'access_token';\n\n    var params = {\n      token: token,\n      token_type_hint: tokenTypeHint\n    };\n\n    var auth = 'Basic ' + new Buffer(self._userConfig.oauth.key + ':' + self._userConfig.oauth.secret).toString('base64');\n\n    return self._request.https({\n      method: 'POST',\n      hostname: self._userConfig.serverWWW,\n      path: '/api/v1/revoke_token',\n      headers: { Authorization: auth }\n    }, _querystring2['default'].stringify(params)).then(function (response) {\n      if (response._status !== 204) {\n        throw new Error('Unable to revoke the given token');\n      }\n    }).then(function () {\n      // clear the data for this OAuth object\n      self.accessToken = INVALID_TOKEN;\n      self.tokenType = INVALID_TOKEN;\n\n      if (isRefreshToken) {\n        self.refreshToken = INVALID_TOKEN;\n      }\n    });\n  };\n\n  return self;\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./utils\":47,\"buffer\":3,\"querystring\":14,\"url\":15,\"util\":17,\"when\":37}],40:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function _interopRequireWildcard(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n};\n\n// node modules\n\nvar _util = require('util');\n\nvar _util2 = _interopRequireWildcard(_util);\n\nvar _events = require('events');\n\nvar _events2 = _interopRequireWildcard(_events);\n\nvar _urlLib = require('url');\n\nvar _urlLib2 = _interopRequireWildcard(_urlLib);\n\n// npm modules\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireWildcard(_when);\n\nvar _delay = require('when/delay');\n\nvar _delay2 = _interopRequireWildcard(_delay);\n\nvar _he = require('he');\n\nvar _he2 = _interopRequireWildcard(_he);\n\n// our modules\n\nvar _Request = require('./Request');\n\nvar _Request2 = _interopRequireWildcard(_Request);\n\nvar _Endpoint = require('./Endpoint');\n\nvar _Endpoint2 = _interopRequireWildcard(_Endpoint);\n\n/*\n   A collection of functions that deal with requesting data from the\n   reddit API.\n */\nmodule.exports = RedditRequest;\n_util2['default'].inherits(RedditRequest, _events2['default'].EventEmitter);\nfunction RedditRequest(userConfig, request, oauth, oauthAppOnly) {\n  var self = this;\n\n  _events2['default'].EventEmitter.call(self);\n\n  self._request = request;\n  self._userConfig = userConfig;\n  self._oauth = oauth;\n  self._oauthAppOnly = oauthAppOnly;\n\n  /*\n     Currently application only?\n   */\n  function isApplicationOnly() {\n    return !self._oauth.isAuthenticated();\n  }\n\n  /*\n     Builds up the headers for an endpoint.\n   */\n  self.buildHeaders = function (endpoint) {\n    var headers = {};\n\n    if (self._userConfig.isNode) {\n      // Can't set User-Agent in browser\n      headers['User-Agent'] = self._userConfig.userAgent;\n    }\n\n    if (endpoint.contextOptions.bypassAuth || isApplicationOnly()) {\n      headers.Authorization = self._oauthAppOnly.getAuthorizationHeader();\n    } else {\n      headers.Authorization = self._oauth.getAuthorizationHeader();\n    }\n\n    return headers;\n  };\n\n  /*\n     Call the reddit api.\n   */\n  self.callRedditApi = function (endpoint) {\n\n    var parsedUrl = _urlLib2['default'].parse(endpoint.url);\n\n    var reqOptions = {\n      method: endpoint.method.toUpperCase(),\n      hostname: parsedUrl.hostname,\n      path: parsedUrl.path,\n      headers: self.buildHeaders(endpoint)\n    };\n\n    if (parsedUrl.port) {\n      reqOptions.port = parsedUrl.port;\n    }\n\n    return self._request.https(reqOptions, endpoint.args).then(function (res) {\n      return self.handleRedditResponse(res, endpoint);\n    });\n  };\n\n  /*\n     Returns a uniform error for all response errors.\n   */\n  self.getResponseError = function (message, response, endpoint) {\n\n    var responseError = new Error([message, '>>> Response Status: ' + response._status, '>>> Endpoint URL: ' + endpoint.url, '>>> Arguments: ' + JSON.stringify(endpoint.args, null, 2), '>>> Response Body:', response._body].join('\\n\\n'));\n\n    responseError.url = endpoint.url;\n    responseError.args = endpoint.args;\n    responseError.status = response._status;\n    responseError.body = response._body;\n    responseError.endpoint = endpoint;\n\n    return responseError;\n  };\n\n  /*\n     Handle a reddit 500 / server error. This will try to call the endpoint again\n     after the given retryDelay. If we do not have any retry attempts left, it\n     will reject the promise with the error.\n   */\n  self.handleServerErrorResponse = function (response, endpoint) {\n\n    endpoint.contextOptions.retryAttemptsLeft--;\n\n    var responseError = self.getResponseError('Server Error Response', response, endpoint);\n\n    responseError.retryAttemptsLeft = endpoint.contextOptions.retryAttemptsLeft;\n\n    self.emit('server_error', responseError);\n\n    if (endpoint.contextOptions.retryAttemptsLeft <= 0) {\n      responseError.message = 'All retry attempts exhausted.\\n\\n' + responseError.message;\n      return _when2['default'].reject(responseError);\n    }\n\n    return _delay2['default'](endpoint.contextOptions.retryDelay).then(function () {\n      return self.callRedditApi(endpoint);\n    });\n  };\n\n  /*\n     Handle a reddit 4xx / client error. This is usually caused when our\n     access_token has expired.\n      If we can't renew our access token, we throw an error / emit the\n     'access_token_expired' event that users can then handle to\n     re-authenticatet clients\n      If we can renew our access token, we try to reauthenticate, and call the\n     reddit endpoint again.\n   */\n  self.handleClientErrorResponse = function (response, endpoint) {\n\n    // - - -\n    // Check headers for more specific errors.\n\n    var wwwAuth = response._headers['www-authenticate'];\n\n    if (wwwAuth && wwwAuth.indexOf('insufficient_scope') !== -1) {\n      return _when2['default'].reject(self.getResponseError('Insufficient scopes provided for this call', response, endpoint));\n    }\n\n    // - - -\n    // Parse the response for more specific errors.\n\n    try {\n      var data = JSON.parse(response._body);\n\n      if (data.reason === 'USER_REQUIRED') {\n        var msg = 'Must be authenticated with a user to make this call';\n        return _when2['default'].reject(self.getResponseError(msg, response, endpoint));\n      }\n    } catch (e) {}\n\n    // - - -\n    // Access token has expired\n\n    if (response._status === 401) {\n\n      self.emit('access_token_expired');\n\n      var canRenewAccessToken = isApplicationOnly() || self._oauth.hasRefreshToken() || self._userConfig.isOAuthType('script');\n\n      if (!canRenewAccessToken) {\n        var errmsg = 'Access token has expired. Listen for ' + 'the \"access_token_expired\" event to ' + 'handle this gracefully in your app.';\n        return _when2['default'].reject(self.getResponseError(errmsg, response, endpoint));\n      } else {\n\n        // Renew our access token\n\n        --endpoint.contextOptions.reauthAttemptsLeft;\n\n        if (endpoint.contextOptions.reauthAttemptsLeft <= 0) {\n          return _when2['default'].reject(self.getResponseError('Unable to refresh the access_token.', response, endpoint));\n        }\n\n        var reauth;\n\n        // If we are application only, or are bypassing authentication\n        // therefore we're using application only OAuth\n        if (isApplicationOnly() || endpoint.contextOptions.bypassAuth) {\n          reauth = self._oauthAppOnly.applicationOnlyAuth();\n        } else {\n\n          // If we have been authenticated with a permanent refresh token use it\n          if (self._oauth.hasRefreshToken()) {\n            reauth = self._oauth.refresh();\n          }\n\n          // If we are OAuth type script we can call `.auth` again\n          if (self._userConfig.isOAuthType('script')) {\n            reauth = self._oauth.auth();\n          }\n        }\n\n        return reauth.then(function () {\n          return self.callRedditApi(endpoint);\n        });\n      }\n    }\n\n    // - - -\n    // At the end of the day, we just throw an error stating that there\n    // is nothing we can do & give general advice\n    return _when2['default'].reject(self.getResponseError('This call failed. ' + 'Is the user missing reddit gold? ' + 'Trying to change a subreddit that the user does not moderate? ' + 'This is an unrecoverable error.', response, endpoint));\n  };\n\n  /*\n     Handle reddit response status of 2xx.\n      Finally return the data if there were no problems.\n   */\n  self.handleSuccessResponse = function (response, endpoint) {\n    var data = response._body || '';\n\n    if (endpoint.contextOptions.decodeHtmlEntities) {\n      data = _he2['default'].decode(data);\n    }\n\n    // Attempt to parse some JSON, otherwise continue on (may be empty, or text)\n    try {\n      data = JSON.parse(data);\n    } catch (e) {}\n\n    return _when2['default'].resolve(data);\n  };\n\n  /*\n     Handles various reddit response cases.\n   */\n  self.handleRedditResponse = function (response, endpoint) {\n\n    switch (String(response._status).substring(0, 1)) {\n      case '5':\n        return self.handleServerErrorResponse(response, endpoint);\n      case '4':\n        return self.handleClientErrorResponse(response, endpoint);\n      case '2':\n        return self.handleSuccessResponse(response, endpoint);\n    }\n\n    return _when2['default'].reject(new Error('Invalid reddit response status of ' + response._status));\n  };\n\n  /*\n     Listing support.\n   */\n  function getListing(endpoint) {\n\n    // number of results that we have loaded so far. It will\n    // increase / decrease when calling next / previous.\n    var count = 0;\n    var limit = endpoint.args.limit || 25;\n    // keep a reference to the start of this listing\n    var start = endpoint.args.after || null;\n\n    function getSlice(endpoint) {\n\n      return self.callRedditApi(endpoint).then(function (result) {\n\n        var slice = {};\n        var listing = result || {};\n\n        slice.get = result || {};\n\n        if (result instanceof Array) {\n          if (typeof endpoint.contextOptions.listingIndex === 'undefined') {\n            throw new Error('Must specify a `listingIndex` for this listing.');\n          }\n\n          listing = result[endpoint.contextOptions.listingIndex];\n        }\n\n        slice.count = count;\n\n        slice.before = listing.data.before || null;\n        slice.after = listing.data.after || null;\n        slice.allChildren = listing.data.children || [];\n\n        slice.empty = slice.allChildren.length === 0;\n\n        slice.children = slice.allChildren.filter(function (child) {\n          return !child.data.stickied;\n        });\n\n        slice.stickied = slice.allChildren.filter(function (child) {\n          return child.data.stickied;\n        });\n\n        slice.next = function () {\n          count += limit;\n\n          var newArgs = endpoint.args;\n          newArgs.before = null;\n          newArgs.after = slice.children[slice.children.length - 1].data.name;\n          newArgs.count = count;\n          return getSlice(new _Endpoint2['default'](self._userConfig, endpoint.method, endpoint.path, newArgs, endpoint.contextOptions));\n        };\n\n        slice.previous = function () {\n          count -= limit;\n\n          var newArgs = endpoint.args;\n          newArgs.before = slice.children[0].data.name;\n          newArgs.after = null;\n          newArgs.count = count;\n          return getSlice(new _Endpoint2['default'](self._userConfig, endpoint.method, endpoint.path, newArgs, endpoint.contextOptions));\n        };\n\n        slice.start = function () {\n          count = 0;\n\n          var newArgs = endpoint.args;\n          newArgs.before = null;\n          newArgs.after = start;\n          newArgs.count = count;\n          return getSlice(new _Endpoint2['default'](self._userConfig, endpoint.method, endpoint.path, newArgs, endpoint.contextOptions));\n        };\n\n        slice.requery = function () {\n          return getSlice(endpoint);\n        };\n\n        return slice;\n      });\n    }\n\n    return getSlice(endpoint);\n  }\n\n  /*\n     Enable path syntax support, e.g. self.path('/path/to/$endpoint/etc')\n      Can take an url as well, but the first part of the url is chopped\n     off because it is not needed. We will always use the server oauth\n     to call the API...\n      e.g. https://www.example.com/api/v1/me\n      will only use the path: /api/v1/me\n   */\n  self.path = function (urlOrPath) {\n\n    var parsed = _urlLib2['default'].parse(urlOrPath);\n    var path = parsed.pathname;\n\n    var calls = {};\n\n    ['get', 'post', 'put', 'patch', 'delete', 'update'].forEach(function (verb) {\n      calls[verb] = function (userGivenArgs, userContextOptions) {\n        return self.callRedditApi(new _Endpoint2['default'](self._userConfig, verb, path, userGivenArgs, userContextOptions));\n      };\n    });\n\n    // Add listing support\n    calls.listing = function (userGivenArgs, userContextOptions) {\n      return getListing(new _Endpoint2['default'](self._userConfig, 'get', path, userGivenArgs, userContextOptions));\n    };\n\n    return calls;\n  };\n\n  return self;\n}\n\n},{\"./Endpoint\":38,\"./Request\":41,\"events\":7,\"he\":18,\"url\":15,\"util\":17,\"when\":37,\"when/delay\":19}],41:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function _interopRequireWildcard(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n};\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireWildcard(_utils);\n\n// Browserify switches it to httpsBrowser for us when building\n// for browsers.\n//\n// This is defined in `package.json`\n\nvar _https = require('./https/httpsNode');\n\nvar _https2 = _interopRequireWildcard(_https);\n\nmodule.exports = Request;\nfunction Request(throttle) {\n  var self = this;\n\n  self._throttle = throttle;\n\n  self.https = function (options, formData) {\n    return self._throttle.wait().then(function () {\n      return _https2['default'](options, formData);\n    });\n  };\n\n  return self;\n}\n\n},{\"./https/httpsNode\":46,\"./utils\":47}],42:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function _interopRequireWildcard(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n};\n\n/*\n   A basic throttle manager. Exposes 1 functoin `wait` that\n   will return a promise that resolves once we've waited the proper\n   amount of time, e.g.\n\n   var throttle = new Throttle();\n\n   throttle.wait() // resolves after 1ms\n   throttle.wait() // resolves after 10001ms\n   throttle.wait() // resolves after 2001ms\n\n */\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireWildcard(_when);\n\nvar _delay = require('when/delay');\n\nvar _delay2 = _interopRequireWildcard(_delay);\n\nmodule.exports = Throttle;\nfunction Throttle(throttleMs) {\n\n  var self = this;\n\n  // default to 1000ms delay\n  self._throttleMs = throttleMs || 1000;\n\n  /*\n     The current throttle delay before a request will go through\n     increments every time a call is made, and is reduced when a\n     call finishes.\n      Time is added & removed based on the throttle variable.\n   */\n  self._throttleDelay = 1;\n\n  self.wait = function () {\n    // resolve this promise after the current throttleDelay\n    var delayPromise = _delay2['default'](self._throttleDelay);\n\n    // add throttleMs to the total throttleDelay\n    self._throttleDelay += self._throttleMs;\n\n    // after throttleMs time, subtract throttleMs from\n    // the throttleDelay\n    setTimeout(function () {\n      self._throttleDelay -= self._throttleMs;\n    }, self._throttleMs);\n\n    return delayPromise;\n  };\n\n  return self;\n}\n\n},{\"when\":37,\"when/delay\":19}],43:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function _interopRequireWildcard(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n};\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireWildcard(_utils);\n\n/*\n   A class made up of the user configuration.\n\n   Normalizes the configuraiton & checks for simple errors.\n\n   Provides some helper functons for getting user set values.\n */\nmodule.exports = UserConfig;\nfunction UserConfig(userConfiguration) {\n\n  var self = this;\n\n  //\n  // - - - CONFIGURATION VALUES - - -\n  //\n\n  var missingMsg = 'Missing required userConfiguration value ';\n\n  // ** SERVERS\n  self.serverOAuth = _utils2['default'].thisOrThat(userConfiguration.serverOAuth, 'oauth.reddit.com');\n\n  self.serverWWW = _utils2['default'].thisOrThat(userConfiguration.serverWWW, 'www.reddit.com');\n\n  // ** IDENFIFICATION\n  self.userAgent = _utils2['default'].thisOrThrow(userConfiguration.userAgent, 'Missing required userConfiguration value `userAgent`');\n\n  self.isNode = _utils2['default'].thisOrThat(userConfiguration.browser, _utils2['default'].isNode());\n\n  self.mobile = _utils2['default'].thisOrThat(userConfiguration.mobile, false);\n\n  // ** CALL MODIFICATIONS\n  self.decodeHtmlEntities = _utils2['default'].thisOrThat(userConfiguration.decodeHtmlEntities, false);\n\n  self.apiType = _utils2['default'].thisOrThat(userConfiguration.apiType, 'json');\n\n  // ** RETRY ATTEMPTS\n  self.retryAttempts = _utils2['default'].thisOrThat(userConfiguration.retryAttempts, 60);\n\n  self.retryDelay = _utils2['default'].thisOrThat(userConfiguration.retryDelay, 5000);\n\n  // ** OAUTH\n  self.oauth = _utils2['default'].thisOrThat(userConfiguration.oauth, {});\n\n  self.oauth.scope = _utils2['default'].thisOrThat(self.oauth.scope, []);\n\n  self.oauth.deviceId = _utils2['default'].thisOrThat(self.oauth.deviceId, 'DO_NOT_TRACK_THIS_DEVICE');\n  self.oauth.type = _utils2['default'].thisOrThrow(self.oauth.type, missingMsg + '`oauth.type`');\n  self.oauth.key = _utils2['default'].thisOrThrow(self.oauth.key, missingMsg + '`oauth.key`');\n\n  //\n  // - - - FUNCTIONS - - -\n  //\n\n  /*\n     Checks if the oauth is of a specific type, e.g.\n      isOAuthType('script')\n   */\n  self.isOAuthType = function (type) {\n    return self.oauth.type === type;\n  };\n\n  //\n  // - - - VALIDATION\n  //\n\n  if (!self.isOAuthType('explicit') && !self.isOAuthType('implicit') && !self.isOAuthType('script')) {\n    throw new Error('Invalid `oauth.type`. Must be one of: explicit, implicit, or script');\n  }\n\n  if (self.isOAuthType('explicit') || self.isOAuthType('script')) {\n    self.oauth.secret = _utils2['default'].thisOrThrow(self.oauth.secret, missingMsg + '`oauth.secret` for type explicit/script');\n  }\n\n  if (self.isOAuthType('script')) {\n    self.oauth.username = _utils2['default'].thisOrThrow(self.oauth.username, missingMsg + '`oauth.username` for type script');\n    self.oauth.password = _utils2['default'].thisOrThrow(self.oauth.password, missingMsg + '`oauth.password` for type script');\n  }\n\n  if (self.isOAuthType('implicit') || self.isOAuthType('explicit')) {\n    self.oauth.redirectUri = _utils2['default'].thisOrThrow(self.oauth.redirectUri, missingMsg + '`oauth.redirectUri` for type implicit/explicit');\n  }\n\n  return self;\n}\n\n},{\"./utils\":47}],44:[function(require,module,exports){\n(function (Buffer){\n/*\nRepresents a file that we wish to upload to reddit.\n\nAll files have a name, mimeType, and data. \n\ndata can be a `utf8` string, or a buffer containing the \ncontent of the file.\n*/\n\n'use strict';\n\nmodule.exports = function (name, mimeType, data) {\n  var self = {};\n\n  self.name = name;\n  self.mimeType = mimeType;\n  self.data = typeof data === 'string' ? new Buffer(data) : data;\n\n  return self;\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":3}],45:[function(require,module,exports){\n(function (Buffer){\n'use strict';\n\nvar _interopRequireWildcard = function _interopRequireWildcard(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n};\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireWildcard(_querystring);\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireWildcard(_when);\n\nexports.getSectionBoundary = function (boundary) {\n  return '--' + boundary;\n};\n\nexports.getEndBoundary = function (boundary) {\n  return '--' + boundary + '--';\n};\n\nexports.encodeFieldPart = function (boundary, key, value) {\n  return new Buffer([exports.getSectionBoundary(boundary), '\\r\\n', 'Content-Disposition: form-data; name=\"' + key + '\"', '\\r\\n\\r\\n', value, '\\r\\n'].join(''));\n};\n\nexports.encodeFilePart = function (boundary, key, name, mimeType, data) {\n  return Buffer.concat([new Buffer([exports.getSectionBoundary(boundary), '\\r\\n', 'Content-Disposition: form-data; ' + 'name=\"' + key + '\"; ' + 'filename=\"' + name + '\"', '\\r\\n', 'Content-Type: ' + mimeType, '\\r\\n\\r\\n'].join('')), data, // already a buffer\n  new Buffer('\\r\\n')]);\n};\n\n/*\n   Converts a list of parameters to form data\n\n   - `fields` - a property map of key value pairs\n   - `files` - a list of property maps of content\n   --> `type` - the type of file data\n   --> `keyname` - the name of the key corresponding to the file\n   --> `valuename` - the name of the value corresponding to the file\n   --> `dataBuffer` - A buffer containing the files data\n */\nexports.getMultipartFormData = function (boundary, fields, files) {\n\n  var dataBuffer = new Buffer(0);\n  var key;\n\n  if (fields) {\n    for (key in fields) {\n      // skip over any file fields\n      if (key === 'file') {\n        continue;\n      }\n\n      var value = fields[key];\n\n      dataBuffer = Buffer.concat([dataBuffer, exports.encodeFieldPart(boundary, key, value)]);\n    }\n  }\n\n  if (files) {\n    for (key in files) {\n      var file = files[key];\n\n      dataBuffer = Buffer.concat([dataBuffer, exports.encodeFilePart(boundary, file.key, file.name, file.mimeType, file.data)]);\n    }\n  }\n\n  // close with a final boundary closed with '--' at the end\n  dataBuffer = Buffer.concat([dataBuffer, new Buffer(exports.getEndBoundary(boundary))]);\n\n  return dataBuffer;\n};\n\n/*\n   Takes an existing string or key-value pair that represents form data\n   and returns form data in the form of an Array.\n\n   If the formData is an object, and that object has a 'file' key,\n   we will assume that it is going to be a multipart request and we\n   will also assume that the file is actually a file path on the system\n   that we wish to use in the multipart data.\n */\nexports.getData = function (formData) {\n\n  var data = {\n    contentType: 'application/x-www-form-urlencoded',\n    contentLength: 0,\n    buffer: new Buffer(0)\n  };\n\n  // The data is already in a string format. There is nothing\n  // to do really\n  if (typeof formData === 'string') {\n    data.buffer = new Buffer(formData);\n  }\n\n  if (typeof formData === 'object') {\n    // The data is an object *without* a file key. We will assume\n    // that we want this data in an url encoded format\n    if (!formData.file) {\n      data.buffer = new Buffer(_querystring2['default'].stringify(formData));\n    } else {\n      // for now we only have to handle one file, with one key name of 'file'\n      var singleFile = formData.file;\n      singleFile.key = 'file';\n\n      var files = [formData.file];\n\n      var boundary = '---------Snoocore' + Math.floor(Math.random() * 10000);\n      data.contentType = 'multipart/form-data; boundary=' + boundary;\n      data.buffer = exports.getMultipartFormData(boundary, formData, files);\n    }\n  }\n\n  data.contentLength = data.buffer.length;\n  return data;\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":3,\"querystring\":14,\"when\":37}],46:[function(require,module,exports){\n'use strict';\n\nvar _interopRequireWildcard = function _interopRequireWildcard(obj) {\n  return obj && obj.__esModule ? obj : { 'default': obj };\n};\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n//\n// Browser requests, mirrors the syntax of the node requests\n//\n\nvar _when = require('when');\n\nvar _when2 = _interopRequireWildcard(_when);\n\nvar _form = require('./form');\n\nvar _form2 = _interopRequireWildcard(_form);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#getAllResponseHeaders()\n\nexports['default'] = function (options, formData) {\n\n  options = options || {};\n  options.headers = options.headers || {};\n\n  var data = _form2['default'].getData(formData);\n\n  options.headers['Content-Type'] = data.contentType;\n\n  return _when2['default'].promise(function (resolve, reject) {\n\n    try {\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n      var x = new window.XMLHttpRequest();\n\n      var url = 'https://' + options.hostname + options.path;\n\n      // append the form data to the end of the url\n      if (options.method === 'GET') {\n        url += '?' + data.buffer.toString();\n      }\n\n      x.open(options.method, url, true);\n\n      Object.keys(options.headers).forEach(function (headerKey) {\n        x.setRequestHeader(headerKey, options.headers[headerKey]);\n      });\n\n      x.onreadystatechange = function () {\n        if (x.readyState > 3) {\n          // Normalize the result to match how requestNode.js works\n\n          console.log(x.getAllResponseHeaders());\n\n          return resolve({\n            _body: x.responseText,\n            _status: x.status,\n            _headers: x.getAllResponseHeaders()\n          });\n        }\n      };\n\n      x.send(options.method === 'GET' ? null : data.buffer.toString());\n    } catch (e) {\n      return reject(e);\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n\n},{\"./form\":45,\"when\":37}],47:[function(require,module,exports){\n\"use strict\";\n\n// checks basic globals to help determine which environment we are in\nexports.isNode = function () {\n  return typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\" && typeof window === \"undefined\";\n};\n\n/*\n   Return the value of `tryThis` unless it's undefined, then return `that`\n */\nexports.thisOrThat = function (tryThis, that) {\n  return typeof tryThis !== \"undefined\" ? tryThis : that;\n};\n\n/*\n   Return the value of `tryThir` or throw an error (with provided message);\n */\nexports.thisOrThrow = function (tryThis, orThrowMessage) {\n  if (typeof tryThis !== \"undefined\") {\n    return tryThis;\n  }\n  throw new Error(orThrowMessage);\n};\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;base64,\n"],"sourceRoot":"/source/"}