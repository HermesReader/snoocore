{"version":3,"sources":["src/Endpoint-test.js"],"names":[],"mappings":"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","file":"src/Endpoint-test.js","sourcesContent":["/* describe, it, afterEach, beforeEach */\nrequire(\"babel/register\");\n\nvar chai = require('chai');\nvar chaiAsPromised = require('chai-as-promised');\nchai.use(chaiAsPromised);\nvar expect = chai.expect;\n\nvar config = require('../config');\nvar util = require('./util');\n\nvar Endpoint = require('../../src/Endpoint');\n\ndescribe('Endpoint.', function () {\n\n  this.timeout(config.testTimeout);\n\n  describe('replaceUrlParams()', function() {\n    it('should not replace anything', function() {\n      var reddit = util.getScriptInstance();\n      var url = Endpoint.replaceUrlParams(\n        'http://foo/bar/baz', { hello: 'world' });\n      expect(url).to.equal('http://foo/bar/baz');\n    });\n\n    it('should replace parameters', function() {\n      var reddit = util.getScriptInstance();\n      var url = Endpoint.replaceUrlParams(\n        'http://foo/$hello/baz', {\n          $hello: 'world'\n        });\n      expect(url).to.equal('http://foo/world/baz');\n    });\n\n    it('should replace more than one parameter', function() {\n      var reddit = util.getScriptInstance();\n      var url = Endpoint.replaceUrlParams(\n        'http://foo/$hello/$foo', {\n          $hello: 'world',\n          $foo: 'bar'\n        });\n      expect(url).to.equal('http://foo/world/bar');\n    });\n  });\n\n  describe('buildPropertyTree()', function() {\n    it('should build the tree', function() {\n      var endpointProperties = require('../../endpointProperties');\n      var propertyTree = Endpoint.buildPropertyTree(endpointProperties);\n      expect(propertyTree.api.new_captcha._endpoints.post).to.equal('a');\n    });\n  });\n\n  describe('Instance methods.', function() {\n\n    describe('buildArgs()', function() {\n\n      it('should remove `$` arguments', function() {\n        var userConfig = util.getScriptUserConfig();\n        var endpoint = new Endpoint(userConfig,\n                                    'get',\n                                    '/foo/bar',\n                                    { $foo: 'bar' });\n\n        expect(endpoint.args).to.eql({});\n      });\n\n      it('should add in the default api type', function() {\n        var userConfig = util.getScriptUserConfig();\n        var endpoint = new Endpoint(userConfig,\n                                    'post',\n                                    '/api/new_captcha',\n                                    { $foo: 'bar' });\n\n        expect(endpoint.args).to.eql({ api_type: 'json' });\n      });\n\n      it('Should NOT add in the default api type', function() {\n\n        var userConfig = util.getScriptUserConfig();\n\n        userConfig.apiType = false; // no not set api_type to \"json\"\n\n        var endpoint = new Endpoint(userConfig,\n                                    'post',\n                                    '/api/new_captcha',\n                                    { $foo: 'bar' });\n\n        expect(endpoint.args).to.eql({});\n      });\n\n    });\n\n    describe('normalizeContextOptions()', function() {\n      it('should initialize the correct default context options', function() {\n        var userConfig = util.getScriptUserConfig();\n        var endpoint = new Endpoint(userConfig, 'post', '/api/new_captcha');\n        expect(endpoint.contextOptions).to.eql({\n          bypassAuth: false,\n          decodeHtmlEntities: false,\n          retryAttemptsLeft: 60,\n          retryDelay: 5000,\n          reauthAttemptsLeft: 60\n        });\n      });\n\n      it('should change context options based on user config', function() {\n        var userConfig = util.getScriptUserConfig();\n\n        userConfig.decodeHtmlEntities = true;\n        userConfig.retryAttempts = 9999;\n        userConfig.retryDelay = 8888;\n\n        var endpoint = new Endpoint(userConfig, 'post', '/api/new_captcha');\n        expect(endpoint.contextOptions).to.eql({\n          bypassAuth: false,\n          decodeHtmlEntities: true,\n          retryAttemptsLeft: 9999,\n          retryDelay: 8888,\n          reauthAttemptsLeft: 9999\n        });\n      });\n\n      it('should change context options based on endpoint optons', function() {\n        var userConfig = util.getScriptUserConfig();\n\n        var endpoint = new Endpoint(userConfig, 'post', '/api/new', {}, {\n          bypassAuth: true,\n          decodeHtmlEntities: true,\n          retryAttempts: 9999,\n          retryDelay: 8888\n        });\n\n        expect(endpoint.contextOptions).to.eql({\n          bypassAuth: true,\n          decodeHtmlEntities: true,\n          retryAttemptsLeft: 9999,\n          retryDelay: 8888,\n          reauthAttemptsLeft: 9999,\n          retryAttempts: 9999\n        });\n      });\n    });\n\n    describe('getProperties()', function() {\n      it('should have properties', function() {\n        var userConfig = util.getScriptUserConfig();\n        var endpoint = new Endpoint(userConfig, 'post', '/api/new_captcha');\n        expect(endpoint.properties).to.equal('a');\n      });\n\n      it('should not have properties', function() {\n        var userConfig = util.getScriptUserConfig();\n        var endpoint = new Endpoint(userConfig, 'get', '/foo/bar');\n        expect(endpoint.properties).to.equal('');\n      });\n    });\n\n    describe('buildUrl()', function() {\n\n      it('should build an url for an endpoint', function() {\n        var userConfig = util.getScriptUserConfig();\n        var endpoint = new Endpoint(userConfig, 'get', '/$urlparam/bar', {\n          extensions: [],\n          user: 'foo',\n          passwd: 'foo',\n          $urlparam: 'some'\n        });\n\n        expect(endpoint.url).to.equal(\n          'https://' + config.requestServer.oauth + '/some/bar');\n      });\n\n      it('should build an url with a custom hostname (global)', function() {\n        var userConfig = util.getScriptUserConfig();\n        userConfig.serverOAuth = 'foo.bar.com';\n\n        var endpoint = new Endpoint(userConfig, 'get', '/$urlparam/bar', {\n          extensions: [],\n          user: 'foo',\n          passwd: 'foo',\n          $urlparam: 'something'\n        });\n\n        expect(endpoint.url).to.equal('https://foo.bar.com/something/bar');\n      });\n\n\n      it('should build an url with a custom hostname (local)', function() {\n\n        var userConfig = util.getScriptUserConfig();\n\n        var endpoint = new Endpoint(userConfig, 'get', '/$urlparam/bar', {\n          extensions: [],\n          user: 'foo',\n          passwd: 'foo',\n          $urlparam: 'something'\n        }, {\n          serverOAuth: 'foo.bar.com'\n        });\n\n        expect(endpoint.url).to.equal('https://foo.bar.com/something/bar');\n      });\n    });\n\n  });\n\n});\n"],"sourceRoot":"/source/"}