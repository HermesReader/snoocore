{"version":3,"sources":["RedditRequest.js"],"names":[],"mappings":"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","file":"RedditRequest.js","sourcesContent":["\n// node modules\nimport util from 'util';\nimport events from 'events';\nimport urlLib from 'url';\n\n// npm modules\nimport when from 'when';\nimport delay from 'when/delay';\nimport he from 'he';\n\n// our modules\nimport Request from './Request';\nimport Endpoint from './Endpoint';\n\n/*\n   A collection of functions that deal with requesting data from the\n   reddit API.\n */\nmodule.exports = RedditRequest;\nutil.inherits(RedditRequest, events.EventEmitter);\nfunction RedditRequest(userConfig, request, oauth, oauthAppOnly) {\n  var self = this;\n\n  events.EventEmitter.call(self);\n\n  self._request = request;\n  self._userConfig = userConfig;\n  self._oauth = oauth;\n  self._oauthAppOnly = oauthAppOnly;\n\n  /*\n     Currently application only?\n   */\n  function isApplicationOnly() {\n    return !self._oauth.isAuthenticated();\n  }\n\n  /*\n     Builds up the headers for an endpoint.\n   */\n  self.buildHeaders = function(endpoint) {\n    var headers = {};\n\n    if (self._userConfig.isNode) {\n      // Can't set User-Agent in browser\n      headers['User-Agent'] = self._userConfig.userAgent;\n    }\n\n    if (endpoint.contextOptions.bypassAuth || isApplicationOnly()) {\n      headers['Authorization'] = self._oauthAppOnly.getAuthorizationHeader();\n    } else {\n      headers['Authorization'] = self._oauth.getAuthorizationHeader();\n    }\n\n    return headers;\n  };\n\n  /*\n     Call the reddit api.\n   */\n  self.callRedditApi = function(endpoint) {\n\n    var parsedUrl = urlLib.parse(endpoint.url);\n\n    var reqOptions = {\n      method: endpoint.method.toUpperCase(),\n      hostname: parsedUrl.hostname,\n      path: parsedUrl.path,\n      headers: self.buildHeaders(endpoint)\n    };\n\n    if (parsedUrl.port) {\n      reqOptions.port = parsedUrl.port;\n    }\n\n    return self._request.https(reqOptions, endpoint.args).then(function(res) {\n      return self.handleRedditResponse(res, endpoint);\n    });\n  };\n\n  /*\n     Returns a uniform error for all response errors.\n   */\n  self.getResponseError = function(message, response, endpoint) {\n\n    var responseError = new Error([\n      message,\n      '>>> Response Status: ' + response._status,\n      '>>> Endpoint URL: '+ endpoint.url,\n      '>>> Arguments: ' + JSON.stringify(endpoint.args, null, 2),\n      '>>> Response Body:',\n      response._body\n    ].join('\\n\\n'));\n\n    responseError.url = endpoint.url;\n    responseError.args = endpoint.args;\n    responseError.status = response._status;\n    responseError.body = response._body;\n    responseError.endpoint = endpoint;\n\n    return responseError;\n  };\n\n  /*\n     Handle a reddit 500 / server error. This will try to call the endpoint again\n     after the given retryDelay. If we do not have any retry attempts left, it\n     will reject the promise with the error.\n   */\n  self.handleServerErrorResponse = function(response, endpoint) {\n\n    endpoint.contextOptions.retryAttemptsLeft--;\n\n    var responseError = self.getResponseError('Server Error Response',\n                                              response,\n                                              endpoint);\n\n    responseError.retryAttemptsLeft = endpoint.contextOptions.retryAttemptsLeft;\n\n    self.emit('server_error', responseError);\n\n    if (endpoint.contextOptions.retryAttemptsLeft <= 0) {\n      responseError.message = ('All retry attempts exhausted.\\n\\n' +\n                               responseError.message);\n      return when.reject(responseError);\n    }\n\n    return delay(endpoint.contextOptions.retryDelay).then(function() {\n      return self.callRedditApi(endpoint);\n    });\n  };\n\n  /*\n     Handle a reddit 4xx / client error. This is usually caused when our\n     access_token has expired.\n\n     If we can't renew our access token, we throw an error / emit the\n     'access_token_expired' event that users can then handle to\n     re-authenticatet clients\n\n     If we can renew our access token, we try to reauthenticate, and call the\n     reddit endpoint again.\n   */\n  self.handleClientErrorResponse = function(response, endpoint) {\n\n    // - - -\n    // Check headers for more specific errors.\n\n    var wwwAuth = response._headers['www-authenticate'];\n\n    if (wwwAuth && wwwAuth.indexOf('insufficient_scope') !== -1) {\n      return when.reject(self.getResponseError(\n        'Insufficient scopes provided for this call',\n        response,\n        endpoint));\n    }\n\n    // - - -\n    // Parse the response for more specific errors.\n\n    try {\n      var data = JSON.parse(response._body);\n\n      if (data.reason === 'USER_REQUIRED') {\n        var msg = 'Must be authenticated with a user to make this call';\n        return when.reject(self.getResponseError(msg, response, endpoint));\n      }\n\n    } catch(e) {}\n\n    // - - -\n    // Access token has expired\n\n    if (response._status === 401) {\n\n      self.emit('access_token_expired');\n\n      var canRenewAccessToken = (isApplicationOnly() ||\n                                 self._oauth.hasRefreshToken() ||\n                                 self._userConfig.isOAuthType('script'));\n\n      if (!canRenewAccessToken) {\n        var errmsg = 'Access token has expired. Listen for ' +\n                     'the \"access_token_expired\" event to ' +\n                     'handle this gracefully in your app.';\n        return when.reject(self.getResponseError(errmsg, response, endpoint));\n      } else {\n\n        // Renew our access token\n\n        --endpoint.contextOptions.reauthAttemptsLeft;\n\n        if (endpoint.contextOptions.reauthAttemptsLeft <= 0) {\n          return when.reject(self.getResponseError(\n            'Unable to refresh the access_token.',\n            response,\n            endpoint));\n        }\n\n        var reauth;\n\n        // If we are application only, or are bypassing authentication\n        // therefore we're using application only OAuth\n        if (isApplicationOnly() || endpoint.contextOptions.bypassAuth) {\n          reauth = self._oauthAppOnly.applicationOnlyAuth();\n        } else {\n\n          // If we have been authenticated with a permanent refresh token use it\n          if (self._oauth.hasRefreshToken()) {\n            reauth = self._oauth.refresh();\n          }\n\n          // If we are OAuth type script we can call `.auth` again\n          if (self._userConfig.isOAuthType('script')) {\n            reauth = self._oauth.auth();\n          }\n\n        }\n\n        return reauth.then(function() {\n          return self.callRedditApi(endpoint);\n        });\n\n      }\n    }\n\n    // - - -\n    // At the end of the day, we just throw an error stating that there\n    // is nothing we can do & give general advice\n    return when.reject(self.getResponseError(\n      ('This call failed. ' +\n       'Is the user missing reddit gold? ' +\n       'Trying to change a subreddit that the user does not moderate? ' +\n       'This is an unrecoverable error.'),\n      response,\n      endpoint));\n  };\n\n  /*\n     Handle reddit response status of 2xx.\n\n     Finally return the data if there were no problems.\n   */\n  self.handleSuccessResponse = function(response, endpoint) {\n    var data = response._body || '';\n\n    if (endpoint.contextOptions.decodeHtmlEntities) {\n      data = he.decode(data);\n    }\n\n    // Attempt to parse some JSON, otherwise continue on (may be empty, or text)\n    try {\n      data = JSON.parse(data);\n    } catch(e) {}\n\n    return when.resolve(data);\n  };\n\n  /*\n     Handles various reddit response cases.\n   */\n  self.handleRedditResponse = function(response, endpoint) {\n\n    switch(String(response._status).substring(0, 1)) {\n      case '5':\n        return self.handleServerErrorResponse(response, endpoint);\n      case '4':\n        return self.handleClientErrorResponse(response, endpoint);\n      case '2':\n        return self.handleSuccessResponse(response, endpoint);\n    }\n\n    return when.reject(new Error(\n      'Invalid reddit response status of ' + response._status));\n  };\n\n  /*\n     Listing support.\n   */\n  function getListing(endpoint) {\n\n    // number of results that we have loaded so far. It will\n    // increase / decrease when calling next / previous.\n    var count = 0;\n    var limit = endpoint.args.limit || 25;\n    // keep a reference to the start of this listing\n    var start = endpoint.args.after || null;\n\n    function getSlice(endpoint) {\n\n      return self.callRedditApi(endpoint).then(function(result) {\n\n        var slice = {};\n        var listing = result || {};\n\n        slice.get = result || {};\n\n        if (result instanceof Array) {\n          if (typeof endpoint.contextOptions.listingIndex === 'undefined') {\n            throw new Error('Must specify a `listingIndex` for this listing.');\n          }\n\n          listing = result[endpoint.contextOptions.listingIndex];\n        }\n\n        slice.count = count;\n\n        slice.before = listing.data.before || null;\n        slice.after = listing.data.after || null;\n        slice.allChildren = listing.data.children || [];\n\n        slice.empty = slice.allChildren.length === 0;\n\n        slice.children = slice.allChildren.filter(function(child) {\n          return !child.data.stickied;\n        });\n\n        slice.stickied = slice.allChildren.filter(function(child) {\n          return child.data.stickied;\n        });\n\n        slice.next = function() {\n          count += limit;\n\n          var newArgs = endpoint.args;\n          newArgs.before = null;\n          newArgs.after = slice.children[slice.children.length - 1].data.name;\n          newArgs.count = count;\n          return getSlice(new Endpoint(self._userConfig,\n                                       endpoint.method,\n                                       endpoint.path,\n                                       newArgs,\n                                       endpoint.contextOptions));\n        };\n\n        slice.previous = function() {\n          count -= limit;\n\n          var newArgs = endpoint.args;\n          newArgs.before = slice.children[0].data.name;\n          newArgs.after = null;\n          newArgs.count = count;\n          return getSlice(new Endpoint(self._userConfig,\n                                       endpoint.method,\n                                       endpoint.path,\n                                       newArgs,\n                                       endpoint.contextOptions));\n        };\n\n        slice.start = function() {\n          count = 0;\n\n          var newArgs = endpoint.args;\n          newArgs.before = null;\n          newArgs.after = start;\n          newArgs.count = count;\n          return getSlice(new Endpoint(self._userConfig,\n                                       endpoint.method,\n                                       endpoint.path,\n                                       newArgs,\n                                       endpoint.contextOptions));\n        };\n\n        slice.requery = function() {\n          return getSlice(endpoint);\n        };\n\n        return slice;\n      });\n\n    }\n\n    return getSlice(endpoint);\n  }\n\n  /*\n     Enable path syntax support, e.g. self.path('/path/to/$endpoint/etc')\n\n     Can take an url as well, but the first part of the url is chopped\n     off because it is not needed. We will always use the server oauth\n     to call the API...\n\n     e.g. https://www.example.com/api/v1/me\n\n     will only use the path: /api/v1/me\n   */\n  self.path = function(urlOrPath) {\n\n    var parsed = urlLib.parse(urlOrPath);\n    var path = parsed.pathname;\n\n    var calls = {};\n\n    ['get', 'post', 'put', 'patch', 'delete', 'update'].forEach(function(verb) {\n      calls[verb] = function(userGivenArgs, userContextOptions) {\n        return self.callRedditApi(new Endpoint(self._userConfig,\n                                          verb,\n                                          path,\n                                          userGivenArgs,\n                                          userContextOptions));\n      };\n    });\n\n    // Add listing support\n    calls.listing = function(userGivenArgs, userContextOptions) {\n      return getListing(new Endpoint(self._userConfig,\n                                     'get',\n                                     path,\n                                     userGivenArgs,\n                                     userContextOptions));\n    };\n\n    return calls;\n  };\n\n\n\n  return self;\n}\n"],"sourceRoot":"/source/"}