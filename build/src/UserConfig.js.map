{"version":3,"sources":["UserConfig.js"],"names":[],"mappings":"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","file":"UserConfig.js","sourcesContent":["import utils from './utils';\n\n/*\n   A class made up of the user configuration.\n\n   Normalizes the configuraiton & checks for simple errors.\n\n   Provides some helper functons for getting user set values.\n */\nmodule.exports = UserConfig;\nfunction UserConfig(userConfiguration) {\n\n  var self = this;\n\n\n  //\n  // - - - CONFIGURATION VALUES - - -\n  //\n\n  var missingMsg = 'Missing required userConfiguration value ';\n\n  // ** SERVERS\n  self.serverOAuth = utils.thisOrThat(userConfiguration.serverOAuth,\n                                      'oauth.reddit.com');\n\n  self.serverWWW = utils.thisOrThat(userConfiguration.serverWWW,\n                                    'www.reddit.com');\n\n\n  // ** IDENFIFICATION\n  self.userAgent = utils.thisOrThrow(\n    userConfiguration.userAgent,\n    'Missing required userConfiguration value `userAgent`');\n\n  self.isNode = utils.thisOrThat(userConfiguration.browser, utils.isNode());\n\n  self.mobile = utils.thisOrThat(userConfiguration.mobile, false);\n\n  // ** CALL MODIFICATIONS\n  self.decodeHtmlEntities = utils.thisOrThat(\n    userConfiguration.decodeHtmlEntities,\n    false);\n\n  self.apiType = utils.thisOrThat(userConfiguration.apiType, 'json');\n\n\n\n  // ** RETRY ATTEMPTS\n  self.retryAttempts = utils.thisOrThat(userConfiguration.retryAttempts, 60);\n\n  self.retryDelay = utils.thisOrThat(userConfiguration.retryDelay, 5000);\n\n\n  // ** OAUTH\n  self.oauth = utils.thisOrThat(userConfiguration.oauth, {});\n\n  self.oauth.scope = utils.thisOrThat(self.oauth.scope, []);\n\n  self.oauth.deviceId = utils.thisOrThat(self.oauth.deviceId,\n                                         'DO_NOT_TRACK_THIS_DEVICE');\n  self.oauth.type = utils.thisOrThrow(self.oauth.type,\n                                      missingMsg + '`oauth.type`');\n  self.oauth.key = utils.thisOrThrow(self.oauth.key,\n                                     missingMsg + '`oauth.key`');\n\n\n  //\n  // - - - FUNCTIONS - - -\n  //\n\n  /*\n     Checks if the oauth is of a specific type, e.g.\n\n     isOAuthType('script')\n   */\n  self.isOAuthType = function(type) {\n    return self.oauth.type === type;\n  }\n\n\n  //\n  // - - - VALIDATION\n  //\n\n  if (!self.isOAuthType('explicit') &&\n    !self.isOAuthType('implicit') &&\n    !self.isOAuthType('script'))\n  {\n    throw new Error(\n      'Invalid `oauth.type`. Must be one of: explicit, implicit, or script');\n  }\n\n  if (self.isOAuthType('explicit') || self.isOAuthType('script')) {\n    self.oauth.secret = utils.thisOrThrow(\n      self.oauth.secret,\n      missingMsg + '`oauth.secret` for type explicit/script');\n  }\n\n\n  if (self.isOAuthType('script')) {\n    self.oauth.username = utils.thisOrThrow(\n      self.oauth.username,\n      missingMsg + '`oauth.username` for type script');\n    self.oauth.password = utils.thisOrThrow(\n      self.oauth.password,\n      missingMsg + '`oauth.password` for type script');\n  }\n\n  if (self.isOAuthType('implicit') || self.isOAuthType('explicit')) {\n    self.oauth.redirectUri = utils.thisOrThrow(\n      self.oauth.redirectUri,\n      missingMsg + '`oauth.redirectUri` for type implicit/explicit');\n  }\n\n  return self;\n}\n"],"sourceRoot":"/source/"}