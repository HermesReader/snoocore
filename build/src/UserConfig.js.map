{"version":3,"sources":["UserConfig.js"],"names":[],"mappings":"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","file":"UserConfig.js","sourcesContent":["import utils from './utils';\n\n/*\n   A class made up of the user configuration.\n\n   Normalizes the configuraiton & checks for simple errors.\n\n   Provides some helper functons for getting user set values.\n */\n\nexport default class UserConfig {\n  constructor(userConfiguration) {\n\n    //\n    // - - - CONFIGURATION VALUES - - -\n    //\n\n    var missingMsg = 'Missing required userConfiguration value ';\n\n    // ** SERVERS\n    this.serverOAuth = utils.thisOrThat(userConfiguration.serverOAuth,\n                                        'oauth.reddit.com');\n\n    this.serverWWW = utils.thisOrThat(userConfiguration.serverWWW,\n                                      'www.reddit.com');\n\n    // ** IDENFIFICATION\n    this.userAgent = utils.thisOrThrow(\n      userConfiguration.userAgent,\n      'Missing required userConfiguration value `userAgent`');\n\n    this.isNode = utils.thisOrThat(userConfiguration.browser, utils.isNode());\n\n    this.mobile = utils.thisOrThat(userConfiguration.mobile, false);\n\n    // ** CALL MODIFICATIONS\n    this.decodeHtmlEntities = utils.thisOrThat(\n      userConfiguration.decodeHtmlEntities,\n      false);\n\n    this.apiType = utils.thisOrThat(userConfiguration.apiType, 'json');\n\n\n    // ** RETRY ATTEMPTS\n    this.retryAttempts = utils.thisOrThat(userConfiguration.retryAttempts, 60);\n\n    this.retryDelay = utils.thisOrThat(userConfiguration.retryDelay, 5000);\n\n\n    // ** OAUTH\n    this.oauth = utils.thisOrThat(userConfiguration.oauth, {});\n\n    this.oauth.scope = utils.thisOrThat(this.oauth.scope, []);\n\n    this.oauth.deviceId = utils.thisOrThat(this.oauth.deviceId,\n                                           'DO_NOT_TRACK_THIS_DEVICE');\n    this.oauth.type = utils.thisOrThrow(this.oauth.type,\n                                        missingMsg + '`oauth.type`');\n    this.oauth.key = utils.thisOrThrow(this.oauth.key,\n                                       missingMsg + '`oauth.key`');\n\n\n    //\n    // - - - VALIDATION\n    //\n\n    if (!this.isOAuthType('explicit') &&\n      !this.isOAuthType('implicit') &&\n      !this.isOAuthType('script'))\n    {\n      throw new Error(\n        'Invalid `oauth.type`. Must be one of: explicit, implicit, or script');\n    }\n\n    if (this.isOAuthType('explicit') || this.isOAuthType('script')) {\n      this.oauth.secret = utils.thisOrThrow(\n        this.oauth.secret,\n        missingMsg + '`oauth.secret` for type explicit/script');\n    }\n\n\n    if (this.isOAuthType('script')) {\n      this.oauth.username = utils.thisOrThrow(\n        this.oauth.username,\n        missingMsg + '`oauth.username` for type script');\n      this.oauth.password = utils.thisOrThrow(\n        this.oauth.password,\n        missingMsg + '`oauth.password` for type script');\n    }\n\n    if (this.isOAuthType('implicit') || this.isOAuthType('explicit')) {\n      this.oauth.redirectUri = utils.thisOrThrow(\n        this.oauth.redirectUri,\n        missingMsg + '`oauth.redirectUri` for type implicit/explicit');\n    }\n  }\n\n  /*\n     Checks if the oauth is of a specific type, e.g.\n\n     isOAuthType('script')\n   */\n  isOAuthType(type) {\n    return this.oauth.type === type;\n  }\n\n}\n"],"sourceRoot":"/source/"}