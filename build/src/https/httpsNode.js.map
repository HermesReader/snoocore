{"version":3,"sources":["https/httpsNode.js"],"names":[],"mappings":";;;;;;;;;;;qBAIkB,OAAO;;;;oBAER,MAAM;;;;oBAEN,QAAQ;;;;;;;;qBAKV,UAAS,OAAO,EAAE,QAAQ,EAAE;;;;;AAKzC,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,SAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;;AAExC,UAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;;AAE1B,MAAI,IAAI,GAAG,kBAAK,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAElC,SAAO,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;;AAEnD,MAAI,OAAO,CAAC,MAAM,KAAK,KAAK,EAAE;AAC5B,WAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;GACxD;;;;;AAKD,MAAI,OAAO,CAAC,MAAM,KAAK,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;AAC7D,WAAO,CAAC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;GAC9C;;AAED,SAAO,kBAAK,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;;AAE5C,QAAI,GAAG,GAAG,mBAAM,OAAO,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE;;AAE7C,SAAG,CAAC,IAAI,GAAG,GAAG,CAAC;;AAEf,SAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACxB,UAAI,IAAI,GAAG,EAAE,CAAC;AACd,SAAG,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,KAAK,EAAE;AAAE,eAAO,MAAM,CAAC,KAAK,CAAC,CAAC;OAAE,CAAC,CAAC;AAC3D,SAAG,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,KAAK,EAAE;AAAE,YAAI,IAAI,KAAK,CAAC;OAAE,CAAC,CAAC;AACnD,SAAG,CAAC,EAAE,CAAC,KAAK,EAAE,YAAW;AACvB,WAAG,CAAC,KAAK,GAAG,IAAI,CAAC;AACjB,WAAG,CAAC,OAAO,GAAG,GAAG,CAAC,UAAU,CAAC;AAC7B,WAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,OAAO,CAAC;;;;AAI3B,eAAO,OAAO,CAAC,GAAG,CAAC,CAAC;OACrB,CAAC,CAAC;KACJ,CAAC,CAAC;;AAEH,QAAI,OAAO,CAAC,MAAM,KAAK,KAAK,EAAE;AAC5B,SAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACxB;;AAED,OAAG,CAAC,GAAG,EAAE,CAAC;GAEX,CAAC,CAAC,IAAI,CAAC,UAAS,GAAG,EAAE;;;AAGpB,WAAO,GAAG,CAAC;GACZ,CAAC,CAAC;CAEJ","file":"https/httpsNode.js","sourcesContent":["//\n// Node requests\n//\n\nimport https from 'https';\n\nimport when from 'when';\n\nimport form from './form';\n\n/*\n   Form data can be a raw string, or an object containing key/value pairs\n */\nexport default function(options, formData) {\n  // console.log('\\n\\n\\n\\n');\n  // console.log('>>> request');\n  // console.log(options.method + ': ' + options.hostname + options.path);\n\n  options = options || {};\n  options.headers = options.headers || {};\n\n  formData = formData || [];\n\n  var data = form.getData(formData);\n\n  options.headers['Content-Type'] = data.contentType;\n\n  if (options.method !== 'GET') {\n    options.headers['Content-Length'] = data.contentLength;\n  }\n\n  // console.log('\\n>>> headers\\n', options.headers);\n\n  // stick the data at the end of the url for GET requests\n  if (options.method === 'GET' && data.buffer.toString() !== '') {\n    options.path += '?' + data.buffer.toString();\n  }\n\n  return when.promise(function(resolve, reject) {\n\n    var req = https.request(options, function(res) {\n\n      res._req = req; // attach a reference back to the request\n\n      res.setEncoding('utf8');\n      var body = '';\n      res.on('error', function(error) { return reject(error); });\n      res.on('data', function(chunk) { body += chunk; });\n      res.on('end', function() {\n        res._body = body; // attach the response body to the object\n        res._status = res.statusCode;\n        res._headers = res.headers;\n\n        // console.log('\\n>>> body\\n', body);\n        // console.log('\\n>>> status\\n', res.statusCode);\n        return resolve(res);\n      });\n    });\n\n    if (options.method !== 'GET') {\n      req.write(data.buffer);\n    }\n\n    req.end();\n\n  }).then(function(res) {\n    // @TODO no endpoints except /logout require redirects, but if it's\n    // needed in the future we can handle it here\n    return res;\n  });\n\n}\n"],"sourceRoot":"/source/"}