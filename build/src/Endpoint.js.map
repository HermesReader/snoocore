{"version":3,"sources":["Endpoint.js"],"names":[],"mappings":"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","file":"Endpoint.js","sourcesContent":["import path from 'path';\n\nimport utils from './utils';\n\n// Precompiled list of properties for specific endpoints\nimport endpointProperties from '../endpointProperties';\n\n// Build a more parseable tree for the properties. Built here vs. simply\n// requiring an already build tree to save on bytes.\nvar PROPERTY_TREE = buildPropertyTree(endpointProperties);\n\nmodule.exports = Endpoint;\nfunction Endpoint(userConfig, method, endpointPath, givenArgs, contextOptions) {\n  var self = this;\n\n  self.method = method;\n  self.path = endpointPath;\n\n  self.properties = getProperties();\n\n  // if this endpoint requires the `api_type` string of \"json\"\n  // in it's request\n  self.needsApiTypeJson = self.properties.indexOf('a') !== -1;\n\n  self.contextOptions = normalizeContextOptions();\n  self.args = buildArgs();\n  self.url = buildUrl();\n\n  function getProperties() {\n    // remove leading slash if any\n    var sections = self.path.replace(/^\\//, '').split('/');\n\n    // the top level of the endpoint tree that we will traverse down\n    var leaf = PROPERTY_TREE;\n\n    var section;\n\n    for (var i = 0, len = sections.length; i < len; ++i) {\n      section = sections[i];\n\n      // We can go down further in the tree\n      if (typeof leaf[section] !== 'undefined') {\n        leaf = leaf[section];\n        continue;\n      }\n\n      // Check if there is a placeholder we can go down\n      if (typeof leaf['$'] !== 'undefined') {\n        leaf = leaf['$'];\n        continue;\n      }\n\n      break; // else, dead end\n    }\n\n    if (leaf._endpoints && leaf._endpoints[self.method]) {\n      return leaf._endpoints[self.method];\n    }\n\n    return '';\n  }\n\n  /*\n     Returns a set of options that effect how each call to reddit behaves.\n   */\n  function normalizeContextOptions() {\n\n    var cOptions = contextOptions || {};\n\n    // by default we do not bypass authentication\n    cOptions.bypassAuth = utils.thisOrThat(cOptions.bypassAuth, false);\n\n    // decode html enntities for this call?\n    cOptions.decodeHtmlEntities = utils.thisOrThat(cOptions.decodeHtmlEntities,\n                                                   userConfig.decodeHtmlEntities);\n\n    // how many attempts left do we have to retry an endpoint?\n\n    // use the given retryAttemptsLeft, or the retryAttempts passed in the\n    // context options if not specified\n    cOptions.retryAttemptsLeft = utils.thisOrThat(cOptions.retryAttemptsLeft,\n                                                  cOptions.retryAttempts);\n\n    // use the given retryAttemptsLeft, or the retryAttempts passed in the\n    // user configuration\n    cOptions.retryAttemptsLeft = utils.thisOrThat(cOptions.retryAttemptsLeft,\n                                                  userConfig.retryAttempts);\n\n    // delay between retrying an endpoint\n    cOptions.retryDelay = utils.thisOrThat(cOptions.retryDelay,\n                                           userConfig.retryDelay);\n\n    // how many reauthentication attempts do we have left?\n    cOptions.reauthAttemptsLeft = utils.thisOrThat(cOptions.reauthAttemptsLeft,\n                                                   cOptions.retryAttemptsLeft);\n\n    return cOptions;\n  }\n\n  /*\n     Build the arguments that we will send to reddit in our\n     request. These customize the request that we send to reddit\n   */\n  function buildArgs() {\n\n    givenArgs = givenArgs || {};\n    var args = {};\n\n    // Skip any url parameters (e.g. items that begin with $)\n    for (var key in givenArgs) {\n      if (key.substring(0, 1) !== '$') {\n        args[key] = givenArgs[key];\n      }\n    }\n\n    var apiType = utils.thisOrThat(self.contextOptions.api_type,\n                                   userConfig.apiType);\n\n    if (apiType && self.needsApiTypeJson) {\n      args.api_type = apiType;\n    }\n\n    return args;\n  }\n\n  /*\n     Builds the URL that we will query reddit with.\n   */\n  function buildUrl() {\n    var serverOAuth = utils.thisOrThat(self.contextOptions.serverOAuth,\n                                       userConfig.serverOAuth);\n\n    var url = 'https://' + path.join(serverOAuth, self.path);\n    url = replaceUrlParams(url, givenArgs);\n    return url;\n  }\n\n\n}\n\n\n/*\n   Converts a list of endpoint properties into a tree for\n   faster traversal during runtime.\n */\nmodule.exports.buildPropertyTree = buildPropertyTree;\nfunction buildPropertyTree(endpointProperties) {\n  var propertyTree = {};\n\n  Object.keys(endpointProperties).forEach(function(endpointPath) {\n\n    // get the properties for this endpoint\n    var properties = endpointProperties[endpointPath];\n\n    // get the sections to traverse down for this endpoint\n    var pathSections = endpointPath.split('/');\n\n    // the first element in this list is the endpoint method\n    var method = pathSections.shift().toLowerCase();\n\n    var leaf = propertyTree; // start at the root\n\n    // move down to where we need to be in the chain for this endpoint\n    var i = 0;\n    var len = pathSections.length;\n\n    for (; i < len - 1; ++i) {\n      if (typeof leaf[pathSections[i]] === 'undefined') {\n        leaf[pathSections[i]] = {};\n      }\n      leaf = leaf[pathSections[i]];\n    }\n\n    // push the endpoint to this section of the tree\n    if (typeof leaf[pathSections[i]] === 'undefined') {\n      leaf[pathSections[i]] = { _endpoints: {} };\n    }\n\n\n    leaf[pathSections[i]]._endpoints[method] = properties;\n  });\n\n  return propertyTree;\n}\n\n\n/*\n   Takes an url, and an object of url parameters and replaces\n   them, e.g.\n\n   endpointUrl:\n   'http://example.com/$foo/$bar/test.html'\n\n   givenArgs: { $foo: 'hello', $bar: 'world' }\n\n   would output:\n\n   'http://example.com/hello/world/test.html'\n */\n\nmodule.exports.replaceUrlParams = replaceUrlParams;\nfunction replaceUrlParams(endpointUrl, givenArgs) {\n  // nothing to replace!\n  if (endpointUrl.indexOf('$') === -1) {\n    return endpointUrl;\n  }\n\n  // pull out variables from the url\n  var params = endpointUrl.match(/\\$[\\w\\.]+/g);\n\n  // replace with the argument provided\n  params.forEach(function(param) {\n    if (typeof givenArgs[param] === 'undefined') {\n      throw new Error('missing required url parameter ' + param);\n    }\n    endpointUrl = endpointUrl.replace(param, givenArgs[param]);\n  });\n\n  return endpointUrl;\n}\n"],"sourceRoot":"/source/"}